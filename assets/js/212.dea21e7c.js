(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{572:function(t,a,_){"use strict";_.r(a);var v=_(7),r=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"缓存穿透"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存穿透"}},[t._v("#")]),t._v(" 缓存穿透")]),t._v(" "),a("p",[t._v("（恶意攻击、访问不存在数据）")]),t._v(" "),a("h2",{attrs:{id:"定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),a("ul",[a("li",[t._v("查询一个根本不存在的数据， 缓存层和存储层都不会命中")]),t._v(" "),a("li",[t._v("导致不存在的数据每次请求都要到存储层去查询， 失去了缓存保护后端存储的意义")])]),t._v(" "),a("h2",{attrs:{id:"原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原因"}},[t._v("#")]),t._v(" 原因")]),t._v(" "),a("ul",[a("li",[t._v("自身业务代码或者数据出现问题。")]),t._v(" "),a("li",[t._v("一些恶意攻击、 爬虫等造成大量空命中。")])]),t._v(" "),a("h2",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("缓存空对象，设置过期时间")])]),t._v(" "),a("li",[a("p",[t._v("redisson-布隆过滤器")]),t._v(" "),a("blockquote",[a("p",[t._v("某个值存在时，这个值可能不存在；当它说不存在时，那就肯定不存在")])])])]),t._v(" "),a("h1",{attrs:{id:"缓存失效-击穿"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存失效-击穿"}},[t._v("#")]),t._v(" 缓存失效(击穿)")]),t._v(" "),a("p",[t._v("（热点数据单个key）针对某一key缓存失效。")]),t._v(" "),a("p",[t._v("由于大批量缓存在同一时间失效可能导致大量请求同时穿透缓存直达数据库")]),t._v(" "),a("h2",{attrs:{id:"原因-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原因-2"}},[t._v("#")]),t._v(" 原因")]),t._v(" "),a("p",[t._v("一般都是批量设置热门商品/秒杀")]),t._v(" "),a("h2",{attrs:{id:"解决方案-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案-2"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),a("p",[t._v("将缓存过期时间设置为一个时间段内的不同时间")]),t._v(" "),a("h1",{attrs:{id:"缓存雪崩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存雪崩"}},[t._v("#")]),t._v(" 缓存雪崩")]),t._v(" "),a("p",[t._v("(同一时间失效，并发量大)很多key都失效了。")]),t._v(" "),a("ul",[a("li",[t._v("缓存层支撑不住后，大量请求到存储层，造成存储层也会级联宕机的情况.")]),t._v(" "),a("li",[t._v("在我们设置缓存时采用了相同的过期时间，导致缓存在某一时刻同时失效，请求全 部转发到DB，DB瞬时压力过重雪崩")])]),t._v(" "),a("h2",{attrs:{id:"解决方案-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案-3"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),a("ul",[a("li",[t._v("利用JetCache做二级缓存。")]),t._v(" "),a("li",[t._v("保证缓存层服务高可用性，比如使用Redis Sentinel或Redis Cluster。")]),t._v(" "),a("li",[t._v("后端架构层限流熔断并降级。比如使用Sentinel或Hystrix限流降级组件。")]),t._v(" "),a("li",[t._v("提前演练。 在项目上线前， 演练缓存层宕掉后， 应用以及后端的负载情况以及可能出现的问题， 在此基础上做一些预案设定。")])]),t._v(" "),a("h1",{attrs:{id:"热点缓存key重建优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#热点缓存key重建优化"}},[t._v("#")]),t._v(" 热点缓存key重建优化")]),t._v(" "),a("p",[t._v("某个商品是冷数据，突然变成热点数据，需要查询db放到redis中。缓存失效的瞬间， 有大量线程来重建缓存， 造成后端负载加大， 甚至可能会让应用崩溃")]),t._v(" "),a("h2",{attrs:{id:"解决方案-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案-4"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),a("p",[t._v("我们可以利用互斥锁来解决，此方法只允许一个线程重建缓存， 其他线程等待重建缓存的线程执行完")]),t._v(" "),a("h1",{attrs:{id:"缓存与数据库双写不一致"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存与数据库双写不一致"}},[t._v("#")]),t._v(" 缓存与数据库双写不一致")]),t._v(" "),a("ul",[a("li",[t._v("同时操作数据库与缓存会存在数据不一致性问题")]),t._v(" "),a("li",[t._v("双写不一致情况")]),t._v(" "),a("li",[t._v("读写并发不一致")])]),t._v(" "),a("h2",{attrs:{id:"解决方案-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案-5"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("延迟双删(推荐) ，第二次删除前sleep一下")])]),t._v(" "),a("li",[a("p",[t._v("定时器去做操作")]),t._v(" "),a("blockquote",[a("p",[t._v("非常不建议，比如要更新的数据怎么存?  定时和更新中的并发冲突怎么解决?")])])]),t._v(" "),a("li",[a("p",[t._v("内存队列，排队")])]),t._v(" "),a("li",[a("p",[t._v("对于并发几率很小的数据，加上过期时间，隔一段时间触发读的主动更新即可")])]),t._v(" "),a("li",[a("p",[t._v("并发很高，如果业务上能容忍短时间的缓存数据不一致")]),t._v(" "),a("p",[t._v("如果不能容忍缓存数据不一致，可以通过加读写锁保证并发读写或写写的时候按顺序排好队，读读的时候相当于无锁。")])]),t._v(" "),a("li",[a("p",[t._v("用阿里开源的canal通过监听数据库的binlog日志及时的去修改缓存，或者其他的中间件")])])]),t._v(" "),a("h2",{attrs:{id:"注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("p",[t._v("读多写少的情况加入缓存提高性能，写多读多的情况又不能容忍缓存数据不一致，那就没必要加缓存了，可以直接操作数据库。             放入缓存的数据应该是对实时性、一致性要求不是很高的数据。切记不要为了用缓存，同时又要保证绝对的一致性做大量的过度设计和控制，增加系统复杂性！")]),t._v(" "),a("h1",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/346529817",target:"_blank",rel:"noopener noreferrer"}},[t._v("面试官：缓存与数据库一致性如何解决？先操作数据库，还是缓存？"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);