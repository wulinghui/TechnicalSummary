(window.webpackJsonp=window.webpackJsonp||[]).push([[217],{577:function(t,s,a){"use strict";a.r(s);var n=a(7),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"mongodb索引数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mongodb索引数据结构"}},[t._v("#")]),t._v(" MongoDB索引数据结构")]),t._v(" "),s("ul",[s("li",[t._v("WiredTiger官方文档：介绍明确指出是B+树。（而不是B树）")]),t._v(" "),s("li",[t._v("mysql的调优经验再这里一样适用。")])]),t._v(" "),s("h1",{attrs:{id:"索引的分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引的分类"}},[t._v("#")]),t._v(" 索引的分类")]),t._v(" "),s("ul",[s("li",[t._v("按照索引包含的字段数量，可以分为单键索引和组合索引（或复合索引）。")]),t._v(" "),s("li",[t._v("按照索引字段的类型，可以分为主键索引和非主键索引。")]),t._v(" "),s("li",[t._v("按照索引节点与物理记录的对应方式来分，可以分为聚簇索引和非聚簇索引，其中聚簇索引是指索引节点上直接包含了数据记录，而后者则仅仅包含一个指向数据记录的指针。")]),t._v(" "),s("li",[t._v("按照索引的特性不同，又可以分为唯一索引、稀疏索引、文本索引、地理空间索引等")])]),t._v(" "),s("h1",{attrs:{id:"索引设计原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引设计原则"}},[t._v("#")]),t._v(" 索引设计原则")]),t._v(" "),s("ol",[s("li",[t._v("每个查询原则上都需要创建对应索引")]),t._v(" "),s("li",[t._v("单个索引设计应考虑满足尽量多的查询")]),t._v(" "),s("li",[t._v("索引字段选择及顺序需要考虑查询覆盖率及选择性")]),t._v(" "),s("li",[t._v("对于更新及其频繁的字段上创建索引需慎重")]),t._v(" "),s("li",[t._v("对于数组索引需要慎重考虑未来元素个数")]),t._v(" "),s("li",[t._v("对于超长字符串类型字段上慎用索引")]),t._v(" "),s("li",[t._v("并发更新较高的单个集合上不宜创建过多索引")])]),t._v(" "),s("h1",{attrs:{id:"索引操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引操作"}},[t._v("#")]),t._v(" 索引操作")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建索引语法格式")]),t._v("\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("collection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看索引信息")]),t._v("\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("books"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getIndexes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看索引键")]),t._v("\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("books"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getIndexKeys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看索引占用空间")]),t._v("\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("collection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("totalIndexSize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("is_detail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除集合指定索引")]),t._v("\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("col"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dropIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"索引名称"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  删除集合所有索引   不能删除主键索引")]),t._v("\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("col"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dropIndexes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("p",[t._v("可选参数列表如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("Parameter")])]),t._v(" "),s("th",[s("strong",[t._v("Type")])]),t._v(" "),s("th",[s("strong",[t._v("Description")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("background")]),t._v(" "),s("td",[t._v("Boolean")]),t._v(" "),s("td",[t._v('建索引过程会阻塞其它数据库操作，background可指定以后台方式创建索引，即增加 "background" 可选参数。 "background" 默认值为false。')])]),t._v(" "),s("tr",[s("td",[t._v("unique")]),t._v(" "),s("td",[t._v("Boolean")]),t._v(" "),s("td",[t._v("建立的索引是否唯一。指定为true创建唯一索引。默认值为false.")])]),t._v(" "),s("tr",[s("td",[t._v("name")]),t._v(" "),s("td",[t._v("string")]),t._v(" "),s("td",[t._v("索引的名称。如果未指定，MongoDB的通过连接索引的字段名和排序顺序生成一个索引名称。")])]),t._v(" "),s("tr",[s("td",[t._v("dropDups")]),t._v(" "),s("td",[t._v("Boolean")]),t._v(" "),s("td",[t._v("3.0+版本已废弃。在建立唯一索引时是否删除重复记录,指定 true 创建唯一索引。默认值为 false.")])]),t._v(" "),s("tr",[s("td",[t._v("sparse")]),t._v(" "),s("td",[t._v("Boolean")]),t._v(" "),s("td",[t._v("对文档中不存在的字段数据不启用索引；这个参数需要特别注意，如果设置为true的话，在索引字段中不会查询出不包含对应字段的文档。默认值为 false.")])]),t._v(" "),s("tr",[s("td",[t._v("expireAfterSeconds")]),t._v(" "),s("td",[t._v("integer")]),t._v(" "),s("td",[t._v("指定一个以秒为单位的数值，完成 TTL设定，设定集合的生存时间。")])]),t._v(" "),s("tr",[s("td",[t._v("v")]),t._v(" "),s("td",[t._v("index version")]),t._v(" "),s("td",[t._v("索引的版本号。默认的索引版本取决于mongod创建索引时运行的版本。")])]),t._v(" "),s("tr",[s("td",[t._v("weights")]),t._v(" "),s("td",[t._v("document")]),t._v(" "),s("td",[t._v("索引权重值，数值在 1 到 99,999 之间，表示该索引相对于其他索引字段的得分权重。")])]),t._v(" "),s("tr",[s("td",[t._v("default_language")]),t._v(" "),s("td",[t._v("string")]),t._v(" "),s("td",[t._v("对于文本索引，该参数决定了停用词及词干和词器的规则的列表。 默认为英语")])]),t._v(" "),s("tr",[s("td",[t._v("language_override")]),t._v(" "),s("td",[t._v("string")]),t._v(" "),s("td",[t._v("对于文本索引，该参数指定了包含在文档中的字段名，语言覆盖默认的language，默认值为 language.")])])])]),t._v(" "),s("h1",{attrs:{id:"索引类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引类型"}},[t._v("#")]),t._v(" 索引类型")]),t._v(" "),s("h2",{attrs:{id:"单键索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单键索引"}},[t._v("#")]),t._v(" 单键索引")]),t._v(" "),s("p",[t._v("某一个特定的字段上建立索引")]),t._v(" "),s("p",[s("code",[t._v("db.inventory.createIndex( { item:1 },{unique:true,background: true} )")]),t._v("   // 创建唯一索引后台执行")]),t._v(" "),s("h2",{attrs:{id:"复合索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复合索引"}},[t._v("#")]),t._v(" 复合索引")]),t._v(" "),s("p",[t._v("多个字段组合而成的索引")]),t._v(" "),s("p",[s("code",[t._v("db.inventory.createIndex( { item:1,ratings: 1 } )")])]),t._v(" "),s("h2",{attrs:{id:"多键索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多键索引"}},[t._v("#")]),t._v(" 多键索引")]),t._v(" "),s("p",[t._v("在数组的属性上建立索引，多键索引也可以出现在复合字段上")]),t._v(" "),s("p",[s("code",[t._v("db.inventory.createIndex( { ratings: 1 } )")])]),t._v(" "),s("p",[t._v("针对这个数组的任意值的查询都会定位到这个文档,既多个索引入口或者键值引用同一个文档")]),t._v(" "),s("p",[t._v("**注意：**MongoDB并不支持一个复合索引中同时出现多个数组字段")]),t._v(" "),s("h2",{attrs:{id:"地理空间索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#地理空间索引"}},[t._v("#")]),t._v(" 地理空间索引")]),t._v(" "),s("p",[t._v("地理空间索引（2dsphereindex）就是专门用于实现位置检索的一种特殊索引。")]),t._v(" "),s("p",[s("code",[t._v('db.restaurant.createIndex({location : "2dsphere"})')])]),t._v(" "),s("h2",{attrs:{id:"全文索引-text-indexes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全文索引-text-indexes"}},[t._v("#")]),t._v(" 全文索引（Text Indexes）")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stores"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  通过$text操作符来查寻数据中所有包含“coffee”,”shop”，“java”列表中任何词语的商店")]),t._v("\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stores"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("$text")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("$search")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"java coffee shop"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("strong",[t._v("注意：")]),t._v(" MongoDB的文本索引功能存在诸多限制，而官方并未提供中文分词的功能")]),t._v(" "),s("h2",{attrs:{id:"hash索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash索引"}},[t._v("#")]),t._v(" Hash索引")]),t._v(" "),s("p",[t._v("在索引字段上进行精确匹配,但不支持范围查询,不支持多键hash；")]),t._v(" "),s("p",[s("code",[t._v("db.users.createIndex({username : 'hashed'})")])]),t._v(" "),s("h2",{attrs:{id:"通配符索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通配符索引"}},[t._v("#")]),t._v(" 通配符索引")]),t._v(" "),s("p",[t._v("支持对未知或任意字段的查询")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("products"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"product_attributes.$**"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下面都会走索引。")]),t._v("\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("products"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"product_attributes.size.length"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("$gt")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("products"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"product_attributes.material"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Leather"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("products"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"product_attributes.secret_feature.name"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"laser"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[s("strong",[t._v("注意：")])]),t._v(" "),s("ol",[s("li",[t._v("通配符索引不兼容的索引类型或属性。 TTL、TEXT、2D、unique、hashed")]),t._v(" "),s("li",[t._v("通配符索引是稀疏的，不索引空字段。因此，通配符索引不能支持查询字段不存在的文档。")]),t._v(" "),s("li",[t._v("通配符索引为文档或数组的内容生成条目，而不是文档/数组本身。因此通配符索引不能支持精确的文档/数组相等匹配。")])]),t._v(" "),s("h1",{attrs:{id:"索引属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引属性"}},[t._v("#")]),t._v(" 索引属性")]),t._v(" "),s("h2",{attrs:{id:"唯一索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#唯一索引"}},[t._v("#")]),t._v(" 唯一索引")]),t._v(" "),s("p",[t._v("唯一性是很常见的一种索引约束需求。")]),t._v(" "),s("ul",[s("li",[t._v("唯一性索引对于文档中缺失的字段，会使用null值代替。")]),t._v(" "),s("li",[t._v("可以用它来指定某些字段必输。")]),t._v(" "),s("li",[t._v("对于分片的集合，唯一性约束必须匹配分片规则。")])]),t._v(" "),s("h2",{attrs:{id:"部分索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部分索引"}},[t._v("#")]),t._v(" 部分索引")]),t._v(" "),s("p",[t._v("仅对满足指定过滤器表达式的文档进行索引。")]),t._v(" "),s("p",[t._v("部分索引具有更低的存储需求和更低的索引创建和维护的性能成本。")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// partialFilterExpression选项接受指定过滤条件的文档")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    等式表达式(例如:field: value或使用$eq操作符)\n    $exists: true\n    $gt， $gte， $lt， $lte\n    $type \n    顶层的$and\n**/")]),t._v("\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("restaurants"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("cuisine")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("partialFilterExpression")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("rating")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("$gt")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 符合条件，使用索引")]),t._v("\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("restaurants"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("cuisine")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Italian"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("rating")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("$gte")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不符合条件，不能使用索引")]),t._v("\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("restaurants"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("cuisine")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Italian"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])]),s("p",[t._v("注意:  "),s("strong",[t._v("唯一约束结合部分索引使用导致唯一约束失效的问题")])]),t._v(" "),s("p",[t._v("如果同时指定了partialFilterExpression和唯一约束，那么唯一约束只适用于满足筛选器表达式的文档。")]),t._v(" "),s("p",[t._v("如果文档不满足筛选条件，那么带有惟一约束的部分索引不会阻止插入不满足惟一约束的文档。")]),t._v(" "),s("p",[t._v("也就是说不满足部分索引条件的还可以插入成功。")]),t._v(" "),s("h2",{attrs:{id:"稀疏索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#稀疏索引"}},[t._v("#")]),t._v(" 稀疏索引")]),t._v(" "),s("p",[t._v("索引只包含具有索引字段的文档的条目，索引将跳过没有索引字段的文档。")]),t._v(" "),s("p",[t._v("特性： 只对存在字段的文档进行索引（包括字段值为null的文档）")]),t._v(" "),s("p",[t._v("同时具有稀疏性和唯一性的索引可以防止集合中存在字段值重复的文档，但允许不包含此索引字段的文档插入。")]),t._v(" "),s("p",[s("strong",[t._v("注意:")]),t._v("  如果稀疏索引会导致查询和排序操作的结果集不完整，MongoDB将不会使用该索引，除非hint()明确指定索引。")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("# 创建具有唯一约束的稀疏索引\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scores"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("score")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("sparse")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("unique")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h2",{attrs:{id:"ttl索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ttl索引"}},[t._v("#")]),t._v(" TTL索引")]),t._v(" "),s("p",[t._v("需要声明在一个日期类型的字段中，TTL 索引是特殊的单字段索引，MongoDB 可以使用它在一定时间或特定时钟时间后自动从集合中删除文档。")]),t._v(" "),s("p",[t._v("TTL 索引不保证过期数据会在过期后立即被删除。文档过期和 MongoDB 从数据库中删除文档的时间之间可能存在延迟。删除过期文档的后台任务"),s("strong",[t._v("每 60 秒")]),t._v("运行一次。因此，在文档到期和后台任务运行之间的时间段内，文档可能会保留在集合中。")]),t._v(" "),s("h3",{attrs:{id:"可变的过期时间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可变的过期时间"}},[t._v("#")]),t._v(" 可变的过期时间")]),t._v(" "),s("p",[t._v("TTL索引在创建之后，仍然可以对过期时间进行修改。")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eventlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"lastModifiedDate"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("expireAfterSeconds")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重置过期时间")]),t._v("\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("runCommand")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("collMod")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log_events"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("index")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("keyPattern")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("createdAt")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("expireAfterSeconds")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("600")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"使用约束"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用约束"}},[t._v("#")]),t._v(" 使用约束")]),t._v(" "),s("ul",[s("li",[t._v("TTL索引只能支持单个字段，并且必须是非_id字段。")]),t._v(" "),s("li",[t._v("TTL索引不能用于固定集合。")]),t._v(" "),s("li",[t._v("TTL索引无法保证及时的数据老化，60s的延迟")]),t._v(" "),s("li",[t._v("TTL索引对于数据的清理仅仅使用了remove命令，这种方式并不是很高效。 （相比之下，按日期分表的方式操作会更加高效。）")])]),t._v(" "),s("h2",{attrs:{id:"隐藏索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐藏索引"}},[t._v("#")]),t._v(" 隐藏索引")]),t._v(" "),s("p",[t._v("隐藏索引对查询规划器不可见，不能用于支持查询。")]),t._v(" "),s("p",[t._v("通过对规划器隐藏索引，用户可以在不实际删除索引的情况下评估删除索引的潜在影响。如果影响是负面的，用户可以取消隐藏索引，而不必重新创建已删除的索引。")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("创建隐藏索引\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("restaurants"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("borough")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("hidden")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n# 隐藏现有索引\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("restaurants"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hideIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("borough")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("restaurants"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hideIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"索引名称"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n# 取消隐藏索引\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("restaurants"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unhideIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("borough")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("restaurants"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unhideIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"索引名称"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h1",{attrs:{id:"索引使用建议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引使用建议"}},[t._v("#")]),t._v(" 索引使用建议")]),t._v(" "),s("ol",[s("li",[t._v("为每一个查询建立合适的索引")]),t._v(" "),s("li",[t._v("创建合适的复合索引，不要依赖于交叉索引")]),t._v(" "),s("li",[t._v("复合索引字段顺序：匹配条件在前，范围条件在后")]),t._v(" "),s("li",[t._v("尽可能使用覆盖索引")]),t._v(" "),s("li",[t._v("建索引要在后台运行")]),t._v(" "),s("li",[t._v("避免设计过长的数组索引")])]),t._v(" "),s("h1",{attrs:{id:"explain执行计划"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#explain执行计划"}},[t._v("#")]),t._v(" explain执行计划")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("collection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("explain")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("verbose"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                              ")]),t._v("\ndb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("books"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"book-1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("explain")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"queryPlanner"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                             \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("verbose 如下:   默认queryPlanner")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("模式名字")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("queryPlanner")]),t._v(" "),s("td",[t._v("执行计划的详细信息，包括查询计划、集合信息、查询条件、最佳执行计划、查询方式和 MongoDB 服务信息等")])]),t._v(" "),s("tr",[s("td",[t._v("exectionStats")]),t._v(" "),s("td",[t._v("最佳执行计划的执行情况和被拒绝的计划等信息")])]),t._v(" "),s("tr",[s("td",[t._v("allPlansExecution")]),t._v(" "),s("td",[t._v("选择并执行最佳执行计划，并返回最佳执行计划和其他执行计划的执行情况")])])])]),t._v(" "),s("h2",{attrs:{id:"queryplanner"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#queryplanner"}},[t._v("#")]),t._v(" queryPlanner")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("字段名称")])]),t._v(" "),s("th",[s("strong",[t._v("描述")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("indexFilterSet")]),t._v(" "),s("td",[t._v("是否使用索引")])]),t._v(" "),s("tr",[s("td",[t._v("parsedQuery")]),t._v(" "),s("td",[t._v("查询条件")])]),t._v(" "),s("tr",[s("td",[t._v("winningPlan")]),t._v(" "),s("td",[t._v("最佳执行计划")])]),t._v(" "),s("tr",[s("td",[t._v("stage")]),t._v(" "),s("td",[t._v("查询方式，在winningPlan里面")])]),t._v(" "),s("tr",[s("td",[t._v("filter")]),t._v(" "),s("td",[t._v("过滤条件")])])])]),t._v(" "),s("h2",{attrs:{id:"stage状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stage状态"}},[t._v("#")]),t._v(" stage状态")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("状态")])]),t._v(" "),s("th",[s("strong",[t._v("描述")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("COLLSCAN")]),t._v(" "),s("td",[t._v("全表扫描")])]),t._v(" "),s("tr",[s("td",[t._v("IXSCAN")]),t._v(" "),s("td",[t._v("索引扫描")])]),t._v(" "),s("tr",[s("td",[t._v("FETCH")]),t._v(" "),s("td",[t._v("根据索引检索指定文档")])]),t._v(" "),s("tr",[s("td",[t._v("SHARD_MERGE")]),t._v(" "),s("td",[t._v("将各个分片返回数据进行合并")])]),t._v(" "),s("tr",[s("td",[t._v("SORT")]),t._v(" "),s("td",[t._v("在内存中进行了排序")])]),t._v(" "),s("tr",[s("td",[t._v("LIMIT")]),t._v(" "),s("td",[t._v("使用limit限制返回数")])]),t._v(" "),s("tr",[s("td",[t._v("SKIP")]),t._v(" "),s("td",[t._v("使用skip进行跳过")])]),t._v(" "),s("tr",[s("td",[t._v("IDHACK")]),t._v(" "),s("td",[t._v("对_id进行查询")])]),t._v(" "),s("tr",[s("td",[t._v("SHARDING_FILTER")]),t._v(" "),s("td",[t._v("通过mongos对分片数据进行查询")])]),t._v(" "),s("tr",[s("td",[t._v("COUNTSCAN")]),t._v(" "),s("td",[t._v("count不使用Index进行count时的stage返回")])]),t._v(" "),s("tr",[s("td",[t._v("COUNT_SCAN")]),t._v(" "),s("td",[t._v("count使用了Index进行count时的stage返回")])]),t._v(" "),s("tr",[s("td",[t._v("SUBPLA")]),t._v(" "),s("td",[t._v("未使用到索引的$or查询的stage返回")])]),t._v(" "),s("tr",[s("td",[t._v("TEXT")]),t._v(" "),s("td",[t._v("使用全文索引进行查询时候的stage返回")])]),t._v(" "),s("tr",[s("td",[t._v("PROJECTION")]),t._v(" "),s("td",[t._v("限定返回字段时候stage的返回")])])])]),t._v(" "),s("p",[t._v("执行计划的返回结果中尽量不要出现以下stage:")]),t._v(" "),s("ul",[s("li",[t._v("COLLSCAN(全表扫描)")]),t._v(" "),s("li",[t._v("SORT(使用sort但是无index)")]),t._v(" "),s("li",[t._v("不合理的SKIP")]),t._v(" "),s("li",[t._v("SUBPLA(未用到index的$or)")]),t._v(" "),s("li",[t._v("COUNTSCAN(不使用index进行count)")])])])}),[],!1,null,null,null);s.default=r.exports}}]);