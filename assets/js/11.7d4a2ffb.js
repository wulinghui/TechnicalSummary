(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{369:function(s,e,t){"use strict";t.r(e);var a=t(7),r=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"docker概念介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker概念介绍"}},[s._v("#")]),s._v(" Docker概念介绍")]),s._v(" "),e("h2",{attrs:{id:"_1-docker架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-docker架构"}},[s._v("#")]),s._v(" 1. Docker架构")]),s._v(" "),e("p",[e("img",{attrs:{src:"img/7868545-060cc40d94102469-16468856250622.jpg",alt:"img"}})]),s._v(" "),e("p",[s._v("从上图得知，Docker分为三部分，"),e("code",[s._v("客户端")]),s._v("，"),e("code",[s._v("Docker服务端")]),s._v("，"),e("code",[s._v("仓库")]),s._v("。")]),s._v(" "),e("h3",{attrs:{id:"_1-1-客户端"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-客户端"}},[s._v("#")]),s._v(" 1.1 客户端")]),s._v(" "),e("p",[s._v("平常我们使用的就是客户端，通过客户端"),e("code",[s._v("命令")]),s._v("和Docker引擎进行交互")]),s._v(" "),e("p",[s._v("Docker 是一个客户端-服务器（C/S）架构程序。")]),s._v(" "),e("p",[s._v("Docker 客户端只需要向 Docker 服务端发起请求，服务端将完成所有的工作并返回相应结果。")]),s._v(" "),e("p",[s._v("Docker 提供了一个命令行工具 "),e("code",[s._v("docker")]),s._v(" 以及一整套 RESTful API。")]),s._v(" "),e("p",[s._v("比如：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull \n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("客户端可以和服务端在一台宿主机上，也可以不在")])]),s._v(" "),e("h3",{attrs:{id:"_1-2-docker服务端"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-docker服务端"}},[s._v("#")]),s._v(" 1.2 Docker服务端")]),s._v(" "),e("p",[s._v("Docker服务端 又称为Docker主机，Docker引擎，Docker守护进程。")]),s._v(" "),e("p",[s._v("依托于"),e("code",[s._v("宿主机")]),s._v("，守护进程，用于管理镜像，容器，执行客户端命令等。")]),s._v(" "),e("h3",{attrs:{id:"_1-3-仓库registry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-仓库registry"}},[s._v("#")]),s._v(" 1.3 仓库Registry")]),s._v(" "),e("p",[s._v("Docker有两个重要的概念"),e("code",[s._v("镜像")]),s._v("和"),e("code",[s._v("容器")]),s._v("。")]),s._v(" "),e("p",[s._v("镜像可以理解为就是软件安装包，容器就是软件安装完成后可运行的状态。")]),s._v(" "),e("p",[s._v("既然镜像是软件安装包，那么这个安装包从哪下载呢？")]),s._v(" "),e("p",[s._v("Docker推出了"),e("code",[s._v("Registry")]),s._v("这个概念，一般有人也称为是 注册中心，当我们需要发布Docker镜像（Docker专用软件安装包）的时候，就需要将镜像发布到注册中心上，这样其他人就可以下载使用。")]),s._v(" "),e("p",[s._v("Registry 分为"),e("code",[s._v("公共")]),s._v("和"),e("code",[s._v("私有")]),s._v("两种。Docker 公司运营公共的 Registry 叫做 "),e("code",[s._v("Docker Hub")]),s._v("，地址为："),e("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://hub.docker.com"),e("OutboundLink")],1)]),s._v(" "),e("ul",[e("li",[e("p",[s._v("一个 Docker Registry 中可以包含多个仓库（Repository）")])]),s._v(" "),e("li",[e("p",[s._v("每个仓库可以包含多个标签（Tag）")])]),s._v(" "),e("li",[e("p",[s._v("每个标签对应一个镜像")])])]),s._v(" "),e("p",[s._v("通常，一个仓库会包含同一个软件不同版本的镜像，而标签对应该软件的各个版本。我们可以通过 "),e("strong",[s._v("「<仓库名>:<标签>」")]),s._v(" 的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将以 "),e("strong",[s._v("「latest」")]),s._v(" 作为默认标签。")]),s._v(" "),e("h2",{attrs:{id:"_2-镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-镜像"}},[s._v("#")]),s._v(" 2. 镜像")]),s._v(" "),e("p",[s._v("上面我们提到，"),e("code",[s._v("镜像可以理解为就是软件安装包")]),s._v("，但是这个软件安装包和我们理解意义上是不一样的，一个Docker镜像是"),e("code",[s._v("一个完整的操作系统的描述")]),s._v("。")]),s._v(" "),e("p",[s._v("什么意思呢？")]),s._v(" "),e("p",[s._v("就是一个Docker镜像描述了，"),e("code",[s._v("需要运行的程序以及运行程序所处的操作系统")])]),s._v(" "),e("p",[s._v("那不同的镜像区别在哪里呢？镜像中的操作系统中安装的软件不同，运行的程序不同。")]),s._v(" "),e("p",[s._v("当然镜像只是一个可执行的包，其中包括运行应用程序所需要的所有内容：包含代码，运行时间，库，环境变量和配置文件等。")]),s._v(" "),e("p",[s._v("真正运行，我们需要"),e("code",[s._v("通过镜像启动容器")]),s._v("。")]),s._v(" "),e("p",[s._v("容器才是真正的可运行的操作系统。")]),s._v(" "),e("p",[s._v("Docker 把 App 文件打包成为一个镜像，并且采用类似多次快照的存储技术，可以实现：")]),s._v(" "),e("ul",[e("li",[s._v("多个 App 可以共用相同的底层镜像（初始的操作系统镜像）；")]),s._v(" "),e("li",[s._v("App 运行时的 IO 操作和镜像文件隔离；")]),s._v(" "),e("li",[s._v("通过挂载包含不同配置/数据文件的目录或者卷（Volume），单个 App 镜像可以用来运行无数个不同业务的容器。")])]),s._v(" "),e("h2",{attrs:{id:"_3-容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-容器"}},[s._v("#")]),s._v(" 3. 容器")]),s._v(" "),e("p",[s._v("镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和实例一样，镜像是静态的定义，容器是镜像运行时的实体。")]),s._v(" "),e("p",[s._v("容器可以被创建、启动、停止、删除、暂停等。")]),s._v(" "),e("p",[e("strong",[s._v("注意：容器运行需要指定镜像，当容器运行后，一个容器就相当于一个虚拟的完整的操作系统，比如你通过mysql的镜像来安装mysql，当mysql的容器启动后，就相当于开启了一个操作系统，mysql只是安装在此容器内部的操作系统中，我们可以进入容器内部操作mysql（和正常操作系统一致），也可以通过docker命令来操作")])]),s._v(" "),e("h2",{attrs:{id:"_4-安装docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-安装docker"}},[s._v("#")]),s._v(" 4. 安装docker")]),s._v(" "),e("p",[s._v("官方文档教程：https://docs.docker.com/engine/install/centos/")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("卸载原有的版本")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum remove "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-client "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-client-latest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-common "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-latest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-latest-logrotate "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-logrotate "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-engine\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("安装 "),e("code",[s._v("yum-utils")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" yum-utils\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("添加阿里云镜像")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("安装")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce docker-ce-cli containerd.io\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("启动并加入开机启动")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n\n\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);