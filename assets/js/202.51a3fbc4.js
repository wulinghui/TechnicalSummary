(window.webpackJsonp=window.webpackJsonp||[]).push([[202],{562:function(t,r,_){"use strict";_.r(r);var e=_(7),a=Object(e.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"索引定义"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#索引定义"}},[t._v("#")]),t._v(" 索引定义")]),t._v(" "),r("p",[t._v("索引是帮助MySQL高效获取数据的排好序的数据结构")]),t._v(" "),r("h1",{attrs:{id:"数据结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),r("h2",{attrs:{id:"hash表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hash表"}},[t._v("#")]),t._v(" Hash表")]),t._v(" "),r("p",[t._v("咯")]),t._v(" "),r("h2",{attrs:{id:"b-tree"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#b-tree"}},[t._v("#")]),t._v(" B+Tree")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("二叉树")])]),t._v(" "),r("li",[r("p",[t._v("红黑树(自平衡二叉树)")])]),t._v(" "),r("li",[r("p",[t._v("B-Tree")]),t._v(" "),r("blockquote",[r("ul",[r("li",[t._v("一个节点下面有多个")]),t._v(" "),r("li",[t._v("所有索引元素不重复")]),t._v(" "),r("li",[t._v("节点中的数据索引从左到右递增排列")]),t._v(" "),r("li",[t._v("叶节点具有相同的深度，叶节点的指针为空")])])])]),t._v(" "),r("li",[r("p",[t._v("B+Tree")]),t._v(" "),r("blockquote",[r("ul",[r("li",[t._v("非叶子节点不存储data，只存储索引(冗余)和下层指针，以便放更多的索引")]),t._v(" "),r("li",[t._v("叶子节点包含所有索引字段 ，和数据")]),t._v(" "),r("li",[t._v("叶子节点用双指针连接，提高区间访问的性能")])])])])]),t._v(" "),r("h2",{attrs:{id:"倒排索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#倒排索引"}},[t._v("#")]),t._v(" 倒排索引")]),t._v(" "),r("h2",{attrs:{id:"r-tree"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#r-tree"}},[t._v("#")]),t._v(" R-tree")]),t._v(" "),r("h1",{attrs:{id:"索引类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#索引类型"}},[t._v("#")]),t._v(" 索引类型")]),t._v(" "),r("h2",{attrs:{id:"底层数据结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#底层数据结构"}},[t._v("#")]),t._v(" 底层数据结构")]),t._v(" "),r("h3",{attrs:{id:"hash索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hash索引"}},[t._v("#")]),t._v(" hash索引")]),t._v(" "),r("p",[t._v("不支持范围查询")]),t._v(" "),r("h3",{attrs:{id:"b-树索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#b-树索引"}},[t._v("#")]),t._v(" B+树索引")]),t._v(" "),r("h3",{attrs:{id:"全文索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#全文索引"}},[t._v("#")]),t._v(" 全文索引")]),t._v(" "),r("ul",[r("li",[t._v("倒排索引")]),t._v(" "),r("li",[t._v("全文索引只能用于数据库引擎为MYISAM的数据表，5.6以后支持了")]),t._v(" "),r("li",[t._v("MySql自带的全文索引只能对英文进行全文检索，目前无法对中文进行全文检索，如果需要对包含中文在内的文本数据进行全文检索，需要采用Sphinx（斯芬克斯）/Coreseek技术来处理中文。")]),t._v(" "),r("li",[t._v("一般我们用es来做全文/分词 搜索.")])]),t._v(" "),r("h3",{attrs:{id:"r-tree-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#r-tree-2"}},[t._v("#")]),t._v(" R-tree")]),t._v(" "),r("ul",[r("li",[t._v("空间数据索引")]),t._v(" "),r("li",[t._v("myisam支持空间索引，可以用作地理数据存储")])]),t._v(" "),r("h2",{attrs:{id:"索引字段个数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#索引字段个数"}},[t._v("#")]),t._v(" 索引字段个数")]),t._v(" "),r("h3",{attrs:{id:"单值索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单值索引"}},[t._v("#")]),t._v(" 单值索引")]),t._v(" "),r("h3",{attrs:{id:"复合-联合-索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#复合-联合-索引"}},[t._v("#")]),t._v(" 复合(联合)索引")]),t._v(" "),r("ul",[r("li",[t._v("存储结构: order by A,B,C")]),t._v(" "),r("li",[t._v("最左前缀原理")])]),t._v(" "),r("h2",{attrs:{id:"是否是在主键上建立的索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#是否是在主键上建立的索引"}},[t._v("#")]),t._v(" 是否是在主键上建立的索引")]),t._v(" "),r("ul",[r("li",[t._v("主键索引")]),t._v(" "),r("li",[t._v("辅助索引(非主键索引)(二级索引)")])]),t._v(" "),r("h2",{attrs:{id:"索引的存储关联"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#索引的存储关联"}},[t._v("#")]),t._v(" 索引的存储关联")]),t._v(" "),r("ul",[r("li",[t._v("聚集/聚簇索引 :  叶节点包含了完整的数据记录，不需要回表")]),t._v(" "),r("li",[t._v("非聚集索引   :  回表操作，影响性能")])]),t._v(" "),r("h2",{attrs:{id:"功能分类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#功能分类"}},[t._v("#")]),t._v(" 功能分类")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("唯一索引")])]),t._v(" "),r("li",[r("p",[t._v("主键索引")])]),t._v(" "),r("li",[r("p",[t._v("普通索引")]),t._v(" "),r("blockquote",[r("p",[t._v("用表中的普通列构建的索引，没有任何限制")])])]),t._v(" "),r("li",[r("p",[t._v("全文索引")]),t._v(" "),r("blockquote",[r("p",[t._v("使用 match 和 against 关键 来做精确度的匹配.")])])]),t._v(" "),r("li",[r("p",[t._v("前缀索引（短索引）")]),t._v(" "),r("blockquote",[r("ul",[r("li",[r("p",[t._v("对于BLOB、text或者很长的varchar类型的列必须使用前缀索引")])]),t._v(" "),r("li",[r("p",[t._v("前缀索引无法使用order by和group by也无法使用覆盖索引")])]),t._v(" "),r("li",[r("p",[t._v("索引最大长度是768字节，当字符串过长时，mysql会做一个类似左前缀索引的处理，将前半部分的字符提取出来做索")])]),t._v(" "),r("li",[r("p",[r("code",[t._v("ALTER table 表名 add index title_pre(列名(100))")])]),t._v(" "),r("p",[t._v("列名后面的数字代表前缀的长度，前缀长度并不是越长越好，这里涉及到一个选择性问题，")])])])])]),t._v(" "),r("li",[r("p",[t._v("空间数据索引")])])]),t._v(" "),r("blockquote",[r("p",[t._v("用于存放地理位置，和相关操作的。")])]),t._v(" "),r("h1",{attrs:{id:"聚集索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#聚集索引"}},[t._v("#")]),t._v(" 聚集索引")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("MyISAM索引文件和数据文件是分离的(非聚集)")])]),t._v(" "),r("li",[r("p",[t._v("InnoDB索引实现")]),t._v(" "),r("ol",[r("li",[r("p",[t._v("(索引文件和数据文件在一起)表数据文件本身就是按B+Tree组织的一个索引结构文件")])]),t._v(" "),r("li",[r("p",[t._v("聚集索引-叶节点包含了完整的数据记录")])]),t._v(" "),r("li",[r("p",[t._v("为什么建议InnoDB表必须建主键，并且推荐使用整型的自增主键？")]),t._v(" "),r("blockquote",[r("p",[t._v("以主键为默认索引，和数据聚集的。")])])]),t._v(" "),r("li",[r("p",[t._v("为什么非主键索引结构叶子节点存储的是主键值？(一致性和节省存储空间)")])])])])]),t._v(" "),r("h1",{attrs:{id:"索引设计原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#索引设计原则"}},[t._v("#")]),t._v(" 索引设计原则")]),t._v(" "),r("ol",[r("li",[t._v("代码先行，索引后上")]),t._v(" "),r("li",[t._v("联合索引尽量覆盖条件")]),t._v(" "),r("li",[t._v("不要在小基数(如: 性别)字段上建立索引")]),t._v(" "),r("li",[t._v("长字符串我们可以采用前缀索引")]),t._v(" "),r("li",[t._v("where与order by冲突时优先where")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://blog.csdn.net/qq_40884473/article/details/89455740",target:"_blank",rel:"noopener noreferrer"}},[t._v("基于慢sql查询做优化"),r("OutboundLink")],1)])]),t._v(" "),r("h1",{attrs:{id:"索引优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#索引优化"}},[t._v("#")]),t._v(" 索引优化")]),t._v(" "),r("h2",{attrs:{id:"索引类型-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#索引类型-2"}},[t._v("#")]),t._v(" 索引类型")]),t._v(" "),r("ul",[r("li",[t._v("降序索引 (Mysql8以上)")])]),t._v(" "),r("h2",{attrs:{id:"索引实践"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#索引实践"}},[t._v("#")]),t._v(" 索引实践")]),t._v(" "),r("ol",[r("li",[t._v("全值匹配")]),t._v(" "),r("li",[t._v("最左前缀法则")]),t._v(" "),r("li",[t._v("不在索引列上做任何操作（计算、函数、（自动or手动）类型转换），会导致索引失效而转向全表扫描")]),t._v(" "),r("li",[t._v("存储引擎不能使用索引中范围条件右边的列")]),t._v(" "),r("li",[t._v("尽量使用覆盖索引（只访问索引的查询（索引列包含查询列）），减少 select * 语句")]),t._v(" "),r("li",[t._v("在使用不等于（！=或者<>），not in ，not exists 的时候无法使用索引会导致全表扫描 < 小于、 > 大于、 <=、>= 这些，mysql内部优化器会根据检索比例、表大小等多个因素整体评估是否使用索引")]),t._v(" "),r("li",[t._v(".is null,is not null 一般情况下也无法使用索引")]),t._v(" "),r("li",[t._v("like以通配符开头（'$abc...'）mysql索引失效会变成全表扫描操作。\nlike KK%相当于=常量，%KK和%KK% 相当于范围")]),t._v(" "),r("li",[t._v("字符串不加单引号索引失效")]),t._v(" "),r("li",[t._v("少用or或in，用它查询时，mysql不一定使用索引，mysql内部优化器会根据检索比例、表大小等多个因素整体评 估是否使用索引，详见范围查询优化，in和or在表数据量比较大的情况会走索引，在表记录不多的情况下会选择全表扫描")]),t._v(" "),r("li",[t._v("范围查询优化，优化方法：可以将大的范围拆分成多个小范围")])]),t._v(" "),r("h2",{attrs:{id:"索引失效常见的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#索引失效常见的问题"}},[t._v("#")]),t._v(" 索引失效常见的问题")]),t._v(" "),r("ol",[r("li",[t._v("联合索引第一个字段用范围不会走索引，（结果集应该很大，回表效率不高，还不如就全表扫描）")])]),t._v(" "),r("p",[t._v("​")]),t._v(" "),r("h2",{attrs:{id:"索引下推"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#索引下推"}},[t._v("#")]),t._v(" 索引下推")]),t._v(" "),r("p",[r("strong",[t._v("可以在索引遍历过程中，对索引中包含的所有字段先做判断，过滤掉不符合条件的记录之后再回表，可以有效的减少回表次数")]),t._v("。索引下推会减少回表次数，对于innodb引擎的表索引下推只能用于二级索引")]),t._v(" "),r("h1",{attrs:{id:"参考资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/jh993627471/article/details/79375770",target:"_blank",rel:"noopener noreferrer"}},[t._v("mysql B-Tree、哈希索引、R-Tree、全文索引、前缀索引"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1603199",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL索引分类，90%的开发都不知道"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/-619569179/p/6528896.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("主键索引和唯一索引的区别"),r("OutboundLink")],1)]),t._v(" "),r("blockquote",[r("p",[t._v("主键列在创建时，已经默认为空值 + 唯一索引了。")]),t._v(" "),r("p",[t._v("唯一性索引列允许空值，而主键列不允许为空值。")]),t._v(" "),r("p",[t._v("一个表最多只能创建一个主键，但可以创建多个唯一索引。")]),t._v(" "),r("p",[t._v("主键可以被其他表引用为外键，而唯一索引不能。")])]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/Abysscarry/article/details/80792876",target:"_blank",rel:"noopener noreferrer"}},[t._v("多个单列索引和联合索引的区别详解"),r("OutboundLink")],1)]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("多个单列索引")]),t._v("在"),r("strong",[t._v("多条件查询")]),t._v("时优化器会选择"),r("strong",[t._v("最优索引策略")]),t._v("，"),r("strong",[t._v("可能只用一个索引，也可能将多个索引全用上！")]),t._v(" 但多个单列索引底层会建立多个B+索引树，比较占用空间，也会浪费一定搜索效率，故如果只有"),r("strong",[t._v("多条件联合查询时最好建联合索引！")])])]),t._v(" "),r("p",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/35675553",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL 之全文索引"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/zhouguowei/p/5216316.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL创建全文索引"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/guolong1983811/article/details/78391566",target:"_blank",rel:"noopener noreferrer"}},[t._v("rtree原理"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/ztnhnr/article/details/111135007",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mysql主键、普通索引、唯一索引和全文索引的区别"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/gaogao67/p/11046902.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL Index--NOT IN和不等于两类操作无法走索引？"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/niuben/p/11197945.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL中 IS NULL、IS NOT NULL、!= 能用上索引吗？ "),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/runningRookie/p/11108768.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySql整型索引和字符串索引失效或隐式转换问题 "),r("OutboundLink")],1)]),t._v(" "),r("blockquote",[r("ol",[r("li",[t._v("当我们使用的字段是数值类型时，加引号或者不加引号（sql中单引号和双引号实现相同效果）都不影响索引的使用")]),t._v(" "),r("li",[t._v("当我们的字段是字符串类型时，不加引号的查询无法使用索引，加引号的查询才可正常使用索引，存在隐式转换，不走索引")]),t._v(" "),r("li",[t._v("string类型转换成int类型 代价比较小，所以会走索引")])])])])}),[],!1,null,null,null);r.default=a.exports}}]);