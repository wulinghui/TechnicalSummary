(window.webpackJsonp=window.webpackJsonp||[]).push([[178],{537:function(s,t,a){"use strict";a.r(t);var r=a(7),e=Object(r.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"选型对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选型对比"}},[s._v("#")]),s._v(" 选型对比")]),s._v(" "),t("h2",{attrs:{id:"lucene"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lucene"}},[s._v("#")]),s._v(" Lucene")]),s._v(" "),t("p",[s._v("优点 : java搜索届的基石； 轻巧和应用强绑定集成")]),s._v(" "),t("p",[s._v("缺点:")]),s._v(" "),t("ul",[t("li",[s._v("只能在Java项目中使用,并且要以jar包的方式直接集成项目中.")]),s._v(" "),t("li",[s._v("使用非常复杂-创建索引和搜索索引代码繁杂")]),s._v(" "),t("li",[s._v("不支持集群环境-索引数据不同步（不支持大型项目）")]),s._v(" "),t("li",[s._v("索引数据如果太多就不行，索引库和应用所在同一个服务器,共同占用硬 盘.共用空间少.")])]),s._v(" "),t("h2",{attrs:{id:"solr"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#solr"}},[s._v("#")]),s._v(" Solr")]),s._v(" "),t("p",[s._v("优点:")]),s._v(" "),t("ul",[t("li",[s._v("当单纯的对已有数据进行搜索时，Solr更快")]),s._v(" "),t("li",[s._v("Solr 支持更多格式的数据，比如JSON、XML、CSV，而 Elasticsearch 仅支持 json文件格")])]),s._v(" "),t("p",[s._v("缺点:")]),s._v(" "),t("ul",[t("li",[s._v("当实时建立索引时, Solr会产生io阻塞，查询性能较差, Elasticsearch具有明显的优势。")])]),s._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[s._v("特别小的项目用lucence，实时搜索应用(实时数据插入/更新/删除)用ES，传统的用Solr。")]),s._v(" "),t("h1",{attrs:{id:"全文检索概念和原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全文检索概念和原理"}},[s._v("#")]),s._v(" 全文检索概念和原理")]),s._v(" "),t("h2",{attrs:{id:"什么是全文检索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是全文检索"}},[s._v("#")]),s._v(" 什么是全文检索")]),s._v(" "),t("ul",[t("li",[s._v("通过一个程序扫描文本中的每一个单词，"),t("strong",[s._v("针对单词建立索引")]),s._v("，并保存该单词在文本中的位置、以及出现的次数")]),s._v(" "),t("li",[s._v("用户查询时，通过之前建立好的索引来查询，将索引中单词对应的文本位置、出现的次数返回给用户，因为有了具体文本的位置，所以就可以将具体内容读取出来了")])]),s._v(" "),t("h2",{attrs:{id:"倒排索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#倒排索引"}},[s._v("#")]),s._v(" 倒排索引")]),s._v(" "),t("ul",[t("li",[s._v("存储过程: 分词，去重，排序。")]),s._v(" "),t("li",[s._v("存储的结构:    单词1  ->  index1,index2   ； 就是每个单词，对应在那些数据的位置上。")]),s._v(" "),t("li",[s._v("查找过程:  根据词条找id , 再根据id定位数据。")]),s._v(" "),t("li",[t("strong",[s._v("支持海量数据原理")]),s._v("？？ 词条基本固定，index扩展也没啥关系，所以支持海量数据存储。")])]),s._v(" "),t("h1",{attrs:{id:"核心概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#核心概念"}},[s._v("#")]),s._v(" 核心概念")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("es")]),s._v(" "),t("th",[s._v("数据库")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("Index")]),s._v(" "),t("td",[s._v("database")])]),s._v(" "),t("tr",[t("td",[s._v("Type(7.0以后将废弃了，就是没有表的概念了)")]),s._v(" "),t("td",[s._v("Table")])]),s._v(" "),t("tr",[t("td",[s._v("Document文档")]),s._v(" "),t("td",[s._v("Row 行")])]),s._v(" "),t("tr",[t("td",[s._v("Field 字段")]),s._v(" "),t("td",[s._v("Column 列")])]),s._v(" "),t("tr",[t("td",[s._v("mapping 映射")]),s._v(" "),t("td",[s._v("表结构")])])])]),s._v(" "),t("h2",{attrs:{id:"索引-index"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引-index"}},[s._v("#")]),s._v(" 索引 index")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("一个索引就是一个拥有几分相似特征的文档的集合。")])]),s._v(" "),t("li",[t("p",[s._v("一个索引由一个名字来标识（必须全部是小写字母的）")])])]),s._v(" "),t("h2",{attrs:{id:"映射-mapping"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#映射-mapping"}},[s._v("#")]),s._v(" 映射 mapping")]),s._v(" "),t("ul",[t("li",[s._v("ElasticSearch中的映射（Mapping）用来定义一个文档。")]),s._v(" "),t("li",[s._v("处理数据的方式和规则方面做一些限制。如字段的数据类型、分词、是否被索引。")])]),s._v(" "),t("h2",{attrs:{id:"字段field"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字段field"}},[s._v("#")]),s._v(" 字段Field")]),s._v(" "),t("h2",{attrs:{id:"字段类型-type"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字段类型-type"}},[s._v("#")]),s._v(" 字段类型 Type")]),s._v(" "),t("ul",[t("li",[s._v("每一个字段都应该有一个对应的类型，如int、text等等")]),s._v(" "),t("li",[s._v("这和上面提到的Type不一样")])]),s._v(" "),t("h2",{attrs:{id:"文档-document"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文档-document"}},[s._v("#")]),s._v(" 文档 document")]),s._v(" "),t("ul",[t("li",[s._v("一个文档是一个可被索引的基础信息单元，类似一条记录。")]),s._v(" "),t("li",[s._v("以JSON来表示")])]),s._v(" "),t("h2",{attrs:{id:"集群-cluster"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集群-cluster"}},[s._v("#")]),s._v(" 集群 cluster")]),s._v(" "),t("p",[s._v("一个集群就是由一个或多个节点组织在一起，它们共同持有整个的数据，并一起提 供索引和搜索功能")]),s._v(" "),t("h2",{attrs:{id:"节点-node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#节点-node"}},[s._v("#")]),s._v(" 节点 node")]),s._v(" "),t("p",[s._v("一个节点是集群中的一个服务器，作为集群的一部分，它存储数据，参与集群的索 引和搜索功能")]),s._v(" "),t("h2",{attrs:{id:"分片-shards"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分片-shards"}},[s._v("#")]),s._v(" 分片 shards")]),s._v(" "),t("ul",[t("li",[s._v("一个索引可以存储超出单个结点硬件限制的大量数据，Elasticsearch提供了将索引划分成多份的能力，这些 份就叫做分片")]),s._v(" "),t("li",[s._v("当创建一个索引的时候，可以指定你想要的分片的数量")]),s._v(" "),t("li",[s._v("每个分片本身也是一个功能完善并且独立的“索引”，这个“索引”可以 被放置到集群中的任何节点上")]),s._v(" "),t("li",[s._v("分片很重要 ： 允许水平分割/扩展你的内容容量；允许在分片之上进行分布式的、并行的操作，进而提高性能/吞吐量")]),s._v(" "),t("li",[s._v("它的文档怎样聚合回搜索请求，是完全由 Elasticsearch管理的，对于作为用户来说，这些都是透明的")])]),s._v(" "),t("h2",{attrs:{id:"副本-replicas"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#副本-replicas"}},[s._v("#")]),s._v(" 副本  replicas")]),s._v(" "),t("ul",[t("li",[s._v("背景: 在一个网络/云的环境里，失败随时都可能发生，在某个分片/节点不知怎 么的就处于离线状态，或者由于任何原因消失了，这种情况下，有一个故障转移机制是非常有用并且是强烈推荐的。")]),s._v(" "),t("li",[s._v("副本很重要 : 在分片/节点失败的情况下，提供了高可用性；扩展搜索量/吞吐量，因为搜索可以在所有的副本上并行运行。")]),s._v(" "),t("li",[s._v("每个索引可以被分成多个分片。一个索引有0个或者多个副本")]),s._v(" "),t("li",[s._v("一旦设置了副本，每个索引就有了主分片和副本分片，分片和副本的数量可以在索引创建的时候指定")]),s._v(" "),t("li",[s._v("在索引创建之后，可以在任何时候动态地改变副本的数量，但是不能改变分片的数量")])]),s._v(" "),t("h1",{attrs:{id:"生态圈组件介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生态圈组件介绍"}},[s._v("#")]),s._v(" 生态圈组件介绍")]),s._v(" "),t("ul",[t("li",[s._v("ElasticSearch ： 核心服务")]),s._v(" "),t("li",[s._v("Kibana :    es的web图形界面客户端")]),s._v(" "),t("li")]),s._v(" "),t("h1",{attrs:{id:"使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[s._v("#")]),s._v(" 使用")]),s._v(" "),t("h2",{attrs:{id:"指定ik分词器作为默认分词器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指定ik分词器作为默认分词器"}},[s._v("#")]),s._v(" 指定IK分词器作为默认分词器")]),s._v(" "),t("p",[s._v("需要安装ik分词器。")]),s._v(" "),t("ul",[t("li",[s._v("ES的默认分词设置是standard，这个在中文分词时就比较尴尬了")]),s._v(" "),t("li",[s._v("最好使用 "),t("code",[s._v("ik_max_word")]),s._v(" 最大分词。")]),s._v(" "),t("li",[s._v("ik_smart 他是最简单的不咋分词")])]),s._v(" "),t("h2",{attrs:{id:"es数据管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es数据管理"}},[s._v("#")]),s._v(" ES数据管理")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("利用Restful做增删查改，这里可以做后端的封装，或者前端直连(不建议)")])]),s._v(" "),t("li",[t("p",[s._v("GET查询 PUT添加 POST修改 DELE删除")])]),s._v(" "),t("li",[t("p",[s._v("基本操作demo")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("# 索引\n创建索引 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PUT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("索引名称\n查询索引 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("索引名称\n删除索引 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DELETE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("索引名称\n# 文档\n增加"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("修改文档 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("POST")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("索引名称"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("类型"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("id\n修改文档 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PUT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("索引名称"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("类型"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("id\n查询文档 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("索引名称"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("类型"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("id\n删除文档 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DELETE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("索引名称"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("类型"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("id\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("POST和PUT都能起到创建/更新的作用，但是他们的差别如下:")]),s._v(" "),t("blockquote",[t("ol",[t("li",[t("p",[s._v("需要注意的是==PUT==需要对一个具体的资源进行操作也就是要确定id才能进行==更新/创建，而==POST==是可以针对整个资源集合进行操作的，如果不写id就由ES生成一个唯一id进行==创建==新文档，如果填了id那就针对这个id的文档进行创建/更新")])]),s._v(" "),t("li",[t("p",[s._v("PUT会将json数据都进行替换, POST只会更新相同字段的值")])]),s._v(" "),t("li",[t("p",[s._v("PUT与DELETE都是幂等性操作, 即不论操作多少次, 结果都一样")])])])])])]),s._v(" "),t("h2",{attrs:{id:"查询操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查询操作"}},[s._v("#")]),s._v(" 查询操作")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("#查询当前类型中的所有文档 _search\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("索引名称"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("类型"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("_search\n#等于条件查询    \n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("索引名称"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("类型"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("_search"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("q"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("字段名"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("值\n#范围查询\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("索引名称"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("类型"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("_search"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("q"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("字段名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TO")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n#查询小于等于\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("索引名称"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("类型"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("_search"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("q"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("字段名"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v("值\n#分页查询  from"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("size"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("索引名称"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("类型"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("_search"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("q"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TO")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("from"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("size"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("    \n#对查询结果只输出某些字段    \n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("索引名称"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("类型"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("_search"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("_source"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("字段"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("字段\n#对查询结果排序 sort"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("字段"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("desc"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("asc\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("索引名称"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("类型"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("_search"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("sort"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("字段"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("desc\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("h1",{attrs:{id:"批量操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#批量操作"}},[s._v("#")]),s._v(" 批量操作")]),s._v(" "),t("h2",{attrs:{id:"批量获取文档数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#批量获取文档数据"}},[s._v("#")]),s._v(" 批量获取文档数据")]),s._v(" "),t("p",[s._v("批量获取文档数据是通过_mget的API来实现的")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("# 在"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("URL")]),s._v("中不指定index和type\ndocs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 文档数组参数\n    _index "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 指定index\n    _type "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 指定type\n    _id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 指定id\n    _source "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 指定要查询的字段\n如下"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GET")]),s._v(" _mget\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docs"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_index"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"es_db"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_index"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"es_db"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("# 在"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("URL")]),s._v("中指定index\n请求地址："),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("indexName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("_mget\n功能说明 ： 可以通过"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ID")]),s._v("批量获取不同index和type的数据\n如"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("es_db"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("_mget\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docs"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("    \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("#在"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("URL")]),s._v("中指定index和type\n请求地址："),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("indexName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("typeName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("_mget\n如"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("es_db"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("_doc"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("_mget\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docs"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("    \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("#多个"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ID")]),s._v("进行批量查询 _mget\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("索引名称"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("类型"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("_mget\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ids"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"批量操作文档数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#批量操作文档数据"}},[s._v("#")]),s._v(" 批量操作文档数据")]),s._v(" "),t("p",[s._v("批量对文档进行写操作是通过_bulk的API来实现的")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("请求地址：_bulk")])]),s._v(" "),t("li",[t("p",[s._v("请求参数：通过_bulk操作文档，一般至少有两行参数(或偶数行参数)")])]),s._v(" "),t("li",[t("ul",[t("li",[s._v("第一行参数为指定操作的类型及操作的对象(index,type和id)")]),s._v(" "),t("li",[s._v("第二行参数才是操作的数据")])])]),s._v(" "),t("li",[t("p",[s._v("操作类型，主要有create,index,delete和update")])])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("# 批量创建文档create\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("POST")]),s._v(" _bulk\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"create"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_index"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"article"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tags"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"面向对象"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"create_time"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1554015482530")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"create"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_index"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"article"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tags"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"面向对象"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"create_time"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1554015482530")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("    \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("# 普通创建或全量替换index\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("POST")]),s._v(" _bulk\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"index"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_index"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"article"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tags"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"面向对象"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"create_time"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1554015482530")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"index"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_index"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"article"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tags"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"面向对象"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"create_time"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1554015482530")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("    \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果原文档不存在，则是创建")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果原文档存在，则是替换(全量修改原文档)")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("# 批量删除delete\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("POST")]),s._v(" _bulk    \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"delete"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_index"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"article"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"delete"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_index"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"article"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("    \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("# 批量修改update\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("POST")]),s._v(" _bulk\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"update"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_index"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"article"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"doc"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"title"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ES大法必修内功"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"update"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_index"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"article"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"doc"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"create_time"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1554018421008")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h1",{attrs:{id:"dsl高级查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dsl高级查询"}},[s._v("#")]),s._v(" DSL高级查询")]),s._v(" "),t("ul",[t("li",[s._v("Domain Specific Language 领域专用语言")]),s._v(" "),t("li",[s._v("DSL由叶子查询子句和复合查询子句两种子句组成。")])]),s._v(" "),t("h2",{attrs:{id:"无查询条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#无查询条件"}},[s._v("#")]),s._v(" "),t("strong",[s._v("无查询条件")])]),s._v(" "),t("p",[s._v("无查询条件是查询所有，默认是查询所有的，或者使用match_all表示所有")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("es_db"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("_doc"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("_search\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"query"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"match_all"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"有查询条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#有查询条件"}},[s._v("#")]),s._v(" 有查询条件")]),s._v(" "),t("h3",{attrs:{id:"叶子条件查询-单字段查询条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#叶子条件查询-单字段查询条件"}},[s._v("#")]),s._v(" 叶子条件查询(单字段查询条件)")]),s._v(" "),t("h4",{attrs:{id:"模糊匹配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模糊匹配"}},[s._v("#")]),s._v(" 模糊匹配")]),s._v(" "),t("p",[s._v("模糊匹配主要是针对文本类型(text)的字段，文本类型的字段会对内容进行分词，对查询时，也会对搜索条件进行分词，然后通过倒排索引查找到匹配的数据，模糊匹配主要通过match等参数来实现")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("match : 通过match关键词模糊匹配条件内容")]),s._v(" "),t("blockquote",[t("p",[s._v("match会根据该字段的分词器，进行分词查询。")]),s._v(" "),t("p",[s._v("match条件还支持以下参数：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("query : 指定匹配的值")])]),s._v(" "),t("li",[t("p",[s._v("operator : 匹配条件类型")])]),s._v(" "),t("li",[t("ul",[t("li",[s._v("and : 条件分词后都要匹配")]),s._v(" "),t("li",[s._v("or : 条件分词后有一个匹配即可(默认)")])])]),s._v(" "),t("li",[t("p",[s._v("minmum_should_match : 指定最小匹配的数量")])])])])]),s._v(" "),t("li",[t("p",[s._v("prefix : 前缀匹配")])]),s._v(" "),t("li",[t("p",[s._v("regexp : 通过正则表达式来匹配数据")])])]),s._v(" "),t("h4",{attrs:{id:"精确匹配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#精确匹配"}},[s._v("#")]),s._v(" 精确匹配")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("term : 单个条件相等")]),s._v(" "),t("blockquote",[t("p",[s._v("term查询不会对字段进行分词查询，会采用精确匹配。")]),s._v(" "),t("p",[s._v("注意: 采用term精确查询, 查询字段映射类型属于为keyword.")])])]),s._v(" "),t("li",[t("p",[s._v("terms : 单个字段属于某个值数组内的值")])]),s._v(" "),t("li",[t("p",[s._v("range : 字段属于某个范围内的值")])]),s._v(" "),t("li",[t("p",[s._v("exists : 某个字段的值是否存在")])]),s._v(" "),t("li",[t("p",[s._v("ids : 通过ID批量查询")])])]),s._v(" "),t("h3",{attrs:{id:"多字段查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多字段查询"}},[s._v("#")]),s._v(" 多字段查询")]),s._v(" "),t("ul",[t("li",[s._v("多字段模糊匹配查询与精准查询 multi_match")]),s._v(" "),t("li",[s._v("未指定字段条件查询 query_string , 含 AND 与 OR 条件")]),s._v(" "),t("li",[s._v("指定一个或多个字段条件查询 query_string , 含 AND 与 OR 条件")]),s._v(" "),t("li",[s._v("范围查询 range范围关键字、gte 大于等于、lte  小于等于、gt 大于、lt 小于、now 当前时间")])]),s._v(" "),t("h3",{attrs:{id:"组合条件查询-多条件查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组合条件查询-多条件查询"}},[s._v("#")]),s._v(" 组合条件查询(多条件查询)")]),s._v(" "),t("p",[s._v("组合条件查询是将叶子条件查询语句进行组合而形成的一个完整的查询条件")]),s._v(" "),t("h4",{attrs:{id:"bool"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bool"}},[s._v("#")]),s._v(" bool")]),s._v(" "),t("p",[s._v("各条件之间有and,or或not的关系")]),s._v(" "),t("ul",[t("li",[t("ul",[t("li",[s._v("must : 各个条件都必须满足，即各条件是and的关系")]),s._v(" "),t("li",[s._v("should : 各个条件有一个满足即可，即各条件是or的关系")]),s._v(" "),t("li",[s._v("must_not : 不满足所有条件，即各条件是not的关系")]),s._v(" "),t("li",[s._v("filter : 不计算相关度评分，它不计算_score即相关度评分，效率更高")]),s._v(" "),t("li",[t("strong",[s._v("must/filter/shoud/must_not")]),s._v(" 等的子条件是通过 "),t("strong",[s._v("term/terms/range/ids/exists/match")]),s._v(" 等叶子条件为参数的")]),s._v(" "),t("li",[s._v("以上参数，当只有一个搜索条件时，must等对应的是一个对象，当是多个条件时，对应的是一个数组")])])])]),s._v(" "),t("h4",{attrs:{id:"constant-score"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#constant-score"}},[s._v("#")]),s._v(" constant_score")]),s._v(" "),t("p",[s._v("不计算相关度评分")]),s._v(" "),t("h3",{attrs:{id:"连接查询-多文档合并查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#连接查询-多文档合并查询"}},[s._v("#")]),s._v(" 连接查询(多文档合并查询)")]),s._v(" "),t("ul",[t("li",[s._v("父子文档查询：parent/child")]),s._v(" "),t("li",[s._v("嵌套文档查询: nested")])]),s._v(" "),t("h2",{attrs:{id:"filter-dsl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#filter-dsl"}},[s._v("#")]),s._v(" filter DSL")]),s._v(" "),t("p",[t("strong",[s._v("Filter过滤器方式查询，它的查询不会计算相关性分值，也不会对结果进行排序, 因此效率会高一点，查询的结果可以被缓存。")])]),s._v(" "),t("h2",{attrs:{id:"match、term、match-phase、query-string区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#match、term、match-phase、query-string区别"}},[s._v("#")]),s._v(" match、term、match_phase、query_string区别")]),s._v(" "),t("ul",[t("li",[s._v("match  模糊匹配，需要指定字段名，但是输入会进行分词")]),s._v(" "),t("li",[s._v("term    精确匹配，需要指定字段名，输入不会进行分词")]),s._v(" "),t("li",[s._v("match_phase 会对输入做分词，但是需要结果中也包含所有的分词，而且顺序要求一样")]),s._v(" "),t("li",[s._v("query_string  和match类似，不同的是它是在所有字段中搜索，范围更广泛")])]),s._v(" "),t("p",[s._v("对类型的区别:")]),s._v(" "),t("ul",[t("li",[s._v("term查询keyword字段 : term不会分词。而keyword字段也不分词。需要完全匹配才可。")]),s._v(" "),t("li",[s._v("term查询text字段： 因为text字段会分词，而term不分词，所以term查询的条件必须是text字段分词后的某一个。")]),s._v(" "),t("li",[s._v("match查询keyword字段 ： match会被分词，而keyword不会被分词，match的需要跟keyword的完全匹配可以。")]),s._v(" "),t("li",[s._v("match查询text字段： match分词，text也分词，只要match的分词结果和text的分词结果有相同的就匹配。")])]),s._v(" "),t("p",[s._v("总结:")]),s._v(" "),t("p",[s._v("parse 效率低，精确度高一点；match  找的东西多")]),s._v(" "),t("h1",{attrs:{id:"聚合搜索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#聚合搜索"}},[s._v("#")]),s._v(" 聚合搜索")]),s._v(" "),t("p",[s._v("bucket就是一个聚合搜索时的数据分组，metric就是对一个bucket数据执行的统计分析(如：求和，最大值，最小值，平均值)")]),s._v(" "),t("p",[s._v("再aggs下面、最基础的聚合为terms单位 ，操作有_count，avg，max，min，sum，sort")]),s._v(" "),t("h2",{attrs:{id:"keyword"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keyword"}},[s._v("#")]),s._v(" keyword")]),s._v(" "),t("p",[s._v("text单字分词不能做聚合，可以用fields  keyword type  （xxx.keyword）")]),s._v(" "),t("h2",{attrs:{id:"子聚合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子聚合"}},[s._v("#")]),s._v(" 子聚合")]),s._v(" "),t("p",[s._v("先根据聚合分组，在组内根据brand再次聚合分组，这种操作可以称为"),t("strong",[s._v("下钻分析")]),s._v("。就是aggs可以嵌套查询定义。")]),s._v(" "),t("h2",{attrs:{id:"区间统计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#区间统计"}},[s._v("#")]),s._v(" 区间统计")]),s._v(" "),t("p",[s._v("以100万为一个范围，统计不同范围内车辆的销售量和平均价格，可以使用"),t("strong",[s._v("histogram")]),s._v("类似terms")]),s._v(" "),t("p",[s._v("date_histogram 是对date类型的field执行区间聚合分组")]),s._v(" "),t("h2",{attrs:{id:"global-bucket"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#global-bucket"}},[s._v("#")]),s._v(" _global bucket")]),s._v(" "),t("p",[s._v("在聚合统计数据的时候，有些时候需要对比部分数据和总体数据。")]),s._v(" "),t("p",[s._v("如：统计某品牌车辆平均价格和所有车辆平均价格。")]),s._v(" "),t("p",[s._v("可以使用global是用于定义一个全局bucket，这个bucket会忽略query的条件，检索所有document进行对应的聚合统计。")]),s._v(" "),t("h2",{attrs:{id:"对聚合统计数据进行排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对聚合统计数据进行排序"}},[s._v("#")]),s._v(" 对聚合统计数据进行排序")]),s._v(" "),t("p",[s._v("aggs+order")]),s._v(" "),t("p",[s._v("如：统计每个品牌的汽车销量和销售总额，按照销售总额的降序排列。")]),s._v(" "),t("p",[s._v("如果有多层aggs，执行下钻聚合的时候，也可以根据最内层聚合数据执行排序。")]),s._v(" "),t("p",[s._v("但是"),t("strong",[s._v("只能组内数据排序，而不能跨组实现排序。")])]),s._v(" "),t("h2",{attrs:{id:"search-aggs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#search-aggs"}},[s._v("#")]),s._v(" search+aggs")]),s._v(" "),t("p",[s._v("聚合类似SQL中的group by子句，search类似SQL中的where子句。")]),s._v(" "),t("h2",{attrs:{id:"filter-aggs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#filter-aggs"}},[s._v("#")]),s._v(" filter+aggs")]),s._v(" "),t("h1",{attrs:{id:"文档映射"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文档映射"}},[s._v("#")]),s._v(" 文档映射")]),s._v(" "),t("p",[s._v("动态映射： 在文档写入Elasticsearch时，会根据文档字段自动识别类型")]),s._v(" "),t("p",[s._v("静态映射： 写入数据前事先定义好映射，包含文档的各字段类型、分词器")]),s._v(" "),t("h2",{attrs:{id:"数据建模"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据建模"}},[s._v("#")]),s._v(" 数据建模")]),s._v(" "),t("ul",[t("li",[s._v("搜索数据时太多没用的内容，比如查询北京市，还会出来其他的街道。")]),s._v(" "),t("li",[s._v("防止es对数据做扁平化处理，正常（如果字段需要分词，会将分词数据保存在对应的字段位置，当然应该是一个倒排索引，这里只是一个直观的案例）")]),s._v(" "),t("li",[s._v("使用 nested object数据类型ES在保存的时候不会有扁平化处理，保存方式如下：所以在搜索的时候一定会有需要的搜索结果。")]),s._v(" "),t("li",[s._v("缺点: 就是采取的是类似冗余数据的方式，将多个数据都放在一起了，每次更新，需要重新索引整个对象，维护成本就比较高。")])]),s._v(" "),t("h2",{attrs:{id:"父子关系数据建模"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#父子关系数据建模"}},[s._v("#")]),s._v(" 父子关系数据建模")]),s._v(" "),t("p",[s._v("针对上面的数据冗余的缺点")]),s._v(" "),t("p",[s._v("使用 Join 数据类型实现，可以通过 Parent / Child 的关系，从而分离两个对象。")]),s._v(" "),t("p",[s._v("父文档和子文档是两个独立的文档，更新父文档无需重新索引整个子文档。子文档被新增，更改和删除也不会影响到父文档和其他子文档。")]),s._v(" "),t("p",[t("strong",[s._v("要点")]),s._v("：就是父子数据必须存在于一个shard分片中。")]),s._v(" "),t("p",[s._v("优点: 文档存储在一起，读取性能高、父子文档可以独立更新。")]),s._v(" "),t("p",[s._v("定义父子关系的几个步骤 ：")]),s._v(" "),t("ul",[t("li",[t("ul",[t("li",[s._v("设置索引的 Mapping，type为join，申明父子关系")]),s._v(" "),t("li",[s._v("索引父文档")]),s._v(" "),t("li",[s._v("索引子文档")]),s._v(" "),t("li",[s._v("按需查询文档")])])])]),s._v(" "),t("p",[s._v("支持的查询")]),s._v(" "),t("ul",[t("li",[s._v("查询所有文档")]),s._v(" "),t("li",[s._v("Parent Id 查询，返回所有相关子文档，")]),s._v(" "),t("li",[s._v("Has Child 查询    ，返回父文档 、通过对子文档进行查询")]),s._v(" "),t("li",[s._v("Has Parent 查询 ，  返回相关性的子文档 ，通过对父文档进行查询")])]),s._v(" "),t("h2",{attrs:{id:"文件系统数据建模"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件系统数据建模"}},[s._v("#")]),s._v(" 文件系统数据建模")]),s._v(" "),t("p",[s._v("为其中的字段path定义一个特殊的分词器，"),t("code",[s._v('"tokenizer" : "path_hierarchy"')])]),s._v(" "),t("h2",{attrs:{id:"对已存在的mapping映射进行修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对已存在的mapping映射进行修改"}},[s._v("#")]),s._v(" 对已存在的mapping映射进行修改")]),s._v(" "),t("p",[s._v("不能直接修改，只能做迁移后再起别名，这就实现索引的平滑过渡,并且是零停机")]),s._v(" "),t("p",[s._v("具体方法")]),s._v(" "),t("p",[s._v("1）如果要推倒现有的映射, 你得重新建立一个静态索引")]),s._v(" "),t("p",[s._v("2）然后把之前索引里的数据导入到新的索引里")]),s._v(" "),t("p",[s._v("3）删除原创建的索引")]),s._v(" "),t("p",[s._v("4）为新索引起个别名, 为原索引名")]),s._v(" "),t("h1",{attrs:{id:"核心类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#核心类型"}},[s._v("#")]),s._v(" 核心类型")]),s._v(" "),t("ul",[t("li",[s._v("text ： 该类型被用来索引长文本，在创建索引前会将这些文本进行分词，转化为词的组合，建立索引；允许es来检索这些词，text类型"),t("strong",[s._v("不能")]),s._v("用来排序和聚合。")]),s._v(" "),t("li",[s._v("keyword ： 该类型，只能精准查询，不能分词查询，可以被用来检索过滤、排序和聚合，keyword类型不可用text进行分词模糊检索")]),s._v(" "),t("li",[s._v("数值型： long、integer、short、byte、double、float")]),s._v(" "),t("li",[s._v("日期型：date")]),s._v(" "),t("li",[s._v("布尔型：boolean")])]),s._v(" "),t("h1",{attrs:{id:"乐观并发控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#乐观并发控制"}},[s._v("#")]),s._v(" 乐观并发控制")]),s._v(" "),t("p",[s._v("Elasticsearch，不想数据库用悲观并发控制，而是采用版本号来控制并发。")]),s._v(" "),t("ul",[t("li",[s._v("ES新版本(7.x)不使用version进行并发版本控制")]),s._v(" "),t("li",[s._v("而是用 if_seq_no=版本值&if_primary_term=文档位置")]),s._v(" "),t("li",[s._v("_seq_no：文档版本号，作用同_version")]),s._v(" "),t("li",[s._v("_primary_term：文档所在位置")]),s._v(" "),t("li",[s._v("他们和version不同， version属于当个文档，而seq_no属于整个index")])]),s._v(" "),t("h1",{attrs:{id:"手工控制搜索结果精准度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#手工控制搜索结果精准度"}},[s._v("#")]),s._v(" 手工控制搜索结果精准度")]),s._v(" "),t("p",[s._v("minimum_should_match可以使用百分比或固定数字。")]),s._v(" "),t("p",[s._v("固定数字代表query搜索条件中的词条，至少需要匹配多少个。")]),s._v(" "),t("p",[s._v("百分比代表query搜索条件中词条百分比，如果无法整除，向下匹配（如，query条件有3个单词，如果使用百分比提供精准度计算，那么是无法除尽的，如果需要至少匹配两个单词，则需要用67%来进行描述。如果使用66%描述，ES则认为匹配一个单词即可。）。")]),s._v(" "),t("p",[s._v("如果使用should+bool搜索的话，也可以控制搜索条件的匹配度。")]),s._v(" "),t("h1",{attrs:{id:"dis-max实现best-fields策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dis-max实现best-fields策略"}},[s._v("#")]),s._v(" dis_max实现best fields策略")]),s._v(" "),t("ul",[t("li",[s._v("best fields策略： 搜索的document中的某一个field，尽可能多的匹配搜索条件。")]),s._v(" "),t("li",[s._v("most fields策略： 尽可能多的字段匹配到搜索条件")]),s._v(" "),t("li",[s._v("长尾数据： 我们搜索4个关键词，但很多文档只匹配1个，也显示出来了，这些文档其实不是我们想要的")]),s._v(" "),t("li",[t("strong",[s._v("精确匹配的数据可以尽可能的排列在最前端，且可以通过minimum_should_match来去除长尾数据，避免长尾数据字段对排序结果的影响。"),t("strong",[s._v("但是这种")]),s._v("相对排序不均匀。")])]),s._v(" "),t("li",[s._v("dis_max语法： 直接获取搜索的多条件中的，单条件query相关度分数最高的数据，以这个数据做相关度排序。")])]),s._v(" "),t("h2",{attrs:{id:"tie-breaker参数优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tie-breaker参数优化"}},[s._v("#")]),s._v(" tie_breaker参数优化")]),s._v(" "),t("p",[s._v("在某些情况下，可能还需要其他query条件中的相关度介入最终的结果排序，这个时候可以使用tie_breaker参数来优化dis_max搜索。")]),s._v(" "),t("p",[s._v("tie_breaker参数代表的含义是：将其他query搜索条件的相关度分数乘以参数值，再参与到结果排序中。")]),s._v(" "),t("h2",{attrs:{id:"multi-match"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#multi-match"}},[s._v("#")]),s._v(" multi_match")]),s._v(" "),t("p",[s._v("可以完成相同的事。")]),s._v(" "),t("p",[s._v('使用multi_match语法为：其中type常用的有best_fields和most_fields。^n代表权重，相当于"boost":n')]),s._v(" "),t("h1",{attrs:{id:"其他场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他场景"}},[s._v("#")]),s._v(" 其他场景")]),s._v(" "),t("h2",{attrs:{id:"boost权重控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#boost权重控制"}},[s._v("#")]),s._v(" boost权重控制")]),s._v(" "),t("p",[s._v("一般用于搜索时相关度排序使用。广告投放权重最高")]),s._v(" "),t("h2",{attrs:{id:"cross-fields搜索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cross-fields搜索"}},[s._v("#")]),s._v(" cross fields搜索")]),s._v(" "),t("p",[s._v("一个唯一的标识，分部在多个fields中，使用这种唯一标识搜索数据就称为cross fields搜索。")]),s._v(" "),t("p",[s._v("比如: 地址可以分为省、市、区县、街道。要搜索这种就是cross搜索。")]),s._v(" "),t("p",[s._v("Cross fields搜索策略，是从多个字段中搜索条件数据。")]),s._v(" "),t("h3",{attrs:{id:"实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[s._v("#")]),s._v(" 实现")]),s._v(" "),t("p",[s._v("这种搜索，一般都是使用most fields搜索策略。")]),s._v(" "),t("p",[s._v("默认情况下，和most fields搜索的逻辑是一致的，计算相关度分数是和best fields策略一致的。")]),s._v(" "),t("p",[s._v("一般来说，如果使用cross fields搜索策略，那么都会携带一个额外的参数operator。用来标记搜索条件如何在多个字段中匹配。")]),s._v(" "),t("h3",{attrs:{id:"缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[s._v("#")]),s._v(" 缺点")]),s._v(" "),t("p",[s._v("most fields策略是尽可能匹配更多的字段，所以会导致精确搜索结果排序问题。")]),s._v(" "),t("p",[s._v("又因为cross fields搜索，不能使用minimum_should_match来去除长尾数据。\n所以在使用most fields和cross fields策略搜索数据的时候，都有不同的缺陷。")]),s._v(" "),t("p",[t("strong",[s._v("所以")]),s._v("商业项目开发中，都推荐使用best fields策略实现搜索。")]),s._v(" "),t("h2",{attrs:{id:"copy-to组合fields"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#copy-to组合fields"}},[s._v("#")]),s._v(" copy_to组合fields")]),s._v(" "),t("p",[s._v("copy_to : 就是将多个字段，复制到一个字段中，实现一个多字段组合的逻辑字段。")]),s._v(" "),t("p",[s._v("优点: copy_to可以解决cross fields搜索问题，在商业项目中，也用于解决搜索条件默认字段问题。")]),s._v(" "),t("p",[s._v("使用: 如果需要使用copy_to语法，则需要在定义index的时候，手工指定mapping映射策略")]),s._v(" "),t("h2",{attrs:{id:"短语搜索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#短语搜索"}},[s._v("#")]),s._v(" 短语搜索")]),s._v(" "),t("p",[s._v("就是搜索条件不分词。代表搜索条件不可分割。")]),s._v(" "),t("p",[s._v("可以用match phrase实现")]),s._v(" "),t("h2",{attrs:{id:"近似匹配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#近似匹配"}},[s._v("#")]),s._v(" 近似匹配")]),s._v(" "),t("p",[s._v("这种特殊要求的搜索就是近似搜索。包括hell搜索条件在hello world数据中搜索，包括h搜索提示等都数据近似搜索的一部分。")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/gwd1154978352/article/details/84141627",target:"_blank",rel:"noopener noreferrer"}},[s._v("看这个资料"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("可以用match phrase + slop实现")]),s._v(" "),t("h3",{attrs:{id:"总结-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[s._v("召回率：召回率就是搜索结果比率")]),s._v(" "),t("p",[s._v("精准度：就是搜索结果的准确率")]),s._v(" "),t("p",[s._v("如果在搜索的时候，只使用match phrase语法，会导致召回率底下，因为搜索结果中必须包含短语")]),s._v(" "),t("p",[s._v("如果在搜索的时候，只使用match语法，会导致精准度底下，因为搜索结果排序是根据相关度分数算法计算得到。")]),s._v(" "),t("p",[s._v("如果需要在结果中兼顾召回率和精准度的时候，就需要将match和proximity search混合使用，来得到搜索结果。")]),s._v(" "),t("h2",{attrs:{id:"前缀搜索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前缀搜索"}},[s._v("#")]),s._v(" 前缀搜索")]),s._v(" "),t("p",[s._v("用于搜索前缀提示，类似百度搜索的提示。")]),s._v(" "),t("p",[s._v("使用前缀匹配实现搜索能力。 "),t("strong",[s._v("prefix 关键字")])]),s._v(" "),t("p",[s._v("通常针对keyword类型字段，也就是不分词的字段。而keyword类型字段数据大小写敏感。")]),s._v(" "),t("p",[s._v("前缀搜索不会计算相关度分数。")]),s._v(" "),t("p",[s._v("因为前缀搜索需要扫描完整的索引内容，所以前缀越长，相对效率越高。前缀越短，效率越低。")]),s._v(" "),t("h2",{attrs:{id:"通配符搜索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通配符搜索"}},[s._v("#")]),s._v(" 通配符搜索")]),s._v(" "),t("p",[s._v("但是和java还有数据库不太一样。通配符可以在倒排索引中使用，也可以在keyword类型字段中使用。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("wildcard 关键字\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 一个任意字符\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v("n个任意字符\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("性能也很低，也是需要扫描完整的索引。不推荐使用。")]),s._v(" "),t("h2",{attrs:{id:"正则搜索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#正则搜索"}},[s._v("#")]),s._v(" 正则搜索")]),s._v(" "),t("p",[s._v("ES支持正则表达式。可以在倒排索引或keyword类型字段中使用。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("regexp 关键字\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 范围，如： "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("是"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("的范围数字\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 一个字符\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 前面的表达式可以出现多次。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("性能也很低，需要扫描完整索引。")]),s._v(" "),t("h2",{attrs:{id:"搜索推荐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搜索推荐"}},[s._v("#")]),s._v(" 搜索推荐")]),s._v(" "),t("p",[s._v("搜索提示，索引中有若干数据以“hello”开头，那么在输入hello的时候，推荐相关信息。")]),s._v(" "),t("p",[s._v("match_phrase_prefix关键字")]),s._v(" "),t("p",[s._v("其原理和match phrase类似，是先使用match匹配term数据（java），然后在指定的slop移动次数范围内，前缀匹配（s），max_expansions是用于指定prefix最多匹配多少个term（单词），超过这个数量就不再匹配了。这种语法的限制是，只有最后一个term会执行前缀搜索。")]),s._v(" "),t("p",[s._v("因为效率较低，如果必须使用，则一定要使用参数max_expansions。")]),s._v(" "),t("h2",{attrs:{id:"fuzzy模糊搜索技术"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fuzzy模糊搜索技术"}},[s._v("#")]),s._v(" fuzzy模糊搜索技术")]),s._v(" "),t("p",[s._v("搜索的时候，可能搜索条件文本输入错误。")]),s._v(" "),t("p",[s._v("fuzzy技术就是用于解决错误拼写的（在英文中很有效，在中文中几乎无效。）")]),s._v(" "),t("p",[s._v("fuzzy关键字")]),s._v(" "),t("p",[s._v("其中fuzziness代表value的值word可以修改多少个字母来进行拼写错误的纠正")]),s._v(" "),t("h2",{attrs:{id:"高亮显示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高亮显示"}},[s._v("#")]),s._v(" 高亮显示")]),s._v(" "),t("p",[s._v("在搜索中，经常需要对搜索关键字做高亮显示，高亮显示也有其常用的参数")]),s._v(" "),t("p",[s._v("highlight中的field，必须跟query中的field一一对齐的")]),s._v(" "),t("p",[s._v("设置高亮html标签，默认是"),t("em",[s._v("标签 ：  pre_tags、post_tags")])]),s._v(" "),t("p",[s._v("高亮片段fragment的设置，设置要显示出来的fragment_size文本判断的长度，number_of_fragments显示几个片段")]),s._v(" "),t("h2",{attrs:{id:"大数据量分页"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#大数据量分页"}},[s._v("#")]),s._v(" 大数据量分页")]),s._v(" "),t("ul",[t("li",[s._v("使用from和size对1W条数据以内来进行分页，性能可以。")]),s._v(" "),t("li",[s._v("Elasticsearch做了一个限制，默认不允许查询的是10000条以后的数据，会报错。")]),s._v(" "),t("li",[s._v("每次传统分页都需要将要查询的数据进行重新排序，这样非常浪费性能。")]),s._v(" "),t("li",[s._v("使用scroll游标是将要用的数据一次性排序好，然后分批取出。")]),s._v(" "),t("li",[s._v("使用scroll查询后，排序后的数据会保持一定的时间，后续的分页查询都从该快照取数据即可。")]),s._v(" "),t("li",[s._v("使用: 第一次使用scroll分页查询设置缓存时间(超时时间不要设置太短，否则会出现异常)、之后操作直接用返回的scroll id进行查询。")])]),s._v(" "),t("h1",{attrs:{id:"分词器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分词器"}},[s._v("#")]),s._v(" 分词器")]),s._v(" "),t("p",[s._v("将句子拆分成一个一个的单个的单词，同时对每个单词进行normalization（时态转换，单复数转换）")]),s._v(" "),t("h2",{attrs:{id:"内置分词器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内置分词器"}},[s._v("#")]),s._v(" 内置分词器")]),s._v(" "),t("ul",[t("li",[s._v("standard analyzer标准分析仪")]),s._v(" "),t("li",[s._v("simple analyzer简单分析器")]),s._v(" "),t("li",[s._v("whitespace analyzer 空白分词器")]),s._v(" "),t("li",[s._v("stop analyzer:移除停用词")])]),s._v(" "),t("h2",{attrs:{id:"自定义分词器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义分词器"}},[s._v("#")]),s._v(" 自定义分词器")]),s._v(" "),t("p",[s._v("可以实现过滤自定义的数据。 分为2种，自己做插件，或者简单的可以用设置做相关组合。")]),s._v(" "),t("p",[s._v("analyzer.type = custom ，然后再引用过滤规则和内容。")]),s._v(" "),t("h2",{attrs:{id:"ik中文分词器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ik中文分词器"}},[s._v("#")]),s._v(" IK中文分词器")]),s._v(" "),t("h3",{attrs:{id:"相关配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相关配置"}},[s._v("#")]),s._v(" 相关配置")]),s._v(" "),t("ul",[t("li",[s._v("IKAnalyzer.cfg.xml：用来配置自定义词库")]),s._v(" "),t("li",[s._v("main.dic：ik原生内置的中文词库，总共有27万多条，只要是这些单词，都会被分在一起")]),s._v(" "),t("li",[s._v("quantifier.dic：放了一些单位相关的词")]),s._v(" "),t("li",[s._v("suffix.dic：放了一些后缀")]),s._v(" "),t("li",[s._v("surname.dic：中国的姓氏")]),s._v(" "),t("li",[s._v("stopword.dic：英文停用词")])]),s._v(" "),t("h3",{attrs:{id:"自定义词库-ikanalyzer-cfg-xml"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义词库-ikanalyzer-cfg-xml"}},[s._v("#")]),s._v(" 自定义词库 IKAnalyzer.cfg.xml")]),s._v(" "),t("p",[s._v("ext_dict 、 ext_stopwords、remote_ext_dict、remote_ext_stopwords")]),s._v(" "),t("h3",{attrs:{id:"ik热更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ik热更新"}},[s._v("#")]),s._v(" IK热更新")]),s._v(" "),t("p",[s._v("可以用remote_ext_dict、remote_ext_stopwords 写里面远程配置的文件。")]),s._v(" "),t("p",[s._v("最好修改IK远程字典源码使他支持热添加停用词和分词；")]),s._v(" "),t("h1",{attrs:{id:"elasticsearch-sql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch-sql"}},[s._v("#")]),s._v(" Elasticsearch SQL")]),s._v(" "),t("p",[s._v("目前FROM只支持单表")]),s._v(" "),t("p",[s._v("功能有: 查询、将SQL转换为DSL、全文检索、分组统计、")]),s._v(" "),t("h1",{attrs:{id:"高级功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高级功能"}},[s._v("#")]),s._v(" 高级功能")]),s._v(" "),t("h2",{attrs:{id:"搜索模板"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搜索模板"}},[s._v("#")]),s._v(" 搜索模板")]),s._v(" "),t("p",[s._v("将我们的一些搜索进行模板化，然后的话，每次执行这个搜索，就直接调用模板，给传入一些参数就可以了")]),s._v(" "),t("ul",[t("li",[s._v("简单定义参数并传递 ：  GET /cars/_search/template")]),s._v(" "),t("li",[s._v("toJson方式传递参数 ： GET /cars/_search/template")]),s._v(" "),t("li",[s._v("join方式传递参数 : GET /cars/_search/template")]),s._v(" "),t("li",[s._v("default value定义 :")])]),s._v(" "),t("h3",{attrs:{id:"记录template实现重复调用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#记录template实现重复调用"}},[s._v("#")]),s._v(" 记录template实现重复调用")]),s._v(" "),t("p",[s._v("可以使用Mustache语言("+s._s(s.name)+"代表变量)作为搜索请求的预处理，它提供了模板，然后通过键值对来替换模板中的变量。")]),s._v(" "),t("ol",[t("li",[s._v("保存template到ES :   POST _scripts/{id}")]),s._v(" "),t("li",[s._v('调用template执行搜索 :  GET cars/_search/template {  id: "{id}"  }')]),s._v(" "),t("li",[s._v("查询已定义的template : GET _scripts/{id}")]),s._v(" "),t("li",[s._v("删除已定义的template : DELETE _scripts/{id}")])]),s._v(" "),t("h2",{attrs:{id:"搜索建议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搜索建议"}},[s._v("#")]),s._v(" 搜索建议")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("应用场景，suggest search（completion suggest）：就是建议搜索或称为搜索建议，也可以叫做自动完成-auto completion。类似百度中的搜索联想提示功能。")])]),s._v(" "),t("li",[t("p",[s._v("用于进行前缀搜索的一种特殊的数据结构，而且会全部放在内存中，所以suggest search进行的前缀搜索提示，性能是非常高。")])]),s._v(" "),t("li",[t("p",[s._v("需要使用suggest的时候，必须在定义index时，为其mapping指定开启suggest。")])])]),s._v(" "),t("h2",{attrs:{id:"地理位置搜索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#地理位置搜索"}},[s._v("#")]),s._v(" 地理位置搜索")]),s._v(" "),t("ul",[t("li",[s._v("可实现在指定区域内搜索数据、搜索指定地点附近的数据、聚合统计分析指定地点附近的数据等操作。")]),s._v(" "),t("li",[s._v("必须提供一个特殊的字段类型。GEO - geo_point。地理位置的坐标点。")]),s._v(" "),t("li",[s._v("定义geo point mapping ；录入数据；搜索指定区域范围内的数据")])]),s._v(" "),t("h1",{attrs:{id:"java-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-api"}},[s._v("#")]),s._v(" Java API")]),s._v(" "),t("h2",{attrs:{id:"原生api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原生api"}},[s._v("#")]),s._v(" 原生API")]),s._v(" "),t("ul",[t("li",[s._v("RestHighLevelClient : 连接ES集群")]),s._v(" "),t("li",[s._v("IndexRequest : 描述请求")]),s._v(" "),t("li",[s._v("新增：IndexRequest")]),s._v(" "),t("li",[s._v("更新：UpdateRequest")]),s._v(" "),t("li",[s._v("删除：DeleteRequest")]),s._v(" "),t("li",[s._v("根据ID获取：GetRequest")]),s._v(" "),t("li",[s._v("关键字检索：SearchRequest")]),s._v(" "),t("li",[s._v("scroll分页方式查询 :  SearchSrollRequest")]),s._v(" "),t("li",[s._v("高亮查询 : HighlightBuilder 、HighlightField")])]),s._v(" "),t("h2",{attrs:{id:"spring-data-es"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-data-es"}},[s._v("#")]),s._v(" spring data es")]),s._v(" "),t("p",[s._v("继承就有了增删查改，方便。")]),s._v(" "),t("p",[s._v("但是复杂的查询实现不了。")]),s._v(" "),t("p",[s._v("kibana  es的客户端")]),s._v(" "),t("p",[s._v("post和put的区别")]),s._v(" "),t("p",[s._v("filter 精确匹配快没缓存\ntext和wordkey")]),s._v(" "),t("p",[s._v("车博为什么能搜到？？")]),s._v(" "),t("p",[s._v("es\n修改映射？\n如何加锁？\nes准实时搜索    ，hbase 更快\nput和get流程")]),s._v(" "),t("h1",{attrs:{id:"思考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#思考"}},[s._v("#")]),s._v(" 思考")]),s._v(" "),t("p",[s._v("倒排索引为啥能存海量数据??")]),s._v(" "),t("p",[s._v("操作post和put的区别？？")]),s._v(" "),t("p",[s._v("text和wordkey 有啥区别??")]),s._v(" "),t("p",[s._v("修改映射？\n如何加锁？")]),s._v(" "),t("h1",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),t("ul",[t("li",[s._v("官方网站: https://www.elastic.co/")]),s._v(" "),t("li",[s._v("下载地址：https://www.elastic.co/cn/start")]),s._v(" "),t("li",[t("a",{attrs:{href:"https://www.cnblogs.com/JoannaQ/p/3462318.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("mustache模板技术"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);