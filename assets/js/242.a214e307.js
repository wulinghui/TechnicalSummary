(window.webpackJsonp=window.webpackJsonp||[]).push([[242],{601:function(t,a,e){"use strict";e.r(a);var r=e(7),v=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"需求场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#需求场景"}},[t._v("#")]),t._v(" 需求场景")]),t._v(" "),a("ul",[a("li",[t._v("分析MQ服务器日志，定位问题")]),t._v(" "),a("li",[t._v("采集Tomcat、nginx服务器日志信息")]),t._v(" "),a("li",[t._v("APM系统中的日志模块。")])]),t._v(" "),a("h1",{attrs:{id:"整体流程图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整体流程图"}},[t._v("#")]),t._v(" 整体流程图")]),t._v(" "),a("p",[t._v("FileBeat 采集 ： Beats可以直接将数据发送到Elasticsearch或者发送到Logstash，")]),t._v(" "),a("p",[t._v("Logstash  过滤和格式化处理 ： 基于Logstash（非常吃内存，但是功能更加丰富）可以进一步地对数据进行处理，")]),t._v(" "),a("p",[t._v("ES供搜索 : 然后将处理后的数据存入到Elasticsearch")]),t._v(" "),a("p",[t._v("Kibana供可视化分析 : 最后使用Kibana进行数据可视化。")]),t._v(" "),a("h1",{attrs:{id:"beats"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#beats"}},[t._v("#")]),t._v(" Beats")]),t._v(" "),a("p",[t._v("Beats是一个开放源代码的数据发送器。我们可以把Beats作为一种代理安装在我们的服务器上，用于发送数据。")]),t._v(" "),a("h2",{attrs:{id:"类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[t._v("#")]),t._v(" 类型")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("审计数据")]),t._v(" "),a("th",[t._v("AuditBeat")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("日志文件")]),t._v(" "),a("td",[t._v("FileBeat")])]),t._v(" "),a("tr",[a("td",[t._v("云数据")]),t._v(" "),a("td",[t._v("FunctionBeat")])]),t._v(" "),a("tr",[a("td",[t._v("可用性数据")]),t._v(" "),a("td",[t._v("HeartBeat")])]),t._v(" "),a("tr",[a("td",[t._v("系统日志")]),t._v(" "),a("td",[t._v("JournalBeat")])]),t._v(" "),a("tr",[a("td",[t._v("指标数据")]),t._v(" "),a("td",[t._v("MetricBeat")])]),t._v(" "),a("tr",[a("td",[t._v("网络流量数据")]),t._v(" "),a("td",[t._v("PacketBeat")])]),t._v(" "),a("tr",[a("td",[t._v("Windows事件日志")]),t._v(" "),a("td",[t._v("Winlogbeat")])])])]),t._v(" "),a("h2",{attrs:{id:"filebeat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filebeat"}},[t._v("#")]),t._v(" FileBeat")]),t._v(" "),a("p",[t._v("FileBeat专门用于转发和收集日志等文件数据的轻量级采集工具。")]),t._v(" "),a("h3",{attrs:{id:"工作原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[t._v("#")]),t._v(" 工作原理")]),t._v(" "),a("ul",[a("li",[t._v("启动FileBeat时，会启动一个或者多个输入（Input），这些Input监控指定的日志数据位置。")]),t._v(" "),a("li",[t._v("FileBeat会针对每一个文件启动一个Harvester（收割机）")]),t._v(" "),a("li",[t._v("Harvester读取每一个文件的日志，将新的日志发送到libbeat，libbeat将数据收集到一起，并将数据发送给后台Spooler做输出（Output）")]),t._v(" "),a("li",[t._v("输出到其他的中间件中、如Elasticsearch、Logstash、Kafka、Redis等等。")]),t._v(" "),a("li",[a("strong",[t._v("input")]),t._v(" : 是负责管理Harvesters和查找所有要读取的文件的组件")]),t._v(" "),a("li",[a("strong",[t._v("Harvesters")]),t._v(" : Harvesters负责读取单个文件的内容，它负责打开/关闭文件，并逐行读取每个文件的内容，将读取到的内容发送给输出")]),t._v(" "),a("li",[t._v("如何保持文件状态?? : 保存每个文件的状态，并定时将状态信息保存在磁盘的「注册表」文件中，保存读取的最后一次偏移量。")]),t._v(" "),a("li",[t._v("断点续传功能 ： 输出无法访问，FileBeat会记录成功发送的最后一行，并在输出（Elasticsearch或者Logstash）可用时，继续读取文件发送数据。")])]),t._v(" "),a("h3",{attrs:{id:"配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[t._v("#")]),t._v(" 配置文件")]),t._v(" "),a("ul",[a("li",[t._v("type :  log、stdin")]),t._v(" "),a("li",[t._v("paths : 日志文件路径")]),t._v(" "),a("li",[t._v("multiline.pattern : 匹配一行日志，是否需要采集。")]),t._v(" "),a("li",[t._v("match：after 或 before，合并到上一行的末尾或开头")]),t._v(" "),a("li",[t._v("negate：true 或 false；默认是false，匹配pattern的行合并到上一行；true，不匹配pattern的行合并到上一行")]),t._v(" "),a("li",[t._v("output.***  ： 可以是redis、es等等")]),t._v(" "),a("li",[t._v("hosts ： 输出的地址")])]),t._v(" "),a("h1",{attrs:{id:"logstash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logstash"}},[t._v("#")]),t._v(" Logstash")]),t._v(" "),a("p",[t._v("它可以动态地将不同来源的数据统一采集，并按照指定的数据格式进行处理后，将数据加载到其他的目的地。")]),t._v(" "),a("p",[t._v("最开始，Logstash主要是针对日志采集，但后来Logstash开发了大量丰富的"),a("strong",[t._v("插件")]),t._v("，所以，它可以做更多的海量数据的采集。")]),t._v(" "),a("p",[t._v("他的输入有很多web log、log4j、Beats、系统、网络、防火墙的日志等等。")]),t._v(" "),a("p",[t._v("他的输出也很多: 关系型数据库、NoSQL数据库、MQ等等")]),t._v(" "),a("p",[t._v("通过下面的插件可以看过它更多的定位在于对数据过滤、转化处理。")]),t._v(" "),a("h2",{attrs:{id:"对比filebeat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对比filebeat"}},[t._v("#")]),t._v(" 对比FileBeat")]),t._v(" "),a("p",[t._v("logstash是jvm跑的，资源消耗比较大")]),t._v(" "),a("p",[t._v("而FileBeat是基于golang编写的，功能较少但资源消耗也比较小，更轻量级")]),t._v(" "),a("p",[t._v("logstash 具有filter功能，能过滤分析日志")]),t._v(" "),a("p",[t._v("logstash 和filebeat都具有日志收集功能，Filebeat更轻量，占用资源更少")]),t._v(" "),a("p",[t._v("logstash 具有"),a("strong",[t._v("强大")]),t._v("的filter功能，能过滤分析日志")]),t._v(" "),a("h2",{attrs:{id:"logstash过滤器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logstash过滤器"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.elastic.co/guide/en/logstash/7.6/filter-plugins.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Logstash过滤器"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("查看Logstash已经安装的插件 "),a("code",[t._v("cd /usr/local/es/logstash-7.6.1/")])]),t._v(" "),a("h3",{attrs:{id:"grok插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grok插件"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1651643",target:"_blank",rel:"noopener noreferrer"}},[t._v("Grok插件"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("是一种将非结构化日志解析为结构化的插件。这个工具非常适合用来解析系统日志、Web服务器日志、MySQL或者是任意其他的日志格式。")]),t._v(" "),a("p",[t._v("Grok是通过模式匹配的方式来识别日志中的数据,可以把Grok插件简单理解为升级版本的正则表达式。")]),t._v(" "),a("h3",{attrs:{id:"grok语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grok语法"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/logstash-plugins/logstash-patterns-core/blob/master/patterns/grok-patterns",target:"_blank",rel:"noopener noreferrer"}},[t._v("Grok语法"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("它拥有更多的模式，默认，Logstash拥有120个模式。如果这些模式不满足我们解析日志的需求，我们可以直接使用正则表达式来进行匹配。")]),t._v(" "),a("p",[t._v("grok模式的语法是：%{SYNTAX:SEMANTIC} ， SYNTAX指的是Grok模式名称，SEMANTIC是给模式匹配到的文本字段名。")]),t._v(" "),a("p",[t._v("默认在Grok中，所有匹配到的的数据类型都是字符串，如果要转换成int类型（目前只支持int和float），可以这样：%{NUMBER:duration:int} %{IP:client}")]),t._v(" "),a("p",[t._v("常用的Grok模式 ：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("NUMBER")]),t._v(" "),a("th",[t._v("匹配数字（包含：小数）")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("INT")]),t._v(" "),a("td",[t._v("匹配整形数字")])]),t._v(" "),a("tr",[a("td",[t._v("POSINT")]),t._v(" "),a("td",[t._v("匹配正整数")])]),t._v(" "),a("tr",[a("td",[t._v("WORD")]),t._v(" "),a("td",[t._v("匹配单词")])]),t._v(" "),a("tr",[a("td",[t._v("DATA")]),t._v(" "),a("td",[t._v("匹配所有字符")])]),t._v(" "),a("tr",[a("td",[t._v("IP")]),t._v(" "),a("td",[t._v("匹配IP地址")])]),t._v(" "),a("tr",[a("td",[t._v("PATH")]),t._v(" "),a("td",[t._v("匹配路径")])])])]),t._v(" "),a("h3",{attrs:{id:"grok调式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grok调式"}},[t._v("#")]),t._v(" Grok调式")]),t._v(" "),a("p",[t._v("在Kibana中调式Grok")]),t._v(" "),a("h3",{attrs:{id:"mutate插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mutate插件"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.elastic.co/guide/en/logstash/7.6/plugins-filters-mutate.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("mutate插件"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("mutate插件主要是作用在字段上，可以对字段做重命名、添加、删除、替换、修改结构")]),t._v(" "),a("h3",{attrs:{id:"date插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#date插件"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.elastic.co/guide/en/logstash/7.6/plugins-filters-date.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Date插件"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("该插件专门用来解析字段中的日期。")]),t._v(" "),a("p",[t._v("默认字段经过date插件处理后，会输出到@timestamp字段，所以，我们可以通过修改target属性来重新定义输出字段。")]),t._v(" "),a("h1",{attrs:{id:"elasticsearch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch"}},[t._v("#")]),t._v(" Elasticsearch")]),t._v(" "),a("h1",{attrs:{id:"kibana"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kibana"}},[t._v("#")]),t._v(" Kibana")]),t._v(" "),a("p",[t._v("输入trace id 可以找到对应的日志内容。")]),t._v(" "),a("h1",{attrs:{id:"skywalking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#skywalking"}},[t._v("#")]),t._v(" Skywalking")]),t._v(" "),a("p",[t._v("整合 Skywalking 和 ELK 后，通过 trace id，在 Skywaling 中快速看到链路中哪个环节出了问题，然后在 ELK 中按 trace id 搜索对应的系\n统日志，这样就可以很方便的定位出问题，为线上排障提供了方便。")]),t._v(" "),a("p",[t._v("简单地说就是把各个系统的日志通过trace id做了聚合，方便查看日志，不用再去每台服务器上去看了。")]),t._v(" "),a("ol",[a("li",[t._v("搭建Skywalking OAP服务")]),t._v(" "),a("li",[t._v("各个微服务配置Skywalking Agent")]),t._v(" "),a("li",[t._v("集成日志框架，"),a("a",{attrs:{href:"https://github.com/apache/skywalking/blob/master/docs/en/setup/service-agent/java-agent/Application-toolkit-logback-1.x.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("生成traceId"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("开始整合ELK")]),t._v(" "),a("li",[t._v("启动FileBeats收集本地日志")]),t._v(" "),a("li",[t._v("Logstash 解析 Trace ID")]),t._v(" "),a("li",[t._v("在kibana中根据trace_id搜索对应的系统日志。")]),t._v(" "),a("li",[t._v("看日志的定位问题，排查问题。")])]),t._v(" "),a("h1",{attrs:{id:"思考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思考"}},[t._v("#")]),t._v(" 思考")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("为啥用FileBeat采集， Logstash 不是也可以吗???")]),t._v(" "),a("blockquote",[a("p",[t._v("FileBeat小 快 有背压敏感协议，能保证稳定， Logstash 不行。")]),t._v(" "),a("p",[t._v("FileBeat和Logstash配合，实现背压机制。")]),t._v(" "),a("p",[t._v("FileBeat做采集、Logstash做过滤和转化")])])])]),t._v(" "),a("h1",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1651643",target:"_blank",rel:"noopener noreferrer"}},[t._v("Flume、Logstash、Filebeat对比日志采集的不同"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://jishuin.proginn.com/p/763bfbd60ca7",target:"_blank",rel:"noopener noreferrer"}},[t._v("APM，监控界的扛把子，牛逼！"),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("Logs(日志) 、Traces(链路追踪) 和 Metrics(报表统计)")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/nulige/p/7741580.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("运维监控系统之Open-Falcon"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1639350",target:"_blank",rel:"noopener noreferrer"}},[t._v("开源监控系统对比（Ganglia、Open-falcon、Prometheus、Zabbix)"),a("OutboundLink")],1)])])])])}),[],!1,null,null,null);a.default=v.exports}}]);