(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{373:function(s,a,e){"use strict";e.r(a);var t=e(7),n=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"docker镜像构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker镜像构建"}},[s._v("#")]),s._v(" Docker镜像构建")]),s._v(" "),a("h2",{attrs:{id:"_1-docker-commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-docker-commit"}},[s._v("#")]),s._v(" 1. docker commit")]),s._v(" "),a("p",[s._v("平常我们都是从公共仓库拉取镜像，我们也可以从容器中构建我们自己的镜像。")]),s._v(" "),a("p",[s._v("需求：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 基础镜像centos\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 安装jdk\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" 安装nginx\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"_1-1-创建容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-创建容器"}},[s._v("#")]),s._v(" 1.1 创建容器")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull centos:7\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-di")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--name")]),s._v(" centos7 centos:7\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"_1-2-安装jdk和nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-安装jdk和nginx"}},[s._v("#")]),s._v(" 1.2 安装jdk和nginx")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#进入容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-it")]),s._v(" centos7 /bin/bash\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装jdk")]),s._v("\nyum "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" java-1.8.0-openjdk.x86_64\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装nginx")]),s._v("\nyum "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" epel-release\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" nginx\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装vim")]),s._v("\nyum "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动nginx")]),s._v("\n/usr/sbin/nginx\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 访问nginx")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" http://localhost\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"_1-3-构建镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-构建镜像"}},[s._v("#")]),s._v(" 1.3 构建镜像")]),s._v(" "),a("p",[s._v("接下来，我们将我们做好的容器，构建为一个新的镜像")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OPTIONS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" CONTAINER "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("REPOSITORY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":TAG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mszlu"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jdk8 and nginx"')]),s._v(" centos7 mycentos:7\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("-a")]),s._v("：提交的镜像作者；")]),s._v(" "),a("li",[a("code",[s._v("-c")]),s._v("：使用 Dockerfile 指令来创建镜像；")]),s._v(" "),a("li",[a("code",[s._v("-m")]),s._v("：提交时的说明文字；")]),s._v(" "),a("li",[a("code",[s._v("-p")]),s._v("：在 commit 时，将容器暂停。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"img/image-20220313121529572.png",alt:"image-20220313121529572"}})]),s._v(" "),a("p",[s._v("我们可以发现我们构建的镜像比较大，因为里面有jdk和nginx")]),s._v(" "),a("h3",{attrs:{id:"_1-4-使用新镜像构建容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-使用新镜像构建容器"}},[s._v("#")]),s._v(" 1.4 使用新镜像构建容器")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-di")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--name")]),s._v(" mycentos7 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(":80 mycentos:7\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#进入容器 启动nginx")]),s._v("\n/usr/sbin/nginx\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("访问：")]),s._v(" "),a("p",[s._v("http://ip/index.html")]),s._v(" "),a("h2",{attrs:{id:"_2-dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-dockerfile"}},[s._v("#")]),s._v(" 2. Dockerfile")]),s._v(" "),a("p",[s._v("在 Docker 中构建镜像最常用的方式，就是使用 "),a("code",[s._v("Dockerfile")]),s._v("。Dockerfile 是一个用来构建镜像的文本文件，文本内容包含了一条条构建镜像所需的指令和说明。官方文档：https://docs.docker.com/engine/reference/builder/")]),s._v(" "),a("h3",{attrs:{id:"_2-1-常用指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-常用指令"}},[s._v("#")]),s._v(" 2.1 常用指令")]),s._v(" "),a("p",[a("strong",[s._v("FROM")])]),s._v(" "),a("p",[s._v("语法："),a("code",[s._v("FROM <image>:<tag>")])]),s._v(" "),a("p",[s._v("指明构建的新镜像是来自于哪个基础镜像，如果没有选择 tag，那么默认值为 latest。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("FROM centos:7\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("如果不以任何镜像为基础，那么写法为：FROM scratch。官方说明：scratch 镜像是一个空镜像，可以用于构建 busybox 等超小镜像，可以说是真正的从零开始构建属于自己的镜像。")])]),s._v(" "),a("p",[a("strong",[s._v("MAINTAINER")])]),s._v(" "),a("p",[s._v("语法："),a("code",[s._v("MAINTAINER <name>")])]),s._v(" "),a("p",[s._v("指明镜像维护者及其联系方式（一般是邮箱地址）。官方说明已过时，推荐使用 LABEL。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("MAINTAINER mszlu "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("mszlu@mszlu.com"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("**LABEL **")]),s._v(" "),a("p",[s._v("语法："),a("code",[s._v("LABEL <key>=<value> <key>=<value> <key>=<value> ...")])]),s._v(" "),a("p",[s._v("功能是为镜像指定标签。也可以使用 LABEL 来指定镜像作者。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('LABEL maintainer="mszlu.com"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("RUN")])]),s._v(" "),a("p",[s._v("语法："),a("code",[s._v("RUN <command>")])]),s._v(" "),a("p",[s._v("构建镜像时运行的 Shell 命令，比如构建的新镜像中我们想在 /usr/local 目录下创建一个 java 目录。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("RUN "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /usr/local/java\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("ADD")])]),s._v(" "),a("p",[s._v("语法："),a("code",[s._v("ADD <src>... <dest>")])]),s._v(" "),a("p",[s._v("拷贝文件或目录到镜像中。src 可以是一个本地文件或者是一个本地压缩文件，压缩文件会自动解压。还可以是一个 url，如果把 src 写成一个 url，那么 ADD 就类似于 wget 命令，然后自动下载和解压。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ADD jdk-11.0.6_linux-x64_bin.tar.gz /usr/local/java\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("**COPY **")]),s._v(" "),a("p",[s._v("语法："),a("code",[s._v("COPY <src>... <dest>")])]),s._v(" "),a("p",[s._v("拷贝文件或目录到镜像中。用法同 ADD，只是不支持自动下载和解压。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("COPY jdk-11.0.6_linux-x64_bin.tar.gz /usr/local/java\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("EXPOSE")])]),s._v(" "),a("p",[s._v("语法："),a("code",[s._v("EXPOSE <port> [<port>/<protocol>...]")])]),s._v(" "),a("p",[s._v("暴露容器运行时的监听端口给外部，可以指定端口是监听 TCP 还是 UDP，如果未指定协议，则默认为 TCP。")]),s._v(" "),a("div",{staticClass:"language-she line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("EXPOSE 80 443 8080/tcp\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果想使得容器与宿主机的端口有映射关系，必须在容器启动的时候加上 -p 参数。")]),s._v(" "),a("p",[a("strong",[s._v("ENV")])]),s._v(" "),a("p",[s._v("语法："),a("code",[s._v("ENV <key> <value>")]),s._v(" 添加单个，"),a("code",[s._v("ENV <key>=<value> ...")]),s._v(" 添加多个。")]),s._v(" "),a("p",[s._v("设置容器内环境变量。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ENV JAVA_HOME /usr/local/java/jdk-11.0.6/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("CMD")])]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v('CMD ["executable","param1","param2"]')]),s._v("，比如："),a("code",[s._v('CMD ["/usr/local/tomcat/bin/catalina.sh", "start"]')])]),s._v(" "),a("li",[a("code",[s._v('CMD ["param1","param2"]')]),s._v("，比如："),a("code",[s._v('CMD [ "echo", "$JAVA_HOME" ]')])]),s._v(" "),a("li",[a("code",[s._v("CMD command param1 param2")]),s._v("，比如："),a("code",[s._v("CMD echo $JAVA_HOME")])])]),s._v(" "),a("p",[s._v("启动容器时执行的 Shell 命令。在 Dockerfile 中只能有一条 CMD 指令。如果设置了多条 CMD，只有最后一条 CMD 会生效。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("CMD ehco "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$JAVA_HOME")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("如果创建容器的时候指定了命令，则 CMD 命令会被替代。假如镜像叫 "),a("code",[s._v("centos:7")]),s._v("，创建容器时命令是："),a("code",[s._v('docker run -it --name centos7 centos:7 echo "helloworld"')]),s._v(" 或者 "),a("code",[s._v("docker run -it --name centos7 centos:7 /bin/bash")]),s._v("，就不会输出 "),a("code",[s._v("$JAVA_HOME")]),s._v(" 的环境变量信息了，因为 CMD 命令被 "),a("code",[s._v('echo "helloworld"')]),s._v("、"),a("code",[s._v("/bin/bash")]),s._v(" 覆盖了。")])]),s._v(" "),a("p",[s._v("**ENTRYPOINT **")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v('ENTRYPOINT ["executable", "param1", "param2"]')]),s._v("，比如："),a("code",[s._v('ENTRYPOINT ["/usr/local/tomcat/bin/catalina.sh", "start"]')])]),s._v(" "),a("li",[a("code",[s._v("ENTRYPOINT command param1 param2")]),s._v("，比如："),a("code",[s._v("ENTRYPOINT ehco $JAVA_HOME")])])]),s._v(" "),a("p",[s._v("启动容器时执行的 Shell 命令，同 CMD 类似，不会被 docker run 命令行指定的参数所覆盖。在 Dockerfile 中只能有一条 ENTRYPOINT 指令。如果设置了多条 ENTRYPOINT，只有最后一条 ENTRYPOINT 会生效。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ENTRYPOINT ehco "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$JAVA_HOME")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("ul",[a("li",[s._v("如果在 Dockerfile 中同时写了 ENTRYPOINT 和 CMD，并且 CMD 指令不是一个完整的可执行命令，那么 CMD 指定的内容将会作为 ENTRYPOINT 的参数；")]),s._v(" "),a("li",[s._v("如果在 Dockerfile 中同时写了 ENTRYPOINT 和 CMD，并且 CMD 是一个完整的指令，那么它们两个会互相覆盖，谁在最后谁生效")])])]),s._v(" "),a("p",[s._v("**WORKDIR **")]),s._v(" "),a("p",[s._v("语法："),a("code",[s._v("WORKDIR /path/to/workdir")])]),s._v(" "),a("p",[s._v("为 RUN、CMD、ENTRYPOINT 以及 COPY 和 AND 设置工作目录。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("WORKDIR /usr/local\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("指定容器挂载点到宿主机自动生成的目录或其他容器。一般的使用场景为需要持久化存储数据时。")]),s._v(" "),a("p",[a("strong",[s._v("VOLUME")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器的 /var/lib/mysql 目录会在运行时自动挂载为匿名卷，匿名卷在宿主机的 /var/lib/docker/volumes 目录下")]),s._v("\nVOLUME "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/var/lib/mysql"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("blockquote",[a("p",[s._v("一般不会在 Dockerfile 中用到，更常见的还是在 docker run 的时候通过 -v 指定数据卷。")])]),s._v(" "),a("h3",{attrs:{id:"_2-2-构建镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-构建镜像"}},[s._v("#")]),s._v(" 2.2 构建镜像")]),s._v(" "),a("p",[s._v("Dockerfile 文件编写好以后，真正构建镜像时需要通过 "),a("code",[s._v("docker build")]),s._v(" 命令。")]),s._v(" "),a("p",[a("code",[s._v("docker build")]),s._v(" 命令用于使用 "),a("code",[s._v("Dockerfile")]),s._v(" 创建镜像。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用当前目录的 Dockerfile 创建镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" mycentos:7 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过 -f Dockerfile 文件的位置创建镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" /usr/local/dockerfile/Dockerfile "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" mycentos:7 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("-f")]),s._v("：指定要使用的 Dockerfile 路径；")]),s._v(" "),a("li",[a("code",[s._v("--tag, -t")]),s._v("：镜像的名字及标签，可以在一次构建中为一个镜像设置多个标签。")])]),s._v(" "),a("p",[a("strong",[s._v("关于最后面.的理解")])]),s._v(" "),a("p",[s._v("我们在使用 "),a("code",[s._v("docker build")]),s._v(" 命令去构建镜像时，往往会看到命令最后会有一个 "),a("code",[s._v(".")]),s._v(" 号。它究竟是什么意思呢？")]),s._v(" "),a("p",[s._v("很多人以为是用来指定 "),a("code",[s._v("Dockerfile")]),s._v(" 文件所在的位置的，但其实 "),a("code",[s._v("-f")]),s._v(" 参数才是用来指定 "),a("code",[s._v("Dockerfile")]),s._v(" 的路径的，那么 "),a("code",[s._v(".")]),s._v(" 号究竟是用来做什么的呢？")]),s._v(" "),a("p",[a("code",[s._v("Docker")]),s._v(" 在运行时分为 "),a("code",[s._v("Docker 引擎（服务端守护进程）")]),s._v(" 和 "),a("code",[s._v("客户端工具")]),s._v("，我们日常使用各种 "),a("code",[s._v("docker 命令")]),s._v("，其实就是在使用 "),a("code",[s._v("客户端工具")]),s._v(" 与 "),a("code",[s._v("Docker 引擎")]),s._v(" 进行交互。")]),s._v(" "),a("p",[s._v("当我们使用 "),a("code",[s._v("docker build")]),s._v(" 命令来构建镜像时，这个构建过程其实是在 "),a("code",[s._v("Docker 引擎")]),s._v(" 中完成的，而不是在本机环境。如果在 "),a("code",[s._v("Dockerfile")]),s._v(" 中使用了一些 "),a("code",[s._v("ADD")]),s._v(" 等指令来操作文件，如何让 "),a("code",[s._v("Docker 引擎")]),s._v(" 获取到这些文件呢？")]),s._v(" "),a("p",[s._v("这里就有了一个 "),a("code",[s._v("镜像构建上下文")]),s._v(" 的概念，当构建的时候，由用户指定构建镜像时的上下文路径，而 "),a("code",[s._v("docker build")]),s._v(" 会将这个路径下所有的文件都打包上传给 "),a("code",[s._v("Docker 引擎")]),s._v("，引擎内将这些内容展开后，就能获取到上下文中的文件了。")]),s._v(" "),a("p",[s._v("举个例子：我的宿主机 jdk 文件在 /root 目录下，Dockerfile 文件在 /usr/local/dockerfile 目录下，文件内容如下：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ADD jdk-11.0.6_linux-x64_bin.tar.gz /usr/local/java\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("那么构建镜像时的命令就该这样写：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" /usr/local/dockerfile/Dockerfile "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" mycentos:7 /root\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("再举个例子：我的宿主机 jdk 文件和 Dockerfile 文件都在 /usr/local/dockerfile 目录下，文件内容如下：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ADD jdk-11.0.6_linux-x64_bin.tar.gz /usr/local/java\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("那么构建镜像时的命令则这样写：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker build -f /usr/local/dockerfile/Dockerfile -t mycentos:7 .\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_2-3-实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-实例"}},[s._v("#")]),s._v(" 2.3 实例")]),s._v(" "),a("p",[s._v("接下来我们通过基础镜像 "),a("code",[s._v("centos:7")]),s._v("，在该镜像中安装 jdk 和 tomcat 以后将其制作为一个新的镜像 "),a("code",[s._v("mscentos:7")])]),s._v(" "),a("p",[s._v("创建目录")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /mnt/docker/dockerfile\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("编写 Dockerfile 文件。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" Dockerfile\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Dockerfile 文件内容如下：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指明构建的新镜像是来自于 centos:7 基础镜像")]),s._v("\nFROM centos:7\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过镜像标签声明了作者信息")]),s._v("\nLABEL "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("maintainer")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mszlu.com"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置工作目录")]),s._v("\nWORKDIR /usr/local\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 新镜像构建成功以后创建指定目录")]),s._v("\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /usr/local/java "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /usr/local/tomcat\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拷贝文件到镜像中并解压")]),s._v("\nADD jdk-11.0.8_linux-x64_bin.tar.gz /usr/local/java\nADD apache-tomcat-9.0.59.tar.gz /usr/local/tomcat\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暴露容器运行时的 8080 监听端口给外部")]),s._v("\nEXPOSE "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置容器内 JAVA_HOME 环境变量")]),s._v("\nENV JAVA_HOME /usr/local/java/jdk-11.0.8/\nENV "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$JAVA_HOME")]),s._v("/bin\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动容器时启动 tomcat")]),s._v("\nCMD "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/local/tomcat/apache-tomcat-9.0.59/bin/catalina.sh"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"run"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("上传jdk和tomcat到Dockerfile一样的目录下")]),s._v(" "),a("p",[s._v("构建镜像")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker build -f /usr/local/dockerfile/Dockerfile -t mscentos:7 .")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("使用构建的镜像创建容器")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-di")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--name")]),s._v(" mscentos7 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":8080 mscentos:7\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 访问 http://192.168.200.101:8080/ 看到页面说明环境 OK!")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);