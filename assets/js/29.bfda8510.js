(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{389:function(s,a,t){"use strict";t.r(a);var n=t(7),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络"}},[s._v("#")]),s._v(" 网络")]),s._v(" "),a("p",[s._v("容器网络发展到现在，形成了两大阵营，就是 Docker 的 CNM 和 Google、CoreOS、Kuberenetes 主导的 CNI。首先明确一点，CNM 和 CNI 并不是网络实现，他们是网络规范和网络体系，从研发的角度他们就是一堆接口，你底层是用 Flannel 也好、用 Calico 也好，他们并不关心，CNM 和 CNI 关心的是网络管理的问题。")]),s._v(" "),a("ul",[a("li",[s._v("CNM（Container Network Model）: Docker Libnetwork 的优势就是原生，而且和 Docker 容器生命周期结合紧密；缺点也可以理解为是原生，被 Docker 绑架。支持 CNM 的网络模型包括了 Docker Swarm overlay, Macvlan & IP networkdrivers, Calico, Contiv, Weave.")]),s._v(" "),a("li",[s._v("CNI 的优势是兼容其他容器技术（e.g. rkt）及上层编排系统（Kubernetes & Mesos)，而且社区活跃势头迅猛，Kubernetes 加上 CoreOS 主推；缺点是非 Docker 原生。支持 CNI 的网络模型包括了 Kubernetes, Weave, Macvlan, Calico, Flannel, Contiv, Mesos CNI.")])]),s._v(" "),a("p",[a("img",{attrs:{src:"img/2cd5fa6b4975bf2a11fb1ba28028e9ef.png",alt:"CNI：容器网络接口_CNI  kubernetes"}})]),s._v(" "),a("p",[s._v("CNI 的规范比较小巧。它规定了一个容器runtime和网络插件之间的简单的契约。这个契约通过JSON的语法定义了CNI插件所需要提供的输入和输出。一个容器可以被加入到被不同插件所驱动的多个网络之中。一个网络有自己对应的插件和唯一的名称。CNI 插件需要提供两个命令：一个用来将网络接口加入到指定网络，另一个用来将其移除。这两个接口分别在容器被创建和销毁的时候被调用。")]),s._v(" "),a("p",[s._v("容器runtime首先需要分配一个网络命名空间以及一个容器ID。然后连同一些CNI配置参数传给网络驱动。接着网络驱动会将该容器连接到网络并将分配的IP地址以JSON的格式返回给容器runtime。")]),s._v(" "),a("h2",{attrs:{id:"_1-网络解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-网络解决方案"}},[s._v("#")]),s._v(" 1. 网络解决方案")]),s._v(" "),a("h3",{attrs:{id:"_1-1-隧道方案-overlay-networking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-隧道方案-overlay-networking"}},[s._v("#")]),s._v(" 1.1 隧道方案（Overlay Networking）")]),s._v(" "),a("p",[s._v("隧道模式分为两个过程：分配网段和封包/解包两个过程。")]),s._v(" "),a("p",[s._v("分配网络：宿主机利用etcd（etcd中维护ip）会为当前主机上运行的容器分配一个虚拟ip，并且宿主机上运行一个代理网络进程agent，代理出入的数据包。")]),s._v(" "),a("p",[s._v("封包/解包：宿主上的agent进程会改变容器的发出的数据包的源ip和目的ip，目的宿主机上的agent收到数据包进行拆包然后送到目的容器。")]),s._v(" "),a("ul",[a("li",[s._v("Weave：UDP 广播，本机建立新的 BR，通过 PCAP 互通")]),s._v(" "),a("li",[s._v("Open vSwitch（OVS）：基于 VxLan 和 GRE 协议，但是性能方面损失比较严重")]),s._v(" "),a("li",[s._v("Flannel：Flannel 主要提供了 Overlay 的网络方案，UDP 模式由于其封包拆包的过程涉及了多次上下文的切换，导致性能很差，逐渐被社区抛弃；VXLAN 模式的封包拆包过程均在内核态，性能要比 UDP 好很多，也是最经常使用的模式；host-gw 模式不涉及封包拆包，所以性能相对较高，但要求节点间二层互通。")]),s._v(" "),a("li",[s._v("Racher：IPsec")])]),s._v(" "),a("h3",{attrs:{id:"_1-2-路由方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-路由方案"}},[s._v("#")]),s._v(" 1.2 路由方案")]),s._v(" "),a("p",[s._v("整个路由过程分为分配网段、广播路由两个阶段。")]),s._v(" "),a("p",[s._v("分配网段： 类似隧道模式，每台宿主上的agent会从etcd中为每个容器分配一个虚ip。")]),s._v(" "),a("p",[s._v("广播路由：agent会在宿主机上增加一套路由规则，凡是目的地址是该容器的ip的就发往容器的虚拟网卡上，同时会通过BGP广播协议将自己的虚拟ip发往集群中其他node节点，其他的node节点收到广播同样在本机创建一条路由规则：该虚拟ip的数据包发至他的宿主机ip上。")]),s._v(" "),a("ul",[a("li",[s._v("Calico：Calico 主要采用了 BGP 协议交换路由，没有采用 cni0 网桥，当二层网络不通的时候，可以采用 IPIP 模式，但由于涉及到封包拆包的过程，性能相对较弱，与 Flannel 的 VXLAN 模式相当。Calico 支持很细致的 ACL 控制，对混合云亲和度比较高。")]),s._v(" "),a("li",[s._v("Macvlan：从逻辑和 Kernel 层来看隔离性和性能最优的方案，基于二层隔离，所以需要二层路由器支持，大多数云服务商不支持，所以混合云上比较难以实现。")])]),s._v(" "),a("blockquote",[a("p",[s._v("由于隧道模式存在封包和拆包的过程而路由模式没有，所以路由模式性能高于隧道模式。")]),s._v(" "),a("p",[s._v("路由模式会因为路由表膨胀性能下降。")])]),s._v(" "),a("h3",{attrs:{id:"_1-3-k8s-pod网络创建流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-k8s-pod网络创建流程"}},[s._v("#")]),s._v(" 1.3 k8s Pod网络创建流程")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("每个Pod除了创建时指定的容器外，都有一个kubelet启动时指定的基础容器")])]),s._v(" "),a("li",[a("p",[s._v("kubelet创建基础容器，生成network namespace")])]),s._v(" "),a("li",[a("p",[s._v("kubelet调用网络CNI driver，由它根据配置调用具体的CNI 插件")])]),s._v(" "),a("li",[a("p",[s._v("CNI 插件给基础容器配置网络")])]),s._v(" "),a("li",[a("p",[s._v("Pod 中其他的容器共享使用基础容器的网络")])])]),s._v(" "),a("h2",{attrs:{id:"_2-pod内部网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-pod内部网络"}},[s._v("#")]),s._v(" 2. Pod内部网络")]),s._v(" "),a("p",[s._v("一个 Pod 中可以包含多个容器，而一个 Pod 只有一个 IP 地址。那么多个容器之间互相访问和访问外网是如何使用这一个 IP 地址呢？\n答案是：多个容器共享同一个底层的网络命名空间 Net（网络设备、网络栈、端口等）。")]),s._v(" "),a("p",[s._v("创建一个 Pod 包含两个容器，pod-two-container.yaml 文件如下：")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" apps/v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Deployment\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("two"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("container\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" dev\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replicas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("matchLabels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" busybox\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" busybox\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/sh"')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-c"')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"while true;do echo hello;sleep 1;done"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl create -f pod-two-container.yaml ")]),s._v("\ndeployment.apps/pod-two-container created\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get pods -n dev -o wide")]),s._v("\nNAME                                 READY   STATUS    RESTARTS   AGE     IP            NODE    NOMINATED NODE   READINESS GATES\npod-two-container-587c7b7696-hn9zt   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("/2     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          4m36s   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".2.52   node2   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("创建 1 个 Pod 中包含 2 个 Container，实际会创建 3 个 Container。多出的一个是“Pause”容器。")]),s._v(" "),a("p",[s._v("该 Container 是 Pod 的基础容器，为其他容器提供网络功能。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@node2 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker ps |grep pod-two")]),s._v("\nb4d1285f6084   nginx                                               "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/docker-entrypoint.…"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" minutes ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" minutes             k8s_nginx_pod-two-container-587c7b7696-hn9zt_dev_9c88e5df-e4e4-4788-aa07-9c38690674b2_0\n1d4fc26fd3ef   busybox                                             "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/sh -c \'while t…"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" minutes ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" minutes             k8s_busybox_pod-two-container-587c7b7696-hn9zt_dev_9c88e5df-e4e4-4788-aa07-9c38690674b2_0\n300151f64387   registry.aliyuncs.com/google_containers/pause:3.6   "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/pause"')]),s._v("                 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" minutes ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" minutes             k8s_POD_pod-two-container-587c7b7696-hn9zt_dev_9c88e5df-e4e4-4788-aa07-9c38690674b2_0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("查看 Pause 容器的基础信息：")]),s._v(" "),a("p",[s._v("17b1f574d524d5c2ddcc2ca3a98cdf124de59fbbf21668865e7356c4e609c8b4")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@node2 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker inspect 300151f64387")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Id"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"300151f643875bd89df937ddd380584ebf3cf677a544295fe9d6fe0b3ee2dcbc"')]),s._v(",\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("查看 Nginx 详细信息，其网络命名空间使用了 Pause 容器的命名空间，同样还有进程间通信的命名空间:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@node2 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker inspect b4d1285f6084")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"NetworkMode"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"container:300151f643875bd89df937ddd380584ebf3cf677a544295fe9d6fe0b3ee2dcbc"')]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"IpcMode"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"container:300151f643875bd89df937ddd380584ebf3cf677a544295fe9d6fe0b3ee2dcbc"')]),s._v(",\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("查看 Busybox，也是一样")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@node2 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker inspect 1d4fc26fd3ef")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"NetworkMode"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"container:300151f643875bd89df937ddd380584ebf3cf677a544295fe9d6fe0b3ee2dcbc"')]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"IpcMode"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"container:300151f643875bd89df937ddd380584ebf3cf677a544295fe9d6fe0b3ee2dcbc"')]),s._v(",\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("实现方式：Nginx 和 Busybox 之所以能够和 Pause 的命名空间连通是因为 Docker 有一个特性：能够在创建时使用指定 Docker 的网络命名空间。")]),s._v(" "),a("p",[a("img",{attrs:{src:"img/1060878-20211030155423487-674353917.png",alt:"img"}})]),s._v(" "),a("h2",{attrs:{id:"_3-flannel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-flannel"}},[s._v("#")]),s._v(" 3. Flannel")]),s._v(" "),a("p",[s._v("Docker 的网络模式可以解决一个节点上的容器之间的网络通信问题，但是对于跨主机的容器之间的通信就无能为力了，就需要借助第三方的工具来实现容器的跨主机通信。为解决容器跨主机通信问题，社区出现了很多种网络解决方案。")]),s._v(" "),a("p",[a("code",[s._v("Flannel")]),s._v(" 是 CoreOS（Etcd 的公司）推出的一个 Overlay 类型的容器网络插件，目前支持三种后端实现："),a("code",[s._v("UDP")]),s._v("、"),a("code",[s._v("VXLAN")]),s._v("、"),a("code",[s._v("host-gw")]),s._v(" 三种方式。UDP 是最开始支持的最简单的但是却是性能最差的一种方式，已经被弃用")]),s._v(" "),a("p",[a("code",[s._v("Flannel")]),s._v("的功能是让集群中的不同节点主机创建的Docker容器都具有全集群唯一的虚拟IP地址。")]),s._v(" "),a("h3",{attrs:{id:"_3-1-vxlan-方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-vxlan-方式"}},[s._v("#")]),s._v(" 3.1 VXLAN 方式")]),s._v(" "),a("p",[a("code",[s._v("VXLAN")]),s._v("，即 Virtual Extensible LAN（虚拟可扩展局域网），是 Linux 内核本身就支持的一种网络虚似化技术。所以说，VXLAN 可以完全在内核态实现封装和解封装的工作,性能高很多。flannel默认就是使用的VXLAN方式。")]),s._v(" "),a("p",[s._v("当我们使用 "),a("code",[s._v("VXLAN")]),s._v(" 模式的时候需要将 Flanneld 的 Backend 类型修改为 "),a("code",[s._v("vxlan")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master k8s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl edit cm kube-flannel-cfg -n kube-flannel")]),s._v("\nnet-conf.json: "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Network"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.244.0.0/16"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Backend"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vxlan"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#默认的 不用改")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("重建下 Flanneld 的所有 Pod")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#也可以不重建 默认就是vxlan模式，如果不是改了之后需要重建")]),s._v("\nkubectl delete pod "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" kube-flannel "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("app")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("flannel\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master k8s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get pods -n kube-flannel                ")]),s._v("\nNAME                    READY   STATUS    RESTARTS        AGE\nkube-flannel-ds-c6czj   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("8m10s ago"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   9m2s\nkube-flannel-ds-c9v27   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("8m10s ago"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   9m2s\nkube-flannel-ds-wrf75   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("8m30s ago"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   9m2s\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master k8s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl logs -f kube-flannel-ds-c6czj -n kube-flannel")]),s._v("\nI0817 04:35:02.751806       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" kube.go:128"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Node controller "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),s._v(" successful\nI0817 04:35:02.751832       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" main.go:227"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Created subnet manager: Kubernetes Subnet Manager - master\nI0817 04:35:02.751836       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" main.go:230"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Installing signal handlers\nI0817 04:35:02.751879       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" main.go:467"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Found network config - Backend type: vxlan\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("出现Found network config - Backend type: vxlan`的日志信息就证明已经配置成功了")]),s._v(" "),a("p",[s._v("Flannel 在启动时会通过 "),a("code",[s._v("Netlink")]),s._v(" 机制与 Linux 内核通信，建立一个 "),a("code",[s._v("VTEP（Virtual Tunnel Access End Point）")]),s._v(" 设备 "),a("code",[s._v("flannel.1")]),s._v("（命名规则为"),a("code",[s._v("flannel.[VNI]")]),s._v("，VNI 默认为1），类似于交换机当中的一个网口。我们可以通过 "),a("code",[s._v("ip -d link")]),s._v(" 命令查看 "),a("code",[s._v("VTEP")]),s._v(" 设备 "),a("code",[s._v("flannel.1")]),s._v(" 的配置信息：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master k8s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  ip -d link show flannel.1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(": flannel.1: "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BROADCAST,MULTICAST"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1450")]),s._v(" qdisc noqueue state DOWN mode DEFAULT group default \n    link/ether f6:32:d6:2b:e5:c9 brd ff:ff:ff:ff:ff:ff promiscuity "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" \n    vxlan "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".200.101 dev ens33 srcport "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" dstport "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8472")]),s._v(" nolearning ageing "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),s._v(" noudpcsum noudp6zerocsumtx noudp6zerocsumrx addrgenmode eui64 numtxqueues "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" numrxqueues "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" gso_max_size "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v(" gso_max_segs "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65535")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("从上面输出可以看到，"),a("code",[s._v("VTEP")]),s._v(" 的 local IP 为 192.168.200.101，destination port 为 "),a("code",[s._v("8472")]),s._v("。可以在节点上查看进程监听情况：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@node1 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# netstat -ulnp | grep 8472")]),s._v("\nudp        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:8472            "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:*                           -   \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("最后一栏显示的不是进程的 ID 和名称，而是一个破折号"),a("code",[s._v("“-”")]),s._v("，这说明 UDP 的8472端口不是由用户态的进程在监听的，也证实了"),a("code",[s._v("VXLAN")]),s._v("模块工作在内核态模式下。")]),s._v(" "),a("p",[s._v("在 UDP 模式下由 Flannel 进程进行网络包的封包和解包的工作，而在 "),a("code",[s._v("VXLAN")]),s._v(" 模式下解封包的事情交由内核处理，下面我们来看下 Flannel 后端的具体工具流程。当 Flannel 启动时将创建 "),a("code",[s._v("VTEP")]),s._v(" 设备 "),a("code",[s._v("flannel.1")]),s._v("，并将 "),a("code",[s._v("VTEP")]),s._v(" 设备的相关信息上报到 etcd 当中，而当在 Flannel 网络中有新的节点发现时，各个节点上的 Flannel 进程将依次执行以下流程：")]),s._v(" "),a("ol",[a("li",[s._v("在节点当中创建一条该节点所属网段的路由表，主要是能让 Pod 当中的流量路由到 "),a("code",[s._v("flannel.1")]),s._v(" 接口。通过"),a("code",[s._v("route -n")]),s._v("可以查看到节点当中已经有2条 "),a("code",[s._v("flannel.1")]),s._v(" 接口的路由：")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@node1 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# route -n")]),s._v("\nKernel IP routing table\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".200.2   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0         UG    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" ens33\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".0.0      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".0.0      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.0   UG    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" flannel.1\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".1.0      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.0   U     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" cni0\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".2.0      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".2.0      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.0   UG    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" flannel.1\n\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("比如 "),a("code",[s._v("10.244.2.0")]),s._v(" 这条路由规则，他的意思就是发往 "),a("code",[s._v("10.244.2.0/24")]),s._v(" 网段的 IP 包，都需要经过 "),a("code",[s._v("flannel.1")]),s._v(" 设备发出，而且最后被发送到的网关地址是 "),a("code",[s._v("10.244.2.0")]),s._v("。而其实这个网关地址就是 node2 节点上的 VTEP 设备（也就是 flannel.1）的 IP 地址：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@node2 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ifconfig")]),s._v("\nflannel.1: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("flags")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("416")]),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("3")]),s._v("<")]),s._v("UP,BROADCAST,RUNNING,MULTICAST"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  mtu "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1450")]),s._v("\n        inet "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".2.0  netmask "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.255  broadcast "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0\n        inet6 fe80::e40e:c2ff:fe41:c1c5  prefixlen "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v("  scopeid 0x2"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("0")]),s._v("<")]),s._v("link"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n        ether e6:0e:c2:41:c1:c5  txqueuelen "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Ethernet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        RX packets "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  bytes "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(" B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        RX errors "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  dropped "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  overruns "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  frame "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n        TX packets "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  bytes "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(" B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        TX errors "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  dropped "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" overruns "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  carrier "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  collisions "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[s._v("上面知道了目的 VTEP 设备的 IP 地址了，这个时候就需要知道目的 MAC 地址，才能把数据包发送过去，这个时候其实 Flannel 进程就会在节点当中维护所有节点的 IP 以及 "),a("code",[s._v("VTEP")]),s._v(" 设备的静态 "),a("code",[s._v("ARP")]),s._v(" 缓存。可通过 "),a("code",[s._v("arp -n")]),s._v(" 命令查看到当前节点当中已经缓存了另外2个节点以及 "),a("code",[s._v("VTEP")]),s._v(" 的 ARP 信息。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@node1 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# arp -n")]),s._v("\nAddress                  HWtype  HWaddress           Flags Mask            Iface\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".200.101          ether   00:0c:29:97:8d:3b   C                     ens33\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".2.0               ether   e6:0e:c2:41:c1:c5   CM                    flannel.1\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".1.144             ether   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("62")]),s._v(":4c:a6:34:87:3a   C                     cni0\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".200.1            ether   00:50:56:c0:00:08   C                     ens33\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".0.0               ether   f6:32:d6:2b:e5:c9   CM                    flannel.1\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".200.2            ether   00:50:56:fc:b2:c0   C                     ens33\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".200.103          ether   00:0c:29:9c:45:1c   C                     ens33\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("这里我们可以看到 IP 地址 "),a("code",[s._v("10.244.2.0")]),s._v(" 对应的 MAC 地址是 "),a("code",[s._v("e6:0e:c2:41:c1:c5")]),s._v("，这样我们就知道了目的 VTEP 设备的 MAC 地址。但是现在我们只是知道了目标设备的 MAC 地址，却不知道对应的宿主机的地址是什么？")])]),s._v(" "),a("li",[a("p",[s._v("这个时候 Flannel 进程还会在节点当中添加一条该节点的转发表，通过 "),a("code",[s._v("bridge")]),s._v(" 命令查看节点上的 VXLAN 转发表（FDB entry），MAC 为 "),a("code",[s._v("VTEP")]),s._v(" 设备即 "),a("code",[s._v("flannel.1")]),s._v(" 的 MAC 地址，IP 为 VTEP 对应的对外 IP（可通过 Flanneld 的启动参数 "),a("code",[s._v("--iface=eth0")]),s._v(" 指定，若不指定则按默认网关查找网络接口对应的 IP），可以看到已经有2条转发表。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@node1 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bridge fdb show dev flannel.1")]),s._v("\nf6:32:d6:2b:e5:c9 dst "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".200.101 self permanent\ne6:0e:c2:41:c1:c5 dst "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".200.103 self permanent\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("这样我们就找到了上面目的 VTEP 设备的 MAC 地址对应的 IP 地址为 192.168.200.103 的主机，这就是我们的 node2 节点，所以我们就找到了要发往的目的地址。")]),s._v(" "),a("p",[s._v("这个时候容器跨节点网络通信实现的完整流程为：")]),s._v(" "),a("p",[s._v("node1上假设有一个pod-a（假设IP为10.244.1.236），node2上有一个pod-b（假设IP为10.244.2.123），两个pod要进行通信")]),s._v(" "),a("ul",[a("li",[s._v("pod-a(10.244.1.236)当中的 IP 包通过 pod-a 内的路由表被发送到 "),a("code",[s._v("cni0")])]),s._v(" "),a("li",[s._v("到达 "),a("code",[s._v("cni0")]),s._v(" 当中的 IP 包通过匹配节点 node1 当中的路由表发现通往 10.244.2.123 包应该交给 "),a("code",[s._v("flannel.1")]),s._v(" 接口")]),s._v(" "),a("li",[a("code",[s._v("flannel.1")]),s._v(" 作为一个 VTEP 设备，收到报文后将按照 "),a("code",[s._v("VTEP")]),s._v(" 的配置进行封包，通过 node1 节点上的 arp 和转发表得知 10.244.2.123  属于节点 node2，并且会将 node2 节点对应的 VTEP 设备的 MAC 地址，根据 "),a("code",[s._v("flannel.1")]),s._v(" 设备创建时的设置的参数（VNI、local IP、Port）进行 VXLAN 封包")]),s._v(" "),a("li",[s._v("通过节点node2 跟 node1 之间的网络连接，VXLAN 包到达 node2 的 eth0 接口")]),s._v(" "),a("li",[s._v("通过端口 8472，VXLAN 包被转发给 VTEP 设备 "),a("code",[s._v("flannel.1")]),s._v(" 进行解包")]),s._v(" "),a("li",[s._v("解封装后的 IP 包匹配节点 node2 当中的路由表（10.244.2.0），内核将 IP 包转发给"),a("code",[s._v("cni0")])]),s._v(" "),a("li",[a("code",[s._v("cni0")]),s._v("将 IP 包转发给连接在 "),a("code",[s._v("cni0")]),s._v(" 上的 pod-b")])])])]),s._v(" "),a("h3",{attrs:{id:"_3-2-host-gw"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-host-gw"}},[s._v("#")]),s._v(" 3.2 host-gw")]),s._v(" "),a("p",[a("code",[s._v("host-gw")]),s._v(" 即 Host Gateway，从名字中就可以想到这种方式是通过把主机当作网关来实现跨节点网络通信的。那么具体如何实现跨节点通信呢？")]),s._v(" "),a("p",[s._v("同VXLAN 模式，首先将 Backend 中的 type 改为"),a("code",[s._v("host-gw")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master k8s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl edit cm kube-flannel-cfg -n kube-flannel")]),s._v("\n  net-conf.json: "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Network"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.244.0.0/16"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Backend"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"host-gw"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("重建：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master k8s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl delete pod -n kube-flannel -l app=flannel")]),s._v("\npod "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kube-flannel-ds-bq8mh"')]),s._v(" deleted\npod "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kube-flannel-ds-ptnz8"')]),s._v(" deleted\npod "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kube-flannel-ds-snp2n"')]),s._v(" deleted\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master k8s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get pods -n kube-flannel ")]),s._v("\nNAME                    READY   STATUS    RESTARTS   AGE\nkube-flannel-ds-45wmx   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          4s\nkube-flannel-ds-77nfp   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          4s\nkube-flannel-ds-lfh77   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          4s\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master k8s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl logs -f kube-flannel-ds-45wmx -n kube-flannel     ")]),s._v("\nI0817 05:09:23.848998       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" main.go:207"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" CLI flags config: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("etcdEndpoints:http://127.0.0.1:4001,http://127.0.0.1:2379 etcdPrefix:/coreos.com/network etcdKeyfile: etcdCertfile: etcdCAFile: etcdUsername: etcdPassword: version:false kubeSubnetMgr:true kubeApiUrl: kubeAnnotationPrefix:flannel.alpha.coreos.com kubeConfigFile: iface:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" ifaceRegex:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" ipMasq:true ifaceCanReach: subnetFile:/run/flannel/subnet.env publicIP: publicIPv6: subnetLeaseRenewMargin:60 healthzIP:0.0.0.0 healthzPort:0 iptablesResyncSeconds:5 iptablesForwardRules:true netConfPath:/etc/kube-flannel/net-conf.json setNodeNetworkUnavailable:true"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nW0817 05:09:23.849086       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" client_config.go:614"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Neither "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--kubeconfig")]),s._v(" nor "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--master")]),s._v(" was specified.  Using the inClusterConfig.  This might not work.\nI0817 05:09:23.859722       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" kube.go:121"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Waiting 10m0s "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("node")]),s._v(" controller to "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),s._v("\nI0817 05:09:23.947888       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" kube.go:402"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Starting kube subnet manager\nI0817 05:09:24.860379       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" kube.go:128"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Node controller "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),s._v(" successful\nI0817 05:09:24.860405       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" main.go:227"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Created subnet manager: Kubernetes Subnet Manager - master\nI0817 05:09:24.860408       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" main.go:230"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Installing signal handlers\nI0817 05:09:24.860522       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" main.go:467"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Found network config - Backend type: host-gw\nI0817 05:09:24.860551       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" match.go:206"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Determining IP address of default interface\nI0817 05:09:24.861391       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" match.go:259"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Using interface with name ens33 and address "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".200.101\nI0817 05:09:24.861403       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" match.go:281"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Defaulting external address to interface address "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".200.101"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nI0817 05:09:24.868041       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" kube.go:351"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Setting NodeNetworkUnavailable\nI0817 05:09:24.873644       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" main.go:345"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Setting up masking rules\nI0817 05:09:24.953871       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" main.go:366"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Changing default FORWARD chain policy to ACCEPT\nI0817 05:09:24.953942       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" main.go:379"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Wrote subnet "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" to /run/flannel/subnet.env\nI0817 05:09:24.953948       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" main.go:383"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Running backend.\nI0817 05:09:24.953958       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" main.go:404"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Waiting "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" all goroutines to "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\nI0817 05:09:24.953973       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" route_network.go:55"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Watching "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" new subnet leases\nW0817 05:09:24.954143       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" route_network.go:87"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Ignoring non-host-gw subnet: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("vxlan\nW0817 05:09:24.954160       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" route_network.go:87"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Ignoring non-host-gw subnet: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("vxlan\nI0817 05:09:24.954176       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" route_network.go:92"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Subnet added: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".2.0/24 via "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".200.103\nI0817 05:09:24.983520       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" route_network.go:92"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Subnet added: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".1.0/24 via "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".200.102\nI0817 05:09:25.051836       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" iptables.go:177"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" bootstrap "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\nI0817 05:09:25.053959       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" iptables.go:177"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" bootstrap "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br")])]),a("p",[s._v("出现 "),a("code",[s._v("Found network config - Backend type: host-gw")]),s._v(" 日志就证明已经是 "),a("code",[s._v("host-gw")]),s._v(" 模式了")]),s._v(" "),a("p",[s._v("采用 "),a("code",[s._v("host-gw")]),s._v(" 模式后 Flannel 的唯一作用就是"),a("strong",[s._v("负责主机上路由表的动态更新")]),s._v("，其实就是将每个 Flannel 子网（Flannel Subnet，比如：10.244.1.0/24）的"),a("code",[s._v("“下一跳”")]),s._v("，设置成了该子网对应的宿主机的 IP 地址，当然，Flannel 子网和主机的信息，都是保存在 etcd 当中的。Fannel 只需要 WACTH 这些数据的变化，然后实时更新路由表即可。主要流程如下所示：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("同 VXLAN 模式一致，通过容器A 的路由表 IP 包到达"),a("code",[s._v("cni0")])])]),s._v(" "),a("li",[a("p",[s._v("到达 "),a("code",[s._v("cni0")]),s._v(" 的 IP 包匹配到 node1 当中的路由规则（10.244.2.0），并且网关为 192.168.200.103，即节点 node2，所以内核将 IP 包发送给节点 node2（192.168.200.103）:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master k8s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# route -n")]),s._v("\nKernel IP routing table\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".200.2   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0         UG    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" ens33\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".1.0      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".200.102 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.0   UG    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" ens33\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".2.0      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".200.103 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.0   UG    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" ens33\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.17")]),s._v(".0.0      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".0.0     U     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" docker0\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".200.0   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.0   U     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" ens33\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("IP 包通过物理网络到达节点的 node2 的 eth0 设备")])]),s._v(" "),a("li",[a("p",[s._v("到达 node2 节点 eth0 的 IP 包匹配到节点当中的路由表（10.244.2.0/24），IP 包被转发给 "),a("code",[s._v("cni0")]),s._v(" 设备")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("cni0")]),s._v(" 将 IP 包转发给连接在 "),a("code",[s._v("cni0")]),s._v(" 上的 pod-b")])])]),s._v(" "),a("p",[s._v("这样就完成了整个跨主机通信流程，这个流程可能是最简单最容器理解的模式了，而且容器通信的过程还免除了额外的封包和解包带来的性能损耗，所以理论上性能肯定要更好，但是该模式是通过节点上的"),a("strong",[s._v("路由表")]),s._v("来实现各个节点之间的跨节点网络通信，那么就得保证两个节点是可以"),a("strong",[s._v("直接路由")]),s._v("过去的。按照内核当中的路由规则，网关必须在跟主机当中至少一个 IP 处于同一网段，故造成的结果就是采用"),a("code",[s._v("host-gw")]),s._v(" 这种模式的时候，集群中所有的节点必须处于同一个网络当中，这对于集群规模比较大时需要对节点进行网段划分的话会存在一定的局限性，另外一个则是随着集群当中节点规模的增大，Flannel 需要维护主机上成千上万条路由表的动态更新也是一个不小的压力。")]),s._v(" "),a("p",[a("code",[s._v("Calico")]),s._v(" 这种网络插件和 Flannel 的 "),a("code",[s._v("host-gw")]),s._v(" 模式基本上是一样的，都是在每台主机上面添加子网和对应的主机的 IP 地址为网关这样的路由信息，不过，不同于 Flannel 通过 Etcd 和宿主机上的 flannel 来维护路由信息的做法，Calico 使用 "),a("code",[s._v("bgp")]),s._v(" 来自动地在整个集群中分发路由信息。")]),s._v(" "),a("h2",{attrs:{id:"_4-networkpolicy-网络策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-networkpolicy-网络策略"}},[s._v("#")]),s._v(" 4. NetworkPolicy（网络策略）")]),s._v(" "),a("p",[s._v("在 Kubernetes 中要实现容器之间网络的隔离，是通过一个专门的 API 对象 "),a("code",[s._v("NetworkPolicy")]),s._v("（网络策略）来实现的，要让网络策略生效，就需要特定的网络插件支持，目前已经实现了 "),a("code",[s._v("NetworkPolicy")]),s._v(" 的网络插件包括 Calico、Weave 和 kube-router 等项目，但是并不包括 Flannel 项目。所以说，如果想要在使用 Flannel 的同时还使用 NetworkPolicy 的话，你就需要再额外安装一个网络插件，比如 Calico 项目，来负责执行 NetworkPolicy。由于我们这里使用的是 Flannel 网络插件，所以首先需要安装 Calico 来负责网络策略。")]),s._v(" "),a("h3",{attrs:{id:"_4-1-安装-calico"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-安装-calico"}},[s._v("#")]),s._v(" 4.1 安装 Calico")]),s._v(" "),a("p",[s._v("首先确定 kube-controller-manager 配置了如下的两个参数：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("spec:\n  containers:\n  - command:\n    - kube-controller-manager\n    - --allocate-node-cidrs"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n    - --cluster-cidr"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".0.0/16\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("如果是用的kubeadm，配置"),a("code",[s._v("--pod-network-cidr=10.244.0.0/16")]),s._v("即可，我们在安装的环境已经做了这个配置。")]),s._v(" "),a("p",[s._v("下载需要使用的资源清单文件")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master k8s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# curl https://projectcalico.docs.tigera.io/manifests/canal.yaml -O")]),s._v("\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17738")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17738")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13530")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(":00:01  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(":00:01 --:--:-- "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13530")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("如果之前配置的 pod CIDR 就是 "),a("code",[s._v("10.244.0.0/16")]),s._v(" 网段，则可以跳过下面的配置，如果不同则可以使用如下方式进行替换：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("POD_CIDR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<your-pod-cidr>"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s?10.244.0.0/16?'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$POD_CIDR")]),s._v('?g"')]),s._v(" canal.yaml\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("然后直接安装即可：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master k8s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl apply -f canal.yaml ")]),s._v("\nconfigmap/canal-config created\ncustomresourcedefinition.apiextensions.k8s.io/bgpconfigurations.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/bgppeers.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/blockaffinities.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/caliconodestatuses.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/clusterinformations.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/felixconfigurations.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/globalnetworkpolicies.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/globalnetworksets.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/hostendpoints.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/ipamblocks.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/ipamconfigs.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/ipamhandles.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/ippools.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/ipreservations.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/kubecontrollersconfigurations.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/networkpolicies.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/networksets.crd.projectcalico.org created\nclusterrole.rbac.authorization.k8s.io/calico-kube-controllers created\nclusterrolebinding.rbac.authorization.k8s.io/calico-kube-controllers created\nclusterrole.rbac.authorization.k8s.io/calico-node created\nclusterrole.rbac.authorization.k8s.io/flannel created\nclusterrolebinding.rbac.authorization.k8s.io/canal-flannel created\nclusterrolebinding.rbac.authorization.k8s.io/canal-calico created\ndaemonset.apps/canal created\nserviceaccount/canal created\ndeployment.apps/calico-kube-controllers created\nserviceaccount/calico-kube-controllers created\npoddisruptionbudget.policy/calico-kube-controllers created\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br")])]),a("h3",{attrs:{id:"_4-2-网络策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-网络策略"}},[s._v("#")]),s._v(" 4.2 网络策略")]),s._v(" "),a("p",[s._v("默认情况下 Pod 是可以接收来自任何发送方的请求，也可以向任何接收方发送请求。而如果我们要对这个情况作出限制，就必须通过 "),a("code",[s._v("NetworkPolicy")]),s._v(" 对象来指定。")]),s._v(" "),a("p",[s._v("我们这里定义了一个网络策略资源清单文件：(test-network-policy.yaml)")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" networking.k8s.io/v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" NetworkPolicy\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("network"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("policy\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" dev\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("podSelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("matchLabels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("role")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" db\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("policyTypes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" Ingress\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" Egress\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ingress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ipBlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cidr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 172.17.0.0/16\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("except")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 172.17.1.0/24\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespaceSelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("matchLabels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("project")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" myproject\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("podSelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("matchLabels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("role")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" frontend\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("egress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ipBlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cidr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10.0.0.0/24\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TCP\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5978")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br")])]),a("p",[s._v("与所有其他的 Kubernetes 资源对象一样，NetworkPolicy 需要 "),a("code",[s._v("apiVersion")]),s._v("、"),a("code",[s._v("kind")]),s._v(" 和 "),a("code",[s._v("metadata")]),s._v(" 字段，我们通过 "),a("code",[s._v("spec.podSelector")]),s._v(" 字段定义这个 NetworkPolicy 的限制范围，因为 NetworkPolicy 目前只支持定义 "),a("code",[s._v("ingress")]),s._v(" 规则，所以这里的 "),a("code",[s._v("podSelector")]),s._v(" 本质上是为该策略定义 “目标pod”, 比如我们这里 "),a("code",[s._v("matchLabels:role=db")]),s._v(" 表示的就是当前 Namespace 里携带了 "),a("code",[s._v("role=db")]),s._v(" 标签的 Pod。而如果你把 "),a("code",[s._v("podSelector")]),s._v(" 字段留空：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("spec: \n  podSelector: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("那么这个 NetworkPolicy 就会作用于当前 Namespace 下的所有 Pod。")]),s._v(" "),a("p",[s._v("然后每个 NetworkPolicy 包含一个 "),a("code",[s._v("policyTypes")]),s._v(" 列表，可以是一个 "),a("code",[s._v("Ingress")]),s._v("、"),a("code",[s._v("Egress")]),s._v(" 或者都包含，该字段表示给当前策略是否应用于所匹配的 Pod 的入口流量、出口流量或者二者都包含，如果没有指定 "),a("code",[s._v("policyTypes")]),s._v("，则默认情况下表示 "),a("code",[s._v("Ingress")]),s._v(" 入口流量，如果配置了任何出口流量规则，则将指定为 "),a("code",[s._v("Egress")]),s._v("。")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("规则")])]),s._v(" "),a("p",[s._v("一旦 Pod 被 NetworkPolicy 选中，那么这个 Pod 就会进入"),a("code",[s._v("“拒绝所有”（Deny All）")]),s._v("的状态，即这个 Pod 既不允许被外界访问，也不允许对外界发起访问，所以 NetworkPolicy 定义的规则，其实就是“白名单”了。")])]),s._v(" "),a("p",[s._v("比如上面示例表示的是该隔离规则只对 dev命名空间下的，携带了 "),a("code",[s._v("role=db")]),s._v(" 标签的 Pod 有效。限制的请求类型包括 ingress（流入）和 egress（流出）。")]),s._v(" "),a("p",[a("strong",[s._v("ingress")]),s._v(": 每个 NetworkPolicy 包含一个 ingress 规则的白名单列表。其中的规则允许同时匹配 "),a("code",[s._v("from")]),s._v(" 和 "),a("code",[s._v("ports")]),s._v(" 部分的流量。比如上面示例中我们配置的入口流量规则如下所示：")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ingress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ipBlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cidr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 172.17.0.0/16\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("except")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 172.17.1.0/24\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespaceSelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("matchLabels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("project")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" myproject\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("podSelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("matchLabels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("role")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" frontend\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TCP\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("这里的 ingress 规则中我们定义了 "),a("code",[s._v("from")]),s._v(" 和 "),a("code",[s._v("ports")]),s._v("，表示允许流入的"),a("code",[s._v("白名单")]),s._v("和端口，上面我们也说了 Kubernetes 会拒绝任何访问被隔离 Pod 的请求，除非这个请求来自于以下“白名单”里的对象或者访问的是80端口。而这个允许流入的"),a("code",[s._v("白名单")]),s._v("中指定了三种并列的情况，分别是："),a("code",[s._v("ipBlock")]),s._v("、"),a("code",[s._v("namespaceSelector")]),s._v(" 和 "),a("code",[s._v("podSelector")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("dev命名空间下面带有 "),a("code",[s._v("role=frontend")]),s._v(" 标签的 Pod")]),s._v(" "),a("li",[s._v("带有 "),a("code",[s._v("project=myproject")]),s._v(" 标签的 Namespace 下的任何 Pod")]),s._v(" "),a("li",[s._v("任何源地址属于 "),a("code",[s._v("172.17.0.0/16")]),s._v(" 网段，且不属于 "),a("code",[s._v("172.17.1.0/24")]),s._v(" 网段的请求。")])]),s._v(" "),a("p",[a("strong",[s._v("egress")]),s._v(": 每个 NetworkPolicy 包含一个 egress 规则的白名单列表。每个规则都允许匹配 "),a("code",[s._v("to")]),s._v(" 和 "),a("code",[s._v("port")]),s._v(" 部分的流量。比如我们这里示例规则的配置：")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("egress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ipBlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cidr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10.0.0.0/24\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TCP\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5978")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("表示 Kubernetes 会拒绝被隔离 Pod 对外发起任何请求，除非请求的目的地址属于 "),a("code",[s._v("10.0.0.0/24")]),s._v(" 网段，并且访问的是该网段地址的 "),a("code",[s._v("5978")]),s._v(" 端口。")]),s._v(" "),a("h4",{attrs:{id:"_4-2-1-测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-测试"}},[s._v("#")]),s._v(" 4.2.1 测试")]),s._v(" "),a("p",[s._v("比如现在我们创建一个 Pod，带有 "),a("code",[s._v("role=db")]),s._v(" 的 Label 标签：(test-networkpolicy-pod.yaml)")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("networkpolicy\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" dev\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("role")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" db\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" testnp\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("创建pod")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl apply -f test-networkpolicy-pod.yaml ")]),s._v("\npod/test-networkpolicy created\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("在创建一个pod，test-pod.yaml")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("pod\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" dev\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl apply -f test-pod.yaml ")]),s._v("\npod/test-pod created\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("用test-pod对test-networkpolicy发起网络调用")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get pods -n dev -o wide")]),s._v("\nNAME                                 READY   STATUS        RESTARTS        AGE     IP            NODE    NOMINATED NODE   READINESS GATES\ntest-networkpolicy                   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("               2m39s   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".1.3    node1   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\ntest-pod                             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("               81s     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".2.2    node2   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl exec test-pod curl 10.244.1.3 -n dev")]),s._v("\nkubectl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("POD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("COMMAND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" is DEPRECATED and will be removed "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a future version. Use kubectl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("POD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" -- "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("COMMAND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" instead.\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("615")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("615")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("38437")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" --:--:-- --:--:-- --:--:-- "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("38437")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("DOCTYPE html"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("html"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("head"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("title"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Welcome to nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/title"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("style"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nhtml "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" color-scheme: light dark"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nbody "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" width: 35em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" margin: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nfont-family: Tahoma, Verdana, Arial, sans-serif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/style"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/head"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("body"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("h"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v("Welcome to nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/h"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required."),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("For online documentation and support please refer to\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://nginx.org/"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("nginx.org"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("."),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("br/"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nCommercial support is available at\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://nginx.com/"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("nginx.com"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("."),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("em"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Thank you "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" using nginx."),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/em"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/body"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/html"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br")])]),a("p",[s._v("我们可以看到可以成功请求，这个时候我们来创建上面的 NetworkPolicy 对象：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl apply -f test-network-policy.yaml ")]),s._v("\nnetworkpolicy.networking.k8s.io/test-network-policy created\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl describe networkpolicy -n dev")]),s._v("\nName:         test-network-policy\nNamespace:    dev\nCreated on:   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2022")]),s._v("-08-17 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(":33:18 +0800 CST\nLabels:       "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nAnnotations:  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nSpec:\n  PodSelector:     "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("role")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("db\n  Allowing ingress traffic:\n    To Port: "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("any"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("traffic allowed to all ports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    From:\n      IPBlock:\n        CIDR: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.17")]),s._v(".0.0/16\n        Except: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.17")]),s._v(".1.0/24\n    From:\n      NamespaceSelector: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("project")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("myproject\n    From:\n      PodSelector: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("role")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("frontend\n  Allowing egress traffic:\n    To Port: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5978")]),s._v("/TCP\n    To:\n      IPBlock:\n        CIDR: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.0/24\n        Except: \n  Policy Types: Ingress, Egress\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("p",[s._v("这个时候我们创建了一个网络策略，由于匹配了网络策略的就会拒绝所有的网络请求，需要通过白名单来进行开启请求，由于我们这里的测试 Pod 明显没有在白名单之中，所以就会拒绝网络请求了：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl exec test-pod -n dev -- curl 10.244.1.3")]),s._v("\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" --:--:--  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(":00:04 --:--:--     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("这个时候我们可以用 NetworkPolicy 白名单里面匹配的 Pod 来对上面的 Pod 发起网络请求，比如在带有标签 "),a("code",[s._v("project=myproject")]),s._v(" 的 Namespace 下面的 Pod 来发起网络请求，或者给 test-pod 加上一个 "),a("code",[s._v("role=frontend")]),s._v(" 的标签：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl label pod test-pod -n dev role=frontend")]),s._v("\npod/test-pod labeled\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl exec test-pod -n dev -- curl 10.244.1.3")]),s._v("\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" --:--:-- --:--:-- --:--:--     "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("0")]),s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("DOCTYPE html"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("html"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("head"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("title"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Welcome to nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/title"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("style"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nhtml "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" color-scheme: light dark"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nbody "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" width: 35em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" margin: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nfont-family: Tahoma, Verdana, Arial, sans-serif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/style"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/head"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("body"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("h"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v("Welcome to nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/h"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required."),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("For online documentation and support please refer to\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://nginx.org/"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("nginx.org"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("."),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("br/"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nCommercial support is available at\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://nginx.com/"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("nginx.com"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("."),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("em"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Thank you "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" using nginx."),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/em"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/body"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/html"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("615")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("615")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("   600k      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" --:--:-- --:--:-- --:--:--  600k\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("p",[s._v("Kubernetes 的 NetworkPolicy 实现了访问控制，依赖的底层是依靠网络插件添加 iptables 规则来进行控制的，但是在每个节点上都需要配置大量 iptables 规则，加上不同维度控制的增加，导致运维、排障难度较大，所以如果不是特别需要的场景，最好不要使用")])])}),[],!1,null,null,null);a.default=e.exports}}]);