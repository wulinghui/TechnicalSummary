(window.webpackJsonp=window.webpackJsonp||[]).push([[226],{586:function(s,t,a){"use strict";a.r(t);var n=a(7),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),t("p",[s._v("UDP是"),t("strong",[s._v("传输层")]),s._v("的协议，功能即为在IP的数据报文服务之上增加了最基本的服务："),t("strong",[s._v("复用")]),s._v("和"),t("strong",[s._v("分用")]),s._v("以及"),t("strong",[s._v("差错检测")]),s._v("。")]),s._v(" "),t("h1",{attrs:{id:"特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[s._v("#")]),s._v(" 特点")]),s._v(" "),t("ul",[t("li",[s._v("是无连接的，用一次就断了。相比于TCP协议，UDP协议在传送数据前不需要建立连接，当然也就没有释放连接。")]),s._v(" "),t("li",[s._v("是尽最大努力交付的。也就是说UDP协议无法保证数据能够准确的交付到目的主机。也不需要对接收到的UDP报文进行确认。")]),s._v(" "),t("li",[s._v("是面向报文的。也就是说UDP协议将应用层传输下来的数据封装在一个UDP包中，不进行拆分或合并。因此，运输层在收到对方的UDP包后，会去掉首部后，将数据原封不动的交给应用进程。")]),s._v(" "),t("li",[s._v("没有拥塞控制。因此UDP协议的发送速率不送网络的拥塞度影响。")]),s._v(" "),t("li",[s._v("UDP支持一对一、一对多、多对一和多对多的交互通信。")]),s._v(" "),t("li",[s._v("UDP的头部占用较小，只占用8个字节，TCP首部20字节。")])]),s._v(" "),t("h1",{attrs:{id:"应用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[s._v("#")]),s._v(" 应用场景")]),s._v(" "),t("ul",[t("li",[s._v("UDP也常用于多媒体应用（如IP电话，实时视频会议，流媒体等）数据的可靠传输对他们而言并不重要，TCP的拥塞控制会使他们有较大的延迟，也是不可容忍的")]),s._v(" "),t("li",[s._v("DNS如果运行在TCP之上而不是UDP，那么DNS的速度将会慢很多")])]),s._v(" "),t("h1",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("ul",[t("li",[s._v("和TCP的相比，就是以速度为主，放弃可靠性。")]),s._v(" "),t("li",[s._v("UDP常用于"),t("strong",[s._v("一次性")]),s._v("的，"),t("strong",[s._v("传输少量数据")]),s._v("的，"),t("strong",[s._v("容许丢失")]),s._v("的、网络应用。")]),s._v(" "),t("li",[s._v("或者说是网络波动特别大，tcp动不动就要重发，断线再握手，服务端也要重发发ACK，对2端都不友好。")])]),s._v(" "),t("h1",{attrs:{id:"首部格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#首部格式"}},[s._v("#")]),s._v(" 首部格式")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20181226160325166.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FhMTkyODk5Mjc3Mg==,size_16,color_FFFFFF,t_70",alt:""}})]),s._v(" "),t("h1",{attrs:{id:"传输过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#传输过程"}},[s._v("#")]),s._v(" 传输过程")]),s._v(" "),t("p",[s._v("注意: 他们没有连接，也就是说他是单向的，谁都是客户端和服务端。")]),s._v(" "),t("p",[s._v("客户端 -> 发送消息  -> 接收数剧(可选) -> 关闭套接字")]),s._v(" "),t("p",[s._v("服务端 -> 接收数剧  ->   发送消息 -> 关闭套接字")]),s._v(" "),t("p",[t("strong",[s._v("还有:")]),s._v(" 当传输层从IP层收到UDP数据报时，就根据首部中的目的端口，把UDP数据报通过相应的端口，上交给应用进程。\n如果接收方UDP发现收到的报文中的目的端口号不正确（不存在对应端口号的应用进程0,），就丢弃该报文，并由ICMP发送“端口不可达”差错报文给对方。 ICMP是网络层协议，第三层的，在udp层是不知道的哟。 也就是说udp只管发，错了我也不知道，也不管。")]),s._v(" "),t("p",[t("strong",[s._v("但是")]),s._v("一般编程是会写客户端和服务器，来接收和响应数据的，如下图。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201017230229558.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzODEyODY4,size_16,color_FFFFFF,t_70#pic_center",alt:""}})]),s._v(" "),t("h1",{attrs:{id:"java编码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java编码"}},[s._v("#")]),s._v(" java编码")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IOException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//定义udp数据套接字，监听端口.")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DatagramSocket")]),s._v("  server "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DatagramSocket")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5050")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//作为服务端，接收数据，并放到DatagramPacket，数组中存放")]),s._v("\n        server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("receive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("recvPacket"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里会阻塞，直到有消息。")]),s._v("\n        \n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n        作为客户端，\n        定义数据的发送\n        */")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//通过接收到的数据包\t获取发送方的端口")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" port "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" recvPacket"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//通过接收到的数据包\t获取发送方的ip地址")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InetAddress")]),s._v(" addr "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" recvPacket"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getAddress")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//封装需要发送的udp数据包")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DatagramPacket")]),s._v(" sendPacket \n            "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DatagramPacket")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Recv Msg"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sendBuf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" addr "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" port "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//发送数据包")]),s._v("\n        server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sendPacket"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里也不会阻塞..只管发")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br")])]),t("h1",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/u011532367/article/details/50544106",target:"_blank",rel:"noopener noreferrer"}},[s._v("UDP传输协议"),t("OutboundLink")],1)]),s._v(" "),t("blockquote",[t("p",[s._v("大致传输流程，和java代码")])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/aa1928992772/article/details/85240358",target:"_blank",rel:"noopener noreferrer"}},[s._v("UDP协议的详细解析"),t("OutboundLink")],1)]),s._v(" "),t("blockquote",[t("p",[s._v("优势介绍、首部格式、UDP校验。")]),s._v(" "),t("p",[t("strong",[s._v("常用一次性传输比较少量数据的网络应用")])])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/chengfengwenalan/article/details/84496477",target:"_blank",rel:"noopener noreferrer"}},[s._v("UDP介绍"),t("OutboundLink")],1)]),s._v(" "),t("blockquote",[t("p",[s._v("UDP协议介绍\nUDP数据包格式\nIP协议介绍\n用户数据、 UDP、 IP、 MAC 四个报文的关系")])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.jianshu.com/p/89b5737347f7",target:"_blank",rel:"noopener noreferrer"}},[s._v("Java实现UDP通信"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);