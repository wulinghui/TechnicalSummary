(window.webpackJsonp=window.webpackJsonp||[]).push([[210],{571:function(t,e,a){"use strict";a.r(e);var s=a(7),r=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"string"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String")]),t._v(" "),e("h2",{attrs:{id:"常用操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用操作"}},[t._v("#")]),t._v(" 常用操作")]),t._v(" "),e("ul",[e("li",[t._v("SET  key  value \t\t\t//存入字符串键值对")]),t._v(" "),e("li",[t._v("MSET  key  value [key value ...] \t//批量存储字符串键值对")]),t._v(" "),e("li",[t._v("SETNX  key  value \t\t//存入一个不存在的字符串键值对")]),t._v(" "),e("li",[t._v("GET  key \t\t\t//获取一个字符串键值")]),t._v(" "),e("li",[t._v("MGET  key  [key ...]\t \t//批量获取字符串键值")]),t._v(" "),e("li",[t._v("DEL  key  [key ...] \t\t//删除一个键")]),t._v(" "),e("li",[t._v("EXPIRE  key  seconds \t\t//设置一个键的过期时间(秒)")])]),t._v(" "),e("h2",{attrs:{id:"原子加减"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原子加减"}},[t._v("#")]),t._v(" 原子加减")]),t._v(" "),e("ul",[e("li",[t._v("INCR  key \t\t\t//将key中储存的数字值加1")]),t._v(" "),e("li",[t._v("DECR  key \t\t\t//将key中储存的数字值减1")]),t._v(" "),e("li",[t._v("INCRBY  key  increment \t\t//将key所储存的值加上increment")]),t._v(" "),e("li",[t._v("DECRBY  key  decrement \t//将key所储存的值减去decrement")])]),t._v(" "),e("h2",{attrs:{id:"场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#场景"}},[t._v("#")]),t._v(" 场景")]),t._v(" "),e("h3",{attrs:{id:"单值缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单值缓存"}},[t._v("#")]),t._v(" 单值缓存")]),t._v(" "),e("ul",[e("li",[t._v("SET  key  value")]),t._v(" "),e("li",[t._v("GET  key")])]),t._v(" "),e("h3",{attrs:{id:"对象缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象缓存"}},[t._v("#")]),t._v(" 对象缓存")]),t._v(" "),e("ul",[e("li",[t._v("SET  user:1  value(json格式数据)")]),t._v(" "),e("li",[t._v("MSET  user:1:name  zhuge   user:1:balance  1888")])]),t._v(" "),e("h3",{attrs:{id:"分布式锁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁"}},[t._v("#")]),t._v(" 分布式锁")]),t._v(" "),e("ul",[e("li",[t._v("SETNX  product:10001  0 \t\t//返回1代表获取锁成功 //返回0代表获取锁失败")]),t._v(" "),e("li",[t._v("DEL  product:10001\t\t\t//执行完业务释放锁")])]),t._v(" "),e("h3",{attrs:{id:"计数器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#计数器"}},[t._v("#")]),t._v(" 计数器")]),t._v(" "),e("ul",[e("li",[t._v("INCR article:readcount:{文章id}")]),t._v(" "),e("li",[t._v("GET article:readcount:{文章id}")])]),t._v(" "),e("h3",{attrs:{id:"分布式系统全局序列号"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分布式系统全局序列号"}},[t._v("#")]),t._v(" 分布式系统全局序列号")]),t._v(" "),e("ul",[e("li",[t._v("INCRBY  orderId  1000\t\t//redis批量生成序列号提升性能")])]),t._v(" "),e("h1",{attrs:{id:"hash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hash"}},[t._v("#")]),t._v(" hash")]),t._v(" "),e("h2",{attrs:{id:"常用操作-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用操作-2"}},[t._v("#")]),t._v(" 常用操作")]),t._v(" "),e("ul",[e("li",[t._v("HSET  key  field  value \t\t\t//存储一个哈希表key的键值")]),t._v(" "),e("li",[t._v("HSETNX  key  field  value \t\t//存储一个不存在的哈希表key的键值")]),t._v(" "),e("li",[t._v("HMSET  key  field  value [field value ...] \t//在一个哈希表key中存储多个键值对")]),t._v(" "),e("li",[t._v("HGET  key  field \t\t\t\t//获取哈希表key对应的field键值")]),t._v(" "),e("li",[t._v("HMGET  key  field  [field ...] \t\t//批量获取哈希表key中多个field键值")]),t._v(" "),e("li",[t._v("HDEL  key  field  [field ...] \t\t//删除哈希表key中的field键值")]),t._v(" "),e("li",[t._v("HLEN  key\t\t\t\t//返回哈希表key中field的数量")]),t._v(" "),e("li",[t._v("HGETALL key\t\t\t\t//返回哈希表key中所有的键值")]),t._v(" "),e("li",[t._v("HINCRBY  key  field  increment \t\t//为哈希表key中field键的值加上增量increment")])]),t._v(" "),e("h2",{attrs:{id:"场景-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#场景-2"}},[t._v("#")]),t._v(" 场景")]),t._v(" "),e("h3",{attrs:{id:"对象缓存-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象缓存-2"}},[t._v("#")]),t._v(" 对象缓存")]),t._v(" "),e("ul",[e("li",[t._v("HMSET  user  1:name  zhuge  1:balance  1888")]),t._v(" "),e("li",[t._v("HMGET  user  1:name  1:balance")])]),t._v(" "),e("h3",{attrs:{id:"购物车"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#购物车"}},[t._v("#")]),t._v(" 购物车")]),t._v(" "),e("ul",[e("li",[t._v("添加商品 hset cart:1001 10088 1")]),t._v(" "),e("li",[t._v("增加数量 hincrby cart:1001 10088 1")]),t._v(" "),e("li",[t._v("商品总数 hlen cart:1001")]),t._v(" "),e("li",[t._v("删除商品 hdel cart:1001 10088")]),t._v(" "),e("li",[t._v("获取购物车所有商品 hgetall cart:1001")])]),t._v(" "),e("h2",{attrs:{id:"优点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),e("ul",[e("li",[t._v("同类数据归类整合储存，方便数据管理")]),t._v(" "),e("li",[t._v("相比string操作消耗内存与cpu更小")]),t._v(" "),e("li",[t._v("相比string储存更节省空间")])]),t._v(" "),e("h2",{attrs:{id:"缺点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),e("ul",[e("li",[t._v("过期功能不能使用在field上，只能用在key上")]),t._v(" "),e("li",[t._v("Redis集群架构下不适合大规模使用，bigKey的产生，key偏移，因为无法进行数据分片存储，会导致数据过于集中，从而导致单节点压力过大")])]),t._v(" "),e("h1",{attrs:{id:"list"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[t._v("#")]),t._v(" list")]),t._v(" "),e("h2",{attrs:{id:"常用操作-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用操作-3"}},[t._v("#")]),t._v(" 常用操作")]),t._v(" "),e("ul",[e("li",[t._v("LPUSH  key  value [value ...] \t\t//将一个或多个值value插入到key列表的表头(最左边)")]),t._v(" "),e("li",[t._v("RPUSH  key  value [value ...]\t \t//将一个或多个值value插入到key列表的表尾(最右边)")]),t._v(" "),e("li",[t._v("LPOP  key\t\t\t//移除并返回key列表的头元素")]),t._v(" "),e("li",[t._v("RPOP  key\t\t\t//移除并返回key列表的尾元素")]),t._v(" "),e("li",[t._v("LRANGE  key  start  stop\t\t//返回列表key中指定区间内的元素，区间以偏移量start和stop指定")]),t._v(" "),e("li",[t._v("BLPOP  key  [key ...]  timeout\t//从key列表表头弹出一个元素，若列表中没有元素，阻塞等待\t\t\t\t\ttimeout秒,如果timeout=0,一直阻塞等待")]),t._v(" "),e("li",[t._v("BRPOP  key  [key ...]  timeout \t//从key列表表尾弹出一个元素，若列表中没有元素，阻塞等待\t\t\t\t\ttimeout秒,如果timeout=0,一直阻塞等待")])]),t._v(" "),e("h2",{attrs:{id:"场景-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#场景-3"}},[t._v("#")]),t._v(" 场景")]),t._v(" "),e("h3",{attrs:{id:"栈"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#栈"}},[t._v("#")]),t._v(" 栈")]),t._v(" "),e("p",[t._v("LPUSH + LPOP")]),t._v(" "),e("h3",{attrs:{id:"队列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#队列"}},[t._v("#")]),t._v(" 队列")]),t._v(" "),e("p",[t._v("LPUSH + RPOP")]),t._v(" "),e("h3",{attrs:{id:"阻塞队列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#阻塞队列"}},[t._v("#")]),t._v(" 阻塞队列")]),t._v(" "),e("p",[t._v("LPUSH + BRPOP")]),t._v(" "),e("h3",{attrs:{id:"消息流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#消息流"}},[t._v("#")]),t._v(" 消息流")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("发消息  LPUSH  msg:{User_ID}  10018")])]),t._v(" "),e("li",[e("p",[t._v("查看最新消息 LRANGE  msg:{User_ID}  0  4")])])]),t._v(" "),e("h1",{attrs:{id:"set"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" set")]),t._v(" "),e("h2",{attrs:{id:"常用操作-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用操作-4"}},[t._v("#")]),t._v(" 常用操作")]),t._v(" "),e("ul",[e("li",[t._v("SADD  key  member  [member ...]\t\t\t//往集合key中存入元素，元素存在则忽略，若key不存在则新建")]),t._v(" "),e("li",[t._v("SREM  key  member  [member ...]\t\t\t//从集合key中删除元素")]),t._v(" "),e("li",[t._v("SMEMBERS  key\t\t\t\t\t//获取集合key中所有元素")]),t._v(" "),e("li",[t._v("SCARD  key\t\t\t\t\t//获取集合key的元素个数")]),t._v(" "),e("li",[t._v("SISMEMBER  key  member\t\t\t//判断member元素是否存在于集合key中")]),t._v(" "),e("li",[t._v("SRANDMEMBER  key  [count]\t\t\t//从集合key中选出count个元素，元素不从key中删除")]),t._v(" "),e("li",[t._v("SPOP  key  [count]\t\t\t\t//从集合key中选出count个元素，元素从key中删除")])]),t._v(" "),e("h2",{attrs:{id:"运算操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运算操作"}},[t._v("#")]),t._v(" 运算操作")]),t._v(" "),e("ul",[e("li",[t._v("SINTER  key  [key ...] \t\t\t\t//交集运算")]),t._v(" "),e("li",[t._v("SINTERSTORE  destination  key  [key ..]\t\t//将交集结果存入新集destination中")]),t._v(" "),e("li",[t._v("SUNION  key  [key ..] \t\t\t\t//并集运算")]),t._v(" "),e("li",[t._v("SUNIONSTORE  destination  key  [key ...]\t\t//将并集结果存入新集合destination中")]),t._v(" "),e("li",[t._v("SDIFF  key  [key ...] \t\t\t\t//差集运算")]),t._v(" "),e("li",[t._v("SDIFFSTORE  destination  key  [key ...]\t\t//将差集结果存入新集合destination中")])]),t._v(" "),e("h2",{attrs:{id:"应用场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),e("h3",{attrs:{id:"抽奖"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#抽奖"}},[t._v("#")]),t._v(" 抽奖")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("点击参与抽奖加入集合   SADD key {userlD}")])]),t._v(" "),e("li",[e("p",[t._v("查看参与抽奖所有用户   SMEMBERS key")])]),t._v(" "),e("li",[e("p",[t._v("抽取count名中奖者")]),t._v(" "),e("blockquote",[e("ul",[e("li",[t._v("SRANDMEMBER key [count]")]),t._v(" "),e("li",[t._v("SPOP key [count]")])])])])]),t._v(" "),e("h3",{attrs:{id:"点赞-收藏-标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#点赞-收藏-标签"}},[t._v("#")]),t._v(" 点赞，收藏，标签")]),t._v(" "),e("ul",[e("li",[t._v("点赞 \t\tSADD  like:{消息ID}  {用户ID}")]),t._v(" "),e("li",[t._v("取消点赞  SREM like:{消息ID}  {用户ID}")]),t._v(" "),e("li",[t._v("检查用户是否点过赞  SISMEMBER  like:{消息ID}  {用户ID}")]),t._v(" "),e("li",[t._v("获取点赞的用户列表  SMEMBERS like:{消息ID}")]),t._v(" "),e("li",[t._v("获取点赞用户数         SCARD like:{消息ID}")])]),t._v(" "),e("h3",{attrs:{id:"关注模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关注模型"}},[t._v("#")]),t._v(" 关注模型")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("共同关注")]),t._v(" "),e("blockquote",[e("p",[t._v("SINTER ASet BSet // 交集")])])]),t._v(" "),e("li",[e("p",[t._v("我关注的人也关注他")]),t._v(" "),e("blockquote",[e("p",[t._v("SISMEMBER ASet zhangsan")]),t._v(" "),e("p",[t._v("SISMEMBER BSet zhangsan")]),t._v(" "),e("p",[t._v("共同判断,是否存在")])])]),t._v(" "),e("li",[e("p",[t._v("可能认识的人")]),t._v(" "),e("blockquote",[e("p",[t._v("SDIFF ASet BSet // 差集")])])])]),t._v(" "),e("h3",{attrs:{id:"商品筛选"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#商品筛选"}},[t._v("#")]),t._v(" 商品筛选")]),t._v(" "),e("ul",[e("li",[t._v("SADD  brand:huawei  P40")]),t._v(" "),e("li",[t._v("SADD  brand:xiaomi  mi-10")]),t._v(" "),e("li",[t._v("SADD  brand:iPhone iphone12")]),t._v(" "),e("li",[t._v("SADD os:android  P40  mi-10")]),t._v(" "),e("li",[t._v("SADD cpu:brand:intel  P40  mi-10")]),t._v(" "),e("li",[t._v("SADD ram:8G  P40  mi-10  iphone12")]),t._v(" "),e("li",[t._v("交集筛选:")]),t._v(" "),e("li",[t._v("SINTER  os:android  cpu:brand:intel  ram:8G")]),t._v(" "),e("li",[t._v("结果:  {P40，mi-10}")])]),t._v(" "),e("h1",{attrs:{id:"zset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zset"}},[t._v("#")]),t._v(" zset")]),t._v(" "),e("h2",{attrs:{id:"常用操作-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用操作-5"}},[t._v("#")]),t._v(" 常用操作")]),t._v(" "),e("ul",[e("li",[t._v("ZADD key score member [[score member]…]\t//往有序集合key中加入带分值元素")]),t._v(" "),e("li",[t._v("ZREM key member [member …]\t\t//从有序集合key中删除元素")]),t._v(" "),e("li",[t._v("ZSCORE key member \t\t\t//返回有序集合key中元素member的分值")]),t._v(" "),e("li",[t._v("ZINCRBY key increment member\t\t//为有序集合key中元素member的分值加上increment")]),t._v(" "),e("li",[t._v("ZCARD key\t\t\t\t//返回有序集合key中元素个数")]),t._v(" "),e("li",[t._v("ZRANGE key start stop [WITHSCORES]\t//正序获取有序集合key从start下标到stop下标的元素")]),t._v(" "),e("li",[t._v("ZREVRANGE key start stop [WITHSCORES]\t//倒序获取有序集合key从start下标到stop下标的元素")])]),t._v(" "),e("h2",{attrs:{id:"集合操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#集合操作"}},[t._v("#")]),t._v(" 集合操作")]),t._v(" "),e("ul",[e("li",[t._v("ZUNIONSTORE destkey numkeys key [key ...] \t//并集计算")]),t._v(" "),e("li",[t._v("ZINTERSTORE destkey numkeys key [key …]\t//交集计算")])]),t._v(" "),e("h2",{attrs:{id:"应用场景-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-2"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),e("ul",[e("li",[t._v("点击新闻 ZINCRBY  hotNews:20190819  1  守护香港")]),t._v(" "),e("li",[t._v("展示当日排行前十")]),t._v(" "),e("li",[t._v("七日搜索榜单计算")]),t._v(" "),e("li",[t._v("展示七日排行前十")])]),t._v(" "),e("h1",{attrs:{id:"bitmap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bitmap"}},[t._v("#")]),t._v(" BitMap")]),t._v(" "),e("h2",{attrs:{id:"常用操作-6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用操作-6"}},[t._v("#")]),t._v(" 常用操作")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("setbit key offset value   // 对 key 所储存的字符串值，设置或清除指定偏移量上的位(bit)")])]),t._v(" "),e("li",[e("p",[t._v("getbit key offset      // 对 key 所储存的字符串值，获取指定偏移量上的位 ( bit )")])]),t._v(" "),e("li",[e("p",[t._v("BITCOUNT key [start] [end]   //统计字符串被设置为1的bit数.")])])]),t._v(" "),e("h2",{attrs:{id:"集合操作-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#集合操作-2"}},[t._v("#")]),t._v(" 集合操作")]),t._v(" "),e("ul",[e("li",[t._v("BITOP AND destkey key [key ...] ，对一个或多个 key 求逻辑并，并将结果保存到 destkey 。")]),t._v(" "),e("li",[t._v("BITOP OR destkey key [key ...] ，对一个或多个 key 求逻辑或，并将结果保存到 - destkey 。")]),t._v(" "),e("li",[t._v("BITOP XOR destkey key [key ...] ，对一个或多个 key 求逻辑异或，并将结果保存到 destkey 。")]),t._v(" "),e("li",[t._v("BITOP NOT destkey key ，对给定 key 求逻辑非，并将结果保存到 destkey 。")])]),t._v(" "),e("h2",{attrs:{id:"应用场景-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-3"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("海量数据统计，统计10W日活用户")])]),t._v(" "),e("li",[e("p",[t._v("高效统计，汉明重量算法")]),t._v(" "),e("blockquote",[e("p",[t._v("统计一个位数组中非0位的数量，数学上称作：”Hanmming Weight“，汉明重量")])])]),t._v(" "),e("li",[e("p",[t._v("布尔过滤器")])]),t._v(" "),e("li",[e("p",[t._v("实现用户上线次数统计")])]),t._v(" "),e("li",[e("p",[t._v("用户在线状态及人数统计记录")])]),t._v(" "),e("li",[e("p",[t._v("连续7日活跃用户")])])]),t._v(" "),e("h2",{attrs:{id:"注意事项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),e("ul",[e("li",[t._v("需要体量大，切间隙少的情况下可以用")])]),t._v(" "),e("h1",{attrs:{id:"hyperloglog"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hyperloglog"}},[t._v("#")]),t._v(" HyperLogLog")]),t._v(" "),e("h2",{attrs:{id:"常用操作-7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用操作-7"}},[t._v("#")]),t._v(" 常用操作")]),t._v(" "),e("ul",[e("li",[t._v("PFADD key element [element …]    // 添加指定元素到 HyperLogLog 中。")]),t._v(" "),e("li",[t._v("PFCOUNT key [key …]                   //返回给定 HyperLogLog 的基数("),e("strong",[t._v("不重复元素的个数")]),t._v(")估算值。")]),t._v(" "),e("li",[t._v("PFMERGE destkey sourcekey [sourcekey …]                  //  将多个 HyperLogLog 合并为一个 HyperLogLog")])]),t._v(" "),e("h2",{attrs:{id:"应用场景-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-4"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("计算日活、7日活、月活数据")]),t._v(" "),e("blockquote",[e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" PFADD ip_20190301 "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"192.168.0.1"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"192.168.0.6"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"192.168.0.7"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回 ip_20190301 包含的唯一元素的近似数量")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" PFCOUNT ip_20190301\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" PFADD ip_20190301 "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"192.168.0.5"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" PFCOUNT ip_20190301\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" PFADD ip_20190302 "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"192.168.0.1"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"192.168.0.6"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"192.168.0.7"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回 ip_20190301 和 ip_20190302 包含的唯一元素的近似数量")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" PFCOUNT ip_20190301 ip_20190302\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])])])])]),t._v(" "),e("h1",{attrs:{id:"geo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#geo"}},[t._v("#")]),t._v(" GEO")]),t._v(" "),e("h2",{attrs:{id:"geohash算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#geohash算法"}},[t._v("#")]),t._v(" GeoHash算法")]),t._v(" "),e("p",[t._v("GeoHash利用Z阶曲线进行编码，Z阶曲线可以将二维所有点都转换成一阶曲线。地理位置坐标点通过编码转化成一维值，利用 有序数据结构如B树、SkipList等，均可进行范围搜索。因此利用GeoHash算法查找邻近点比较快")]),t._v(" "),e("h3",{attrs:{id:"缺点-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缺点-2"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),e("p",[t._v("Z 阶曲线有一个比较严重的问题，虽然有局部保序性，但是它也有突变性。在每个 Z 字母的拐角，都有可能出现顺序的突变。")]),t._v(" "),e("h2",{attrs:{id:"常用操作-8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用操作-8"}},[t._v("#")]),t._v(" 常用操作")]),t._v(" "),e("ul",[e("li",[t._v("添加经纬度信息   "),e("code",[t._v('geoadd cityGeo 116.405285 39.904989 "北京"')])]),t._v(" "),e("li",[t._v("查找指定key的经纬度信息，可以指定多个key，批量返回   "),e("code",[t._v("geopos cityGeo 北京")])]),t._v(" "),e("li",[t._v("返回两个地方的距离  "),e("code",[t._v("geodist cityGeo 北京 上海")])]),t._v(" "),e("li",[t._v("根据给定的经纬度，返回半径不超过指定距离的元素 "),e("code",[t._v("georadius cityGeo 116.405285 39.904989 100 km WITHDIST WITHCOORD ASC COUNT 5")])]),t._v(" "),e("li",[t._v("根据指定的地点查询半径在指定范围内的位置 "),e("code",[t._v("georadiusbymember cityGeo 北京 100 km WITHDIST WITHCOORD ASC COUNT 5")])])]),t._v(" "),e("blockquote",[e("p",[t._v("georadiusbymember 和 GEORADIUS 命令一样， 都可以找出位于指定范围内的元素， 但是 georadiusbymember 的中心点是由给定的位置元素决定的， 而不是使用经度和纬度来决定中心点。")])]),t._v(" "),e("h2",{attrs:{id:"参数说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数说明"}},[t._v("#")]),t._v(" 参数说明")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("m ：米，默认单位。")])]),t._v(" "),e("li",[e("p",[t._v("km ：千米。")])]),t._v(" "),e("li",[e("p",[t._v("mi ：英里。")])]),t._v(" "),e("li",[e("p",[t._v("ft ：英尺。")])]),t._v(" "),e("li",[e("p",[t._v("WITHDIST: 在返回位置元素的同时， 将位置元素与中心之间的距离也一并返回。")])]),t._v(" "),e("li",[e("p",[t._v("WITHCOORD: 将位置元素的经度和维度也一并返回。")])]),t._v(" "),e("li",[e("p",[t._v("WITHHASH: 以 52 位有符号整数的形式， 返回位置元素经过原始 geohash 编码的有序集合分值。 这个选项主要用于底层应用或者调试， 实际中的作用并不大。")])]),t._v(" "),e("li",[e("p",[t._v("COUNT 限定返回的记录数。")])]),t._v(" "),e("li",[e("p",[t._v("ASC: 查找结果根据距离从近到远排序。")])]),t._v(" "),e("li",[e("p",[t._v("DESC: 查找结果根据从远到近排序。")])]),t._v(" "),e("li",[e("ul",[e("li")])])]),t._v(" "),e("h1",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.redis.com.cn/redis-keys.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redis 命令大全"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.cnblogs.com/yuchenghao/p/12102574.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redis基础总结 "),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.jianshu.com/p/a00801ea872f",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redis-hash类型数据实现购物车"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/a1036645146/article/details/117411087",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用Redis实现关注关系"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/hanierming/article/details/52489969",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redis实现好友关注关系的思路"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/maoyuanming0806/article/details/81813776",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redis：Bitmap的setbit,getbit,bitcount,bitop等使用与应用场景"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/58358264",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redis HyperLogLog 基数统计"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.jianshu.com/p/81bf3baa64e5",target:"_blank",rel:"noopener noreferrer"}},[t._v("redis的GEO实战"),e("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=r.exports}}]);