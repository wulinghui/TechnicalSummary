(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{522:function(t,a,s){"use strict";s.r(a);var r=s(7),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("h2",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),a("h2",{attrs:{id:"和hystrix对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#和hystrix对比"}},[t._v("#")]),t._v(" 和Hystrix对比")]),t._v(" "),a("p",[t._v("总之就是比他更好，且还再更新。")]),t._v(" "),a("h2",{attrs:{id:"功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能"}},[t._v("#")]),t._v(" 功能")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/alibaba/Sentinel/wiki/%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6",target:"_blank",rel:"noopener noreferrer"}},[t._v("流量控制"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/alibaba/Sentinel/wiki/%E9%9B%86%E7%BE%A4%E6%B5%81%E6%8E%A7",target:"_blank",rel:"noopener noreferrer"}},[t._v("集群流控"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/alibaba/Sentinel/wiki/%E7%BD%91%E5%85%B3%E9%99%90%E6%B5%81",target:"_blank",rel:"noopener noreferrer"}},[t._v("网关流控"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/alibaba/Sentinel/wiki/%E7%86%94%E6%96%AD%E9%99%8D%E7%BA%A7",target:"_blank",rel:"noopener noreferrer"}},[t._v("熔断降级"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/alibaba/Sentinel/wiki/%E7%83%AD%E7%82%B9%E5%8F%82%E6%95%B0%E9%99%90%E6%B5%81",target:"_blank",rel:"noopener noreferrer"}},[t._v("热点参数限流"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/alibaba/Sentinel/wiki/%E7%B3%BB%E7%BB%9F%E8%87%AA%E9%80%82%E5%BA%94%E9%99%90%E6%B5%81",target:"_blank",rel:"noopener noreferrer"}},[t._v("系统自适应限流"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/alibaba/Sentinel/wiki/%E9%BB%91%E7%99%BD%E5%90%8D%E5%8D%95%E6%8E%A7%E5%88%B6",target:"_blank",rel:"noopener noreferrer"}},[t._v("黑白名单控制"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/alibaba/Sentinel/wiki/%E5%AE%9E%E6%97%B6%E7%9B%91%E6%8E%A7",target:"_blank",rel:"noopener noreferrer"}},[t._v("实时监控数据"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/alibaba/Sentinel/wiki/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%99%E6%89%A9%E5%B1%95",target:"_blank",rel:"noopener noreferrer"}},[t._v("动态规则"),a("OutboundLink")],1)])]),t._v(" "),a("h1",{attrs:{id:"功能插槽"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能插槽"}},[t._v("#")]),t._v(" 功能插槽")]),t._v(" "),a("ul",[a("li",[t._v("NodeSelectorSlot 负责收集资源的路径，并将这些资源的调用路径，以树状结构存储起来，用于根据调用路径来限流降级；")]),t._v(" "),a("li",[t._v("ClusterBuilderSlot 则用于存储资源的统计信息以及调用者信息，例如该资源的 RT, QPS, thread count 等等，这些信息将用作为多维度限流，降级的依据；")]),t._v(" "),a("li",[t._v("StatisticSlot 则用于记录、统计不同纬度的 runtime 指标监控信息；")]),t._v(" "),a("li",[t._v("FlowSlot 则用于根据预设的限流规则以及前面 slot 统计的状态，来进行流量控制；")]),t._v(" "),a("li",[t._v("AuthoritySlot 则根据配置的黑白名单和调用来源信息，来做黑白名单控制；")]),t._v(" "),a("li",[t._v("DegradeSlot 则通过统计信息以及预设的规则，来做熔断降级；")]),t._v(" "),a("li",[t._v("SystemSlot 则通过系统的状态，例如 load1 等，来控制总的入口流量；")])]),t._v(" "),a("h1",{attrs:{id:"原生api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原生api"}},[t._v("#")]),t._v(" 原生API")]),t._v(" "),a("h2",{attrs:{id:"编码模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编码模式"}},[t._v("#")]),t._v(" 编码模式")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entry")]),t._v(" entry "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 资源名可使用任意有业务语义的字符串，比如方法名、接口名或其它可唯一标识的字符串。")]),t._v("\n            entry "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SphU")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("entry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RESOURCE_NAME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 被保护的业务逻辑")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"====="')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BlockException")]),t._v(" e1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 资源访问阻止，被限流或被降级")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//进行相应的处理操作")]),t._v("\n            log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"block!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若需要配置降级规则，需要通过这种方式记录业务异常")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Tracer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("traceEntry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" entry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entry "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                entry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br")])]),a("h2",{attrs:{id:"注解代理模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注解代理模式"}},[t._v("#")]),t._v(" 注解代理模式")]),t._v(" "),a("p",[t._v("@SentinelResource")]),t._v(" "),a("h1",{attrs:{id:"控制台介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制台介绍"}},[t._v("#")]),t._v(" 控制台介绍")]),t._v(" "),a("p",[t._v("机器发现以及健康情况管理、监控（单机和集群），规则管理和推送的功能。")]),t._v(" "),a("h2",{attrs:{id:"流控规则配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流控规则配置"}},[t._v("#")]),t._v(" 流控规则配置")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("资源名")]),t._v(":  接口的API")]),t._v(" "),a("li",[a("strong",[t._v("针对来源")]),t._v(":  默认是default，当多个微服务都调用这个资源时，可以配置微服务名来对指定的微服务设置阈值")]),t._v(" "),a("li",[a("strong",[t._v("阈值类型")]),t._v(": 分为QPS和线程数 假设阈值为10")]),t._v(" "),a("li",[a("strong",[t._v("QPS类型")]),t._v(": 只得是每秒访问接口的次数>10就进行限流")]),t._v(" "),a("li",[a("strong",[t._v("线程数")]),t._v(": 为接受请求该资源分配的线程数>10就进行限流")])]),t._v(" "),a("h3",{attrs:{id:"限流阈值类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#限流阈值类型"}},[t._v("#")]),t._v(" 限流阈值类型")]),t._v(" "),a("ul",[a("li",[t._v("线程数")]),t._v(" "),a("li",[t._v("QPS")])]),t._v(" "),a("h3",{attrs:{id:"流控模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流控模式"}},[t._v("#")]),t._v(" 流控模式")]),t._v(" "),a("h4",{attrs:{id:"直接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#直接"}},[t._v("#")]),t._v(" 直接")]),t._v(" "),a("p",[t._v("资源调用达到设置的阈值后直接被流控抛出异常")]),t._v(" "),a("h4",{attrs:{id:"关联"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关联"}},[t._v("#")]),t._v(" 关联")]),t._v(" "),a("p",[t._v("当关联的资源达到阈值，对当前的资源流控")]),t._v(" "),a("p",[t._v("当两个资源之间具有资源争抢或者依赖关系的时候，这两个资源便具有了关联。比如对数据库同一个字段的读操作和写操作存在争抢，读的速度过高会影响写得速度，写的速度过高会影响读的速度。如果放任读写操作争抢资源，则争抢本身带来的开销会降低整体的吞吐量。可使用关联限流来避免具有关联关系的资源之间过度的争抢，举例来说，read_db 和 write_db 这两个资源分别代表数据库读写，我们可以给 read_db 设置限流规则来达到写优先的目的：设置 strategy 为 RuleConstant.STRATEGY_RELATE 同时设置 refResource 为 write_db。这样当写库操作过于频繁时，读数据的请求会被限流。")]),t._v(" "),a("h4",{attrs:{id:"链路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链路"}},[t._v("#")]),t._v(" 链路")]),t._v(" "),a("p",[t._v("根据调用链路入口限流。")]),t._v(" "),a("p",[t._v("Sentinel 允许只根据某个入口的统计信息对资源限流。")]),t._v(" "),a("p",[t._v("当入口的资源达到阈值，对当前的资源流控")]),t._v(" "),a("h3",{attrs:{id:"流控效果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流控效果"}},[t._v("#")]),t._v(" 流控效果")]),t._v(" "),a("h4",{attrs:{id:"快速失败"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快速失败"}},[t._v("#")]),t._v(" 快速失败")]),t._v(" "),a("p",[t._v("方式是默认的流量控制方式，当QPS超过任意规则的阈值后，新的请求就会被立即拒绝，拒绝方式为抛出FlowException。这种方式适用于对系统处理能力确切已知的情况下，通过压测确定了系统的准确水位时。")]),t._v(" "),a("h4",{attrs:{id:"warm-up"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#warm-up"}},[t._v("#")]),t._v(" Warm Up")]),t._v(" "),a("p",[t._v('即预热/冷启动方式。当系统长期处于低水位的情况下，当流量突然增加时，直接把系统拉升到高水位可能瞬间把系统压垮。通过"冷启动"，让通过的流量缓慢增加，在一定时间内逐渐增加到阈值上限，给冷系统一个预热的时间，避免冷系统被压垮。')]),t._v(" "),a("p",[t._v("冷加载因子: codeFactor 默认是3，即请求 QPS 从 threshold / 3 开始，经预热时长逐渐升至设定的 QPS 阈值。")]),t._v(" "),a("h4",{attrs:{id:"匀速排队"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匀速排队"}},[t._v("#")]),t._v(" 匀速排队")]),t._v(" "),a("p",[t._v("会严格控制请求通过的间隔时间，也即是让请求以均匀的速度通过，对应的是漏桶算法。")]),t._v(" "),a("p",[t._v("应用场景，在某一秒有大量的请求到来，而接下来的几秒则处于空闲状态，我们希望系统能够在接下来的空闲期间逐渐处理这些请求，而不是在第一秒直接拒绝多余的请求。")]),t._v(" "),a("h2",{attrs:{id:"降级规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#降级规则"}},[t._v("#")]),t._v(" 降级规则")]),t._v(" "),a("p",[t._v("除了流量控制以外，对调用链路中不稳定的资源进行熔断降级也是保障高可用的重要措施之一。我们需要对不稳定的"),a("strong",[t._v("弱依赖服务调用")]),t._v("进行熔断降级，暂时切断不稳定调用，避免局部不稳定因素导致整体的雪崩。熔断降级作为保护自身的手段，通常在客户端（调用端）进行配置。")]),t._v(" "),a("h3",{attrs:{id:"熔断策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#熔断策略"}},[t._v("#")]),t._v(" 熔断策略")]),t._v(" "),a("h4",{attrs:{id:"慢调用比例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#慢调用比例"}},[t._v("#")]),t._v(" 慢调用比例")]),t._v(" "),a("p",[t._v("选择以慢调用比例作为阈值，需要设置允许的慢调用 RT（即最大的响应时间），请求的响应时间大于该值则统计为慢调用。当单位统计时长（statIntervalMs）内请求数目大于设置的最小请求数目，并且慢调用的比例大于阈值，则接下来的熔断时长内请求会自动被熔断。经过熔断时长后熔断器会进入探测恢复状态（HALF-OPEN 状态），若接下来的一个请求响应时间小于设置的慢调用 RT 则结束熔断，若大于设置的慢调用 RT 则会再次被熔断。")]),t._v(" "),a("h4",{attrs:{id:"异常比例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异常比例"}},[t._v("#")]),t._v(" 异常比例")]),t._v(" "),a("p",[t._v("当单位统计时长（statIntervalMs）内请求数目大于设置的最小请求数目，并且异常的比例大于阈值，则接下来的熔断时长内请求会自动被熔断。经过熔断时长后熔断器会进入探测恢复状态（HALF-OPEN 状态），若接下来的一个请求成功完成（没有错误）则结束熔断，否则会再次被熔断。异常比率的阈值范围是 [0.0, 1.0]，代表 0% - 100%。")]),t._v(" "),a("h4",{attrs:{id:"异常数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异常数"}},[t._v("#")]),t._v(" 异常数")]),t._v(" "),a("p",[t._v("当单位统计时长内的异常数目超过阈值之后会自动进行熔断。经过熔断时长后熔断器会进入探测恢复状态（HALF-OPEN 状态），若接下来的一个请求成功完成（没有错误）则结束熔断，否则会再次被熔断。")]),t._v(" "),a("h2",{attrs:{id:"热点参数限流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#热点参数限流"}},[t._v("#")]),t._v(" 热点参数限流")]),t._v(" "),a("p",[t._v("热点即经常访问的数据。很多时候我们希望统计某个热点数据中访问频次最高的 Top K 数据，并对其访问进行限制。")]),t._v(" "),a("p",[t._v("热点参数限流会统计传入参数中的热点参数，并根据配置的限流阈值与模式，对包含热点参数的资源调用进行限流。")]),t._v(" "),a("h3",{attrs:{id:"场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#场景"}},[t._v("#")]),t._v(" 场景")]),t._v(" "),a("ul",[a("li",[t._v("商品 ID为5的，是火爆商品，限流，其他的商品都不限流")])]),t._v(" "),a("h3",{attrs:{id:"注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意：")]),t._v(" "),a("ol",[a("li",[t._v('热点规则需要使用@SentinelResource("resourceName")注解，否则不生效')]),t._v(" "),a("li",[t._v("参数必须是7种基本数据类型才会生效")])]),t._v(" "),a("h2",{attrs:{id:"系统规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统规则"}},[t._v("#")]),t._v(" 系统规则")]),t._v(" "),a("p",[t._v("自适应限流从整体维度对应用入口流量进行控制，结合应用的 Load、CPU 使用率、总体平均 RT、入口 QPS 和并发线程数等几个维度的监控指标，通过自适应的流控策略，让系统的入口流量和系统的负载达到一个平衡，让系统尽可能跑在最大吞吐量的同时保证系统整体的稳定性。")]),t._v(" "),a("h3",{attrs:{id:"load-自适应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#load-自适应"}},[t._v("#")]),t._v(" Load 自适应")]),t._v(" "),a("p",[t._v("系统的 load1 作为启发指标，进行自适应系统保护。当系统 load1 超过设定的启发值，且系统当前的并发线程数超过估算的系统容量时才会触发系统保护")]),t._v(" "),a("h3",{attrs:{id:"cpu-usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpu-usage"}},[t._v("#")]),t._v(" CPU usage")]),t._v(" "),a("p",[t._v("当系统 CPU 使用率超过阈值即触发系统保护（取值范围 0.0-1.0），比较灵敏。")]),t._v(" "),a("h3",{attrs:{id:"平均-rt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#平均-rt"}},[t._v("#")]),t._v(" 平均 RT")]),t._v(" "),a("p",[t._v("当单台机器上所有入口流量的平均 RT 达到阈值即触发系统保护，单位是毫秒。")]),t._v(" "),a("h3",{attrs:{id:"并发线程数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#并发线程数"}},[t._v("#")]),t._v(" 并发线程数")]),t._v(" "),a("p",[t._v("当单台机器上所有入口流量的并发线程数达到阈值即触发系统保护。")]),t._v(" "),a("h3",{attrs:{id:"入口-qps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#入口-qps"}},[t._v("#")]),t._v(" 入口 QPS")]),t._v(" "),a("p",[t._v("当单台机器上所有入口流量的 QPS 达到阈值即触发系统保护。")]),t._v(" "),a("h2",{attrs:{id:"授权控制规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#授权控制规则"}},[t._v("#")]),t._v(" 授权控制规则")]),t._v(" "),a("p",[t._v("我们需要根据调用来源来判断该次请求是否允许放行，这时候可以使用 Sentinel 的来源访问控制（黑白名单控制）的功能。来源访问控制根据资源的请求来源（origin）限制资源是否通过，若配置白名单则只有请求来源位于白名单内时才可通过；若配置黑名单则请求来源位于黑名单时不通过，其余的请求通过。")]),t._v(" "),a("h2",{attrs:{id:"集群规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群规则"}},[t._v("#")]),t._v(" 集群规则")]),t._v(" "),a("p",[t._v("假设我们希望给某个用户限制调用某个 API 的总 QPS 为 50，但机器数可能很多（比如有 100 台）。这时候我们很自然地就想到，找一个 server 来专门来统计总的调用量，其它的实例都与这台 server 通信来判断是否可以调用。这就是最基础的集群流控的方式。")]),t._v(" "),a("h3",{attrs:{id:"集群总体模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群总体模式"}},[t._v("#")]),t._v(" 集群总体模式")]),t._v(" "),a("p",[t._v("即限制整个集群内的某个资源的总体 qps 不超过此阈值。")]),t._v(" "),a("h3",{attrs:{id:"单机均摊模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单机均摊模式"}},[t._v("#")]),t._v(" 单机均摊模式")]),t._v(" "),a("p",[t._v("单机均摊模式下配置的阈值等同于单机能够承受的限额，token server 会根据连接数来计算总的阈值（比如独立模式下有 3 个 client 连接到了 token server，然后配的单机均摊阈值为 10，则计算出的集群总量就为 30），按照计算出的总的阈值来进行限制。这种方式根据当前的连接数实时计算总的阈值，"),a("strong",[t._v("对于机器经常进行变更的环境非常适合。")])]),t._v(" "),a("h1",{attrs:{id:"blockexception异常统一处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blockexception异常统一处理"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"http://t.zoukankan.com/huqi96-p-13629037.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("BlockException异常统一处理"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("自定义BlockExceptionHandler 的实现类统一处理BlockException")]),t._v(" "),a("h1",{attrs:{id:"spring组件整合sentinel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring组件整合sentinel"}},[t._v("#")]),t._v(" spring组件整合Sentinel")]),t._v(" "),a("h2",{attrs:{id:"resttemplate整合sentinel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resttemplate整合sentinel"}},[t._v("#")]),t._v(" RestTemplate整合Sentinel")]),t._v(" "),a("p",[t._v("构造 RestTemplate bean的时候需要加上@SentinelRestTemplate 注解")]),t._v(" "),a("h2",{attrs:{id:"openfeign整合sentinel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#openfeign整合sentinel"}},[t._v("#")]),t._v(" OpenFeign整合Sentinel")]),t._v(" "),a("p",[t._v("feign.sentinel.enabled=true")]),t._v(" "),a("h2",{attrs:{id:"dubbo整合sentinel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dubbo整合sentinel"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.jianshu.com/p/480b098aa0d1",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dubbo整合Sentinel"),a("OutboundLink")],1)]),t._v(" "),a("h1",{attrs:{id:"规则的推送"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规则的推送"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.cnblogs.com/linjiqin/p/15375388.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("规则的推送"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("默认使用原始模式，保存在内存中。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/270324/202110/270324-20211007111343323-38621168.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"sentinel使用nacos持久化并动态更新配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sentinel使用nacos持久化并动态更新配置"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://blog.csdn.net/h273979586/article/details/115596602",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sentinel使用Nacos持久化并动态更新配置"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("一开始用网上的一些资料保存到nacos，但是直接在Sentinel Dashboard中修改规则配置，配置中心的配置不会发生变化。")]),t._v(" "),a("p",[t._v("这里是个坑，还找了一段时间的bug。用上面的博客修改源码可以实现，亲测好使的。")]),t._v(" "),a("h1",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/alibaba/Sentinel/wiki",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.jianshu.com/p/af42e188fcf7",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sentinel持久化规则"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);