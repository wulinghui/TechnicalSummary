(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{505:function(v,_,i){"use strict";i.r(_);var a=i(7),l=Object(a.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),_("p",[v._v("JVM 、mysql、并发、redis、nettry、zookeeper、设计模式、微服务、spring源码、网络基础、项目实战。")]),v._v(" "),_("p",[v._v("JVM、mysql、并发、redis、kafka、spring-boot、微服务、项目、设计模式、网络（nettry）")]),v._v(" "),_("h1",{attrs:{id:"javase"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#javase"}},[v._v("#")]),v._v(" JavaSE")]),v._v(" "),_("h2",{attrs:{id:"其他问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#其他问题"}},[v._v("#")]),v._v(" 其他问题")]),v._v(" "),_("ol",[_("li",[v._v("==和equals")]),v._v(" "),_("li",[v._v("ArrayList和LinkedList有哪些区别")]),v._v(" "),_("li",[v._v("List和Set")]),v._v(" "),_("li",[v._v("HashMap的扩容机制原理")]),v._v(" "),_("li",[v._v("HashMap的Put方法")]),v._v(" "),_("li",[v._v("Jdk1.7到Jdk1.8 HashMap 发生了什么变化(底层)")]),v._v(" "),_("li",[v._v("HashMap和HashTable的区别及底层实现")]),v._v(" "),_("li",[v._v("ConcurrentHashMap的扩容机制，ConcurrentHashMap原理简述，jdk7和jdk8的区别")]),v._v(" "),_("li",[v._v("ConcurrentHashMap 如何保证线程安全，jdk1.8 有什么变化")]),v._v(" "),_("li",[v._v("CopyOnWriteArrayList的底层原理是怎样的")]),v._v(" "),_("li",[v._v("final")]),v._v(" "),_("li",[v._v("hashcode和equals")]),v._v(" "),_("li",[v._v("java中的异常体系")]),v._v(" "),_("li",[v._v("JDK、JRE、JVM区别和联系")]),v._v(" "),_("li",[v._v("String、StringBuffer、StringBuilder的区别")]),v._v(" "),_("li",[v._v("StringBuffer、StringBuilder区别及使用场景")]),v._v(" "),_("li",[v._v("Jdk1.7到Jdk1.8 java虚拟机发生了什么变化")]),v._v(" "),_("li",[v._v("接口和抽象类")]),v._v(" "),_("li",[v._v("泛型中extends和super的区别")]),v._v(" "),_("li",[v._v("深拷贝和浅拷贝")]),v._v(" "),_("li",[v._v("面向对象")]),v._v(" "),_("li",[v._v("重载和重写的区别")])]),v._v(" "),_("h1",{attrs:{id:"经典算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#经典算法"}},[v._v("#")]),v._v(" 经典算法")]),v._v(" "),_("p",[v._v("01-链表反转-迭代")]),v._v(" "),_("p",[v._v("02-链表反转-递归")]),v._v(" "),_("p",[v._v("03-统计素数个数-暴力算法")]),v._v(" "),_("p",[v._v("04-统计素数个数-埃氏筛选")]),v._v(" "),_("p",[v._v("05-删除排序数组中的重复项")]),v._v(" "),_("p",[v._v("06-寻找数组的中心下标")]),v._v(" "),_("p",[v._v("07-x的平方根-二分查找")]),v._v(" "),_("p",[v._v("08-x的平方根-牛顿迭代")]),v._v(" "),_("p",[v._v("09-数组中三个数的最大乘积")]),v._v(" "),_("p",[v._v("10-两数之和-无序数组")]),v._v(" "),_("p",[v._v("11-两数之和-有序数组")]),v._v(" "),_("p",[v._v("12-斐波那契数列-三种解法")]),v._v(" "),_("p",[v._v("13-排列硬币-三种解法")]),v._v(" "),_("p",[v._v("14-环形链表")]),v._v(" "),_("p",[v._v("15-合并两个有序数组")]),v._v(" "),_("p",[v._v("16-子数组最大平均数")]),v._v(" "),_("p",[v._v("17-二叉树最小深度-深度优先")]),v._v(" "),_("p",[v._v("18-二叉树最小深度-广度优先")]),v._v(" "),_("p",[v._v("19-最长连续递增序列-贪心算法")]),v._v(" "),_("p",[v._v("20-柠檬水找零-贪心算法")]),v._v(" "),_("p",[v._v("21-三角形的最大周长-贪心算法")]),v._v(" "),_("p",[v._v("22-二叉树遍历")]),v._v(" "),_("p",[v._v("23-二叉树遍历-前序-递归")]),v._v(" "),_("p",[v._v("24-二叉树遍历-中序-递归")]),v._v(" "),_("p",[v._v("25-二叉树遍历-后序-递归")]),v._v(" "),_("p",[v._v("26-二叉树遍历-层序-递归")]),v._v(" "),_("p",[v._v("27-二叉树遍历-前序-迭代")]),v._v(" "),_("p",[v._v("28-二叉树遍历-中序-迭代")]),v._v(" "),_("p",[v._v("29-二叉树遍历-后序-迭代")]),v._v(" "),_("p",[v._v("30-二叉树遍历-层序-迭代")]),v._v(" "),_("p",[v._v("31-二叉树遍历-线索二叉树-morris")]),v._v(" "),_("p",[v._v("32-二叉树遍历-前中序-morris")]),v._v(" "),_("p",[v._v("33-二叉树遍历-后序-morris")]),v._v(" "),_("p",[v._v("34-省份数量")]),v._v(" "),_("p",[v._v("35-省份数量-深度优先")]),v._v(" "),_("p",[v._v("36-省份数量-广度优先")]),v._v(" "),_("p",[v._v("37-省份数量-并查集")]),v._v(" "),_("p",[v._v("38-预测赢家-石子游戏")]),v._v(" "),_("p",[v._v("39-预测赢家-递归")]),v._v(" "),_("p",[v._v("40-预测赢家-动态规划")]),v._v(" "),_("p",[v._v("41-香槟塔")]),v._v(" "),_("p",[v._v("42-井字游戏")]),v._v(" "),_("p",[v._v("43-字符串搜索-BF和RK")]),v._v(" "),_("p",[v._v("44-字符串搜索-BM")]),v._v(" "),_("p",[v._v("45-字符串搜索-KMP算法")]),v._v(" "),_("p",[v._v("46-打家劫舍-动态规划")]),v._v(" "),_("p",[v._v("47-打家劫舍2-动态规划")]),v._v(" "),_("p",[v._v("48-打家劫舍3-动态规划")]),v._v(" "),_("p",[v._v("49-Dota2参议院-贪心")]),v._v(" "),_("p",[v._v("50优势洗牌(田忌赛马)-贪心")]),v._v(" "),_("h1",{attrs:{id:"java并发"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#java并发"}},[v._v("#")]),v._v(" Java并发")]),v._v(" "),_("h2",{attrs:{id:"其他问题-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#其他问题-2"}},[v._v("#")]),v._v(" 其他问题")]),v._v(" "),_("ol",[_("li",[v._v("CountDownLatch和Semaphore的区别和底层原理")]),v._v(" "),_("li",[v._v("ReentrantLock中tryLock()和lock()方法的区别")]),v._v(" "),_("li",[v._v("ReentrantLock中的公平锁和非公平锁的底层实现")]),v._v(" "),_("li",[v._v("sleep、wait、join、yield")]),v._v(" "),_("li",[v._v("Sychronized的偏向锁、轻量级锁、重量级锁")]),v._v(" "),_("li",[v._v("sychronized的自旋锁、偏向锁、轻量级锁、重量级锁，分别介绍和联系")]),v._v(" "),_("li",[v._v("Sychronized和ReentrantLock的区别")]),v._v(" "),_("li",[v._v("ThreadLocal的底层原理")]),v._v(" "),_("li",[v._v("ThreadLocal的原理的使用场景")]),v._v(" "),_("li",[v._v("ThreadLocal内存泄露问题，如何避免")]),v._v(" "),_("li",[v._v("Thread和Runnable")]),v._v(" "),_("li",[v._v("线程的生命周期及状态")]),v._v(" "),_("li",[v._v("说说你对守护线程的理解")]),v._v(" "),_("li",[v._v("如何查看线程死锁，Java死锁如何避免")]),v._v(" "),_("li",[v._v("线程之间如何进行通讯的")]),v._v(" "),_("li",[v._v("并发、并行、串行")]),v._v(" "),_("li",[v._v("并发三大特性")]),v._v(" "),_("li",[v._v("对线程安全的理解")]),v._v(" "),_("li",[v._v("并发编程三要素")]),v._v(" "),_("li",[v._v("如何理解volatile关键字，他是如何保证可见性，有序性")]),v._v(" "),_("li",[v._v("简述线程池原理，FixedThreadPool用的阻塞队列是什么")]),v._v(" "),_("li",[v._v("为什么使用线程池，参数解释")]),v._v(" "),_("li",[v._v("线程池处理流程")]),v._v(" "),_("li",[v._v("如果你提交任务时，线程池队列已满，这时会发生什么")]),v._v(" "),_("li",[v._v("线程池的底层工作原理")]),v._v(" "),_("li",[v._v("线程池线程复用的原理")]),v._v(" "),_("li",[v._v("线程池中阻塞队列的作用？为什么是先添加列队而不是先创建最大线程")])]),v._v(" "),_("h1",{attrs:{id:"jvm"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#jvm"}},[v._v("#")]),v._v(" JVM")]),v._v(" "),_("ol",[_("li",[v._v("JAVA类加载")]),v._v(" "),_("li",[v._v("java类加载器有哪些")]),v._v(" "),_("li",[v._v("类加载器双亲委派模型")]),v._v(" "),_("li",[v._v("JVM内存模型")]),v._v(" "),_("li",[v._v("JVM有哪些垃圾回收器")]),v._v(" "),_("li",[v._v("JVM有哪些垃圾回收算法")]),v._v(" "),_("li",[v._v("怎么确定一个对象是不是垃圾 (GC如何判断对象可以被回收)")]),v._v(" "),_("li",[v._v("JVM中哪些可以作为gc root")]),v._v(" "),_("li",[v._v("JVM中哪些是线程共享区")]),v._v(" "),_("li",[v._v("你们项目如何排查JVM问题")]),v._v(" "),_("li",[v._v("如何进行JVM调优")]),v._v(" "),_("li",[v._v("说一下JVM中，哪些是共享区，哪些可以作为gc root")]),v._v(" "),_("li",[v._v("对象在JVM中经历的过程")]),v._v(" "),_("li",[v._v("Java的内存结构，堆分为哪几部分，默认年龄多大进入老年代")]),v._v(" "),_("li",[v._v("什么是字节码，作用是什么")])]),v._v(" "),_("h1",{attrs:{id:"mysql"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[v._v("#")]),v._v(" Mysql")]),v._v(" "),_("h2",{attrs:{id:"其他问题-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#其他问题-3"}},[v._v("#")]),v._v(" 其他问题")]),v._v(" "),_("ol",[_("li",[v._v("ACID靠什么保证的")]),v._v(" "),_("li",[v._v("B树和B+树的区别，为什么Mysql使用B+树")]),v._v(" "),_("li",[v._v("Explain语句结果中各个字段分表表示什么")]),v._v(" "),_("li",[v._v("Innodb是如何实现事务的")]),v._v(" "),_("li",[v._v("MySQL的锁有哪些")]),v._v(" "),_("li",[v._v("MySQL集群如何搭建")]),v._v(" "),_("li",[v._v("mysql聚簇和非聚簇索引的区别")]),v._v(" "),_("li",[v._v("Mysql慢查询该如何优化？")]),v._v(" "),_("li",[v._v("mysql索引结构，各自的优劣")]),v._v(" "),_("li",[v._v("MySQL有哪几种数据存储引擎")]),v._v(" "),_("li",[v._v("mysql执行计划怎么看")]),v._v(" "),_("li",[v._v("mysql主从同步原理")]),v._v(" "),_("li",[v._v("Mysql数据库中，什么情况下设置了索引但无法使用")]),v._v(" "),_("li",[v._v("存储拆分后如何解决唯一主键")]),v._v(" "),_("li",[v._v("海量数据下，如何快速查找一条记录")]),v._v(" "),_("li",[v._v("简述Myisam和Innodb的区别")]),v._v(" "),_("li",[v._v("简述mysql中索引类型及对数据库的性能的影响")]),v._v(" "),_("li",[v._v("事务的基本特性和隔离级别")]),v._v(" "),_("li",[v._v("如何实现分库分表")]),v._v(" "),_("li",[v._v("什么是MVCC")]),v._v(" "),_("li",[v._v("什么是脏读、幻读、不可重复读")]),v._v(" "),_("li",[v._v("事务的基本特性和隔离级别")]),v._v(" "),_("li",[v._v("索引的基本原理")]),v._v(" "),_("li",[v._v("索引的设计原则")]),v._v(" "),_("li",[v._v("索引覆盖是什么")]),v._v(" "),_("li",[v._v("谈谈如何对MySQL进行分库分表")]),v._v(" "),_("li",[v._v("最左前缀原则是什么")])]),v._v(" "),_("h1",{attrs:{id:"redis"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[v._v("#")]),v._v(" Redis")]),v._v(" "),_("h2",{attrs:{id:"其他问题-4"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#其他问题-4"}},[v._v("#")]),v._v(" 其他问题")]),v._v(" "),_("ol",[_("li",[v._v("说一下你知道的redis高可用方案")]),v._v(" "),_("li",[v._v("如何避免缓存穿透、缓存击穿、缓存雪崩")]),v._v(" "),_("li",[v._v("如何保证数据库与缓存的一致性")]),v._v(" "),_("li",[v._v("为什么使用缓存")]),v._v(" "),_("li",[v._v("简述redis主从同步机制")]),v._v(" "),_("li",[v._v("简述redis事务实现")]),v._v(" "),_("li",[v._v("简述redis分布式锁实现")]),v._v(" "),_("li",[v._v("简述redis九大数据结构，分别有哪些典型的应用场景？")]),v._v(" "),_("li",[v._v("缓存过期都有哪些策略，常见的缓存淘汰算法")]),v._v(" "),_("li",[v._v("分布式系统中常用的缓存方案有哪些")]),v._v(" "),_("li",[v._v("布隆过滤器原理，优缺点")]),v._v(" "),_("li",[v._v("Redis集群策略，redis集群方案")]),v._v(" "),_("li",[v._v("redis的持久化机制")]),v._v(" "),_("li",[v._v("Redis线程模型，单线程为什么快")]),v._v(" "),_("li",[v._v("Redis如何设置key的过期时间")]),v._v(" "),_("li",[v._v("RDB和AOF机制")])]),v._v(" "),_("h1",{attrs:{id:"ssm"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ssm"}},[v._v("#")]),v._v(" SSM")]),v._v(" "),_("h2",{attrs:{id:"其他问题-5"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#其他问题-5"}},[v._v("#")]),v._v(" 其他问题")]),v._v(" "),_("ol",[_("li",[v._v("什么是Spring，如何实现一个IOC容器，对IOC的理解")]),v._v(" "),_("li",[v._v("什么的是bean的自动装配，有哪些方式")]),v._v(" "),_("li",[v._v("如何理解springboot的starter，springboot自动配置原理")]),v._v(" "),_("li",[v._v("SpringBoot中配置文件的加载顺序是怎样的？")]),v._v(" "),_("li",[v._v("Spring中Bean是线程安全的吗")]),v._v(" "),_("li",[v._v("介绍一下Spring，读过源码介绍一下大致流程，简述spring bean的生命周期，Spring中的Bean创建的生命周期有哪些步骤")]),v._v(" "),_("li",[v._v("Spring中Bean是线程安全的吗")]),v._v(" "),_("li",[v._v("spring支持的bean作用域")]),v._v(" "),_("li",[v._v("Spring容器的启动流程是怎样的")]),v._v(" "),_("li",[v._v("Spring如何处理循环依赖问题")]),v._v(" "),_("li",[v._v("Spring中后置处理器的作用")]),v._v(" "),_("li",[v._v("Spring用到了哪些设计模式")]),v._v(" "),_("li",[v._v("对Aop的理解，如何实现AOP，项目哪些地方用到了AOP")]),v._v(" "),_("li",[v._v("说一下Spring的事务机制，Spring中的事务是如何实现的，Spring如何处理事务，事务的实现方式原理以及隔离级别")]),v._v(" "),_("li",[v._v("spring的事务传播机制")]),v._v(" "),_("li",[v._v("说说常用的SpringBoot注解，及其实现")]),v._v(" "),_("li",[v._v("什么时候@Transactional失效")]),v._v(" "),_("li",[v._v("还读过哪些框架源码介绍一下你还熟悉的")]),v._v(" "),_("li",[v._v("springmvc的九大组件")]),v._v(" "),_("li",[v._v("springmvc工作流程")]),v._v(" "),_("li",[v._v("SpringMVC中的控制器是不是单例模式")]),v._v(" "),_("li",[v._v("mybatis和hibernate的对比，mybatis的优缺点")]),v._v(" "),_("li",[v._v("spring、springmvc、springboot的区别")]),v._v(" "),_("li",[v._v("SpringBoot是如何启动Tomcat的")]),v._v(" "),_("li",[v._v("Mybatis中#{}和${}的区别是什么？")]),v._v(" "),_("li",[v._v("ApplicationContext和BeanFactory有什么区别")]),v._v(" "),_("li",[v._v("mybatis插件运行原理及开发流程")])]),v._v(" "),_("h1",{attrs:{id:"分布式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#分布式"}},[v._v("#")]),v._v(" 分布式")]),v._v(" "),_("h2",{attrs:{id:"其他问题-6"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#其他问题-6"}},[v._v("#")]),v._v(" 其他问题")]),v._v(" "),_("ol",[_("li",[v._v("雪花算法原理")]),v._v(" "),_("li",[v._v("为什么Zookeeper可以用来作为注册中心")]),v._v(" "),_("li",[v._v("如何设计一个分布式锁，数据库实现分布式锁的问题及解决方案，分布式锁解决方案，分布式锁的使用场景是什么？有哪些实现方案？")]),v._v(" "),_("li",[v._v("数据一致性模型有哪些")]),v._v(" "),_("li",[v._v("什么是分布式事务？有哪些实现方案？")]),v._v(" "),_("li",[v._v("为什么 Dubbo 不用 JDK 的 SPI，而是要自己实现")]),v._v(" "),_("li",[v._v("什么是ZAB协议")]),v._v(" "),_("li",[v._v("简述paxos算法")]),v._v(" "),_("li",[v._v("简述raft算法")]),v._v(" "),_("li",[v._v("什么是CAP理论")]),v._v(" "),_("li",[v._v("什么是BASE理论")]),v._v(" "),_("li",[v._v("什么是RPC")]),v._v(" "),_("li",[v._v("如何实现接口幂等性")]),v._v(" "),_("li",[v._v("请谈谈ZK对事务性的支持")]),v._v(" "),_("li",[v._v("能说下Dubbo的工作流程吗")]),v._v(" "),_("li",[v._v("简述你对RPC、RMI的理解")]),v._v(" "),_("li",[v._v("讲下Zookeeper watch机制")]),v._v(" "),_("li",[v._v("简述zk中的观察者机制")]),v._v(" "),_("li",[v._v("简述zk的命名服务、配置管理、集群管理")]),v._v(" "),_("li",[v._v("简述zk的典型应用场景")]),v._v(" "),_("li",[v._v("简述TCC事务模型")]),v._v(" "),_("li",[v._v("简述dubbo服务引入过程")]),v._v(" "),_("li",[v._v("简述dubbo服务暴露过程")]),v._v(" "),_("li",[v._v("简述dubbo的SPI机制")]),v._v(" "),_("li",[v._v("简述dubbo服务调用过程")]),v._v(" "),_("li",[v._v("集群、分布式、SOA、微服务的概念及区别")]),v._v(" "),_("li",[v._v("简述dubbo的分层设计")]),v._v(" "),_("li",[v._v("负载均衡策略有哪些")]),v._v(" "),_("li",[v._v("负载均衡算法、类型")]),v._v(" "),_("li",[v._v("分布式系统的设计目标")]),v._v(" "),_("li",[v._v("分布式事务如何处理，分布式事务解决方案，分布式事务有哪些解决方案")]),v._v(" "),_("li",[v._v("分布式缓存寻址算法")]),v._v(" "),_("li",[v._v("分布式架构下，Session 共享有什么方案")]),v._v(" "),_("li",[v._v("分布式id生成方案，分布式ID是什么？有哪些解决方案？")]),v._v(" "),_("li",[v._v("对比两阶段，三阶段有哪些改进")]),v._v(" "),_("li",[v._v("定时任务实现原理")]),v._v(" "),_("li",[v._v("Dubbo是如何做系统交互的")]),v._v(" "),_("li",[v._v("Dubbo的负载均衡策略")]),v._v(" "),_("li",[v._v("Zookeeper中的领导者选举的流程是怎样的？")]),v._v(" "),_("li",[v._v("Zookeeper集群中节点之间数据是如何同步的")]),v._v(" "),_("li",[v._v("zk中一个客户端修改了某个节点的数据，其他客户端能够马上获取到这个最新数据吗")]),v._v(" "),_("li",[v._v("zk和eureka的区别")]),v._v(" "),_("li",[v._v("zk实际如何存储dubbo生产者和消费者信息")]),v._v(" "),_("li",[v._v("zk分布式锁实现原理")]),v._v(" "),_("li",[v._v("zk的会话管理机制")]),v._v(" "),_("li",[v._v("zk的数据模型和节点类型")]),v._v(" "),_("li",[v._v("zk的数据同步原理")]),v._v(" "),_("li",[v._v("zk的watch机制实现原理")]),v._v(" "),_("li",[v._v("zk的初始化选举和崩溃选举过程")]),v._v(" "),_("li",[v._v("session的分布式方案")])]),v._v(" "),_("p",[v._v("Spring Cloud和Dubbo的区别")]),v._v(" "),_("p",[v._v("Quorum、WARO机制")]),v._v(" "),_("p",[v._v("dubbo中Zk集群挂掉，发布者和订阅者还能通信么")]),v._v(" "),_("p",[v._v("Dubbo支持的注册中心有哪些")]),v._v(" "),_("p",[v._v("Dubbo支持哪些负载均衡策略")]),v._v(" "),_("p",[v._v("dubbo支持的协议有哪些")]),v._v(" "),_("p",[v._v("Dubbo是什么？能做什么？")]),v._v(" "),_("p",[v._v("Dubbo 的整体架构设计及分层")]),v._v(" "),_("p",[v._v("Dubbo是如何完成服务导出的？")]),v._v(" "),_("p",[v._v("Dubbo是如何完成服务引入的？")]),v._v(" "),_("p",[v._v("CAP理论，BASE理论")]),v._v(" "),_("p",[v._v("dubbo和springcloud对比")]),v._v(" "),_("p",[v._v("dubbo集群容错策略有哪些")]),v._v(" "),_("p",[v._v("Dubbo的架构设计是怎样的？")]),v._v(" "),_("h1",{attrs:{id:"微服务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#微服务"}},[v._v("#")]),v._v(" 微服务")]),v._v(" "),_("p",[v._v("怎么拆分微服务P2-DDD")]),v._v(" "),_("p",[v._v("怎么拆分微服务P3-中台")]),v._v(" "),_("p",[v._v("谈谈你对微服务的理解")]),v._v(" "),_("p",[v._v("怎么拆分微服务P1")]),v._v(" "),_("p",[v._v("项目中怎么保证微服务敏捷开发")]),v._v(" "),_("p",[v._v("什么是服务雪崩？什么是服务限流？")]),v._v(" "),_("p",[v._v("什么是服务降级、什么是熔断")]),v._v(" "),_("p",[v._v("springcloud核心组件及其作用")]),v._v(" "),_("p",[v._v("什么是Hystrix？简述实现机制")]),v._v(" "),_("p",[v._v("SpringCloud和SpringCloudAlibaba都有哪些组件")]),v._v(" "),_("p",[v._v("什么是服务熔断？什么是服务降级？区别是什么？")]),v._v(" "),_("p",[v._v("高并发场景下如何实现系统限流")]),v._v(" "),_("p",[v._v("京东一面：SpringCloud各组件功能，与Dubbo的区别")]),v._v(" "),_("p",[v._v("SOA、分布式、微服务之间有什么关系和区别？")]),v._v(" "),_("p",[v._v("Spring Cloud和Dubbo有哪些区别？")]),v._v(" "),_("p",[v._v("Spring Cloud有哪些常用组件，作用是什么？")]),v._v(" "),_("h1",{attrs:{id:"消息中间件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#消息中间件"}},[v._v("#")]),v._v(" 消息中间件")]),v._v(" "),_("p",[v._v("Kafka为什么比RocketMQ的吞吐量要高")]),v._v(" "),_("p",[v._v("Kafka的Pull和Push分别有什么优缺点")]),v._v(" "),_("p",[v._v("Kafka是pull？push？优劣势分析")]),v._v(" "),_("p",[v._v("Kafka、ActiveMQ、RabbitMQ、RocketMQ 对比")]),v._v(" "),_("p",[v._v("Kafka消息高可靠解决方案")]),v._v(" "),_("p",[v._v("kafka高性能高吞吐的原因")]),v._v(" "),_("p",[v._v("Kafka消息丢失的场景及解决方案")]),v._v(" "),_("p",[v._v("Kafka中zk的作用")]),v._v(" "),_("p",[v._v("Kafka中高性能的原因分析")]),v._v(" "),_("p",[v._v("MQ如何保证消费幂等性")]),v._v(" "),_("p",[v._v("MQ如何保证分布式事务的最终一致性")]),v._v(" "),_("p",[v._v("MQ如何进行产品选型")]),v._v(" "),_("p",[v._v("MQ如何保证消息的高效读写")]),v._v(" "),_("p",[v._v("MQ如何保证消息顺序")]),v._v(" "),_("p",[v._v("MQ如何保证消息不丢失P1")]),v._v(" "),_("p",[v._v("MQ如何保证消息不丢失P2")]),v._v(" "),_("p",[v._v("rabbitmq的镜像队列原理")]),v._v(" "),_("p",[v._v("MQ有什么用")]),v._v(" "),_("p",[v._v("rabbitmq的死信队列、延迟队列原理")]),v._v(" "),_("p",[v._v("RabbitMQ如何保证消息的可靠性传输")]),v._v(" "),_("p",[v._v("Rabbitmq事务消息")]),v._v(" "),_("p",[v._v("RabbitMQ如何确保消息发送 ？ 消息接收？")]),v._v(" "),_("p",[v._v("rabbitmq可以直连队列么")]),v._v(" "),_("p",[v._v("RocketMQ 如何保证不丢消息")]),v._v(" "),_("p",[v._v("RabbitMQ死信队列、延时队列")]),v._v(" "),_("p",[v._v("RocketMQ的底层实现原理")]),v._v(" "),_("p",[v._v("RocketMQ 事务消息原理")]),v._v(" "),_("p",[v._v("简述kafka的rebalance机制")]),v._v(" "),_("p",[v._v("简述kafka的副本同步机制")]),v._v(" "),_("p",[v._v("RocketMQ 怎么实现顺序消息")]),v._v(" "),_("p",[v._v("简述kafka架构设计")]),v._v(" "),_("p",[v._v("简述rabbitmq的持久化机制")]),v._v(" "),_("p",[v._v("简述RabbitMq的交换机类型")]),v._v(" "),_("p",[v._v("简述rabbitmq的普通集群模式")]),v._v(" "),_("p",[v._v("简述RabbitMQ的架构设计")]),v._v(" "),_("p",[v._v("简述RabbitMQ架构设计")]),v._v(" "),_("p",[v._v("简述RabbitMQ事务消息机制")]),v._v(" "),_("p",[v._v("京东二面：消息队列如何保证消息可靠传输")]),v._v(" "),_("p",[v._v("简述RocketMQ 架构设计")]),v._v(" "),_("p",[v._v("简述RocketMQ 持久化机制")]),v._v(" "),_("p",[v._v("死信队列是什么？延时队列是什么？")]),v._v(" "),_("p",[v._v("如何保证消息不被重复消费")]),v._v(" "),_("p",[v._v("消息队列有哪些作用")]),v._v(" "),_("p",[v._v("消息队列如何保证消息可靠传输")]),v._v(" "),_("p",[v._v("如何设计一个MQ")]),v._v(" "),_("p",[v._v("消息队列的优缺点，使用场景")]),v._v(" "),_("h1",{attrs:{id:"网络与io"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#网络与io"}},[v._v("#")]),v._v(" 网络与IO")]),v._v(" "),_("p",[v._v("网络4")]),v._v(" "),_("p",[v._v("网路2")]),v._v(" "),_("p",[v._v("网络3")]),v._v(" "),_("p",[v._v("什么是认证和授权")]),v._v(" "),_("p",[v._v("网络1")]),v._v(" "),_("p",[v._v("什么是OAuth2.0协议P2")]),v._v(" "),_("p",[v._v("什么是SSO")]),v._v(" "),_("p",[v._v("什么是嵌入式服务器，为什么使用嵌入式服务器")]),v._v(" "),_("p",[v._v("什么是OAuth2.0协议P1")]),v._v(" "),_("p",[v._v("如何设计一个开放授权平台")]),v._v(" "),_("p",[v._v("什么是CSRF攻击")]),v._v(" "),_("p",[v._v("蚂蚁一面：HTTPS是如何保证安全传输的")]),v._v(" "),_("p",[v._v("浏览器发出一个请求到收到响应经历了哪些步骤？")]),v._v(" "),_("p",[v._v("蚂蚁一面：epoll和poll的区别")]),v._v(" "),_("p",[v._v("Tomcat中为什么要使用自定义类加载器")]),v._v(" "),_("p",[v._v("零拷贝是什么")]),v._v(" "),_("p",[v._v("跨域请求是什么？有什么问题？怎么解决？")]),v._v(" "),_("p",[v._v("京东二面：TCP的三次握手和四次挥手")]),v._v(" "),_("p",[v._v("cookie和session有什么区别-问题2和3")]),v._v(" "),_("p",[v._v("Tomcat如何进行优化？")]),v._v(" "),_("p",[v._v("TCP的三次握手和四次挥手")]),v._v(" "),_("p",[v._v("HTTP和HTTPS的区别")]),v._v(" "),_("p",[v._v("Netty是什么？和Tomcat有什么区别？特点是什么？")]),v._v(" "),_("p",[v._v("Netty的高性能体现在哪些方面")]),v._v(" "),_("p",[v._v("Netty的线程模型是怎么样的")]),v._v(" "),_("p",[v._v("BIO、NIO、AIO分别是什么")]),v._v(" "),_("h1",{attrs:{id:"设计模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[v._v("#")]),v._v(" 设计模式")]),v._v(" "),_("p",[v._v("1.设计模式-单例设计模式")]),v._v(" "),_("p",[v._v("2.设计模式-工厂方法模式")]),v._v(" "),_("p",[v._v("3.设计模式-抽象工厂模式")]),v._v(" "),_("p",[v._v("4.设计模式-建造者模式")]),v._v(" "),_("p",[v._v("5.设计模式-原型模式")]),v._v(" "),_("p",[v._v("6.设计模式-享元模式")]),v._v(" "),_("p",[v._v("7.设计模式-门面模式")]),v._v(" "),_("p",[v._v("8.设计模式-适配器模式")]),v._v(" "),_("p",[v._v("9.设计模式-装饰器模式")]),v._v(" "),_("p",[v._v("10.设计模式-策略模式")]),v._v(" "),_("p",[v._v("11.设计模式-模板方法模式")]),v._v(" "),_("p",[v._v("12.设计模式-观察者模式")]),v._v(" "),_("p",[v._v("13.设计模式-责任链模式")]),v._v(" "),_("h1",{attrs:{id:"es"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#es"}},[v._v("#")]),v._v(" ES")]),v._v(" "),_("p",[v._v("看以下代码回答问题（一）")]),v._v(" "),_("p",[v._v("看以下代码回答问题（三）")]),v._v(" "),_("p",[v._v("如何进行中文分词")]),v._v(" "),_("p",[v._v("什么是倒排索引")]),v._v(" "),_("p",[v._v("蚂蚁一面：强平衡二叉树和弱平衡二叉树有什么区别")]),v._v(" "),_("p",[v._v("蚂蚁一面：二叉搜索树和平衡二叉树有什么关系")]),v._v(" "),_("p",[v._v("蚂蚁二面：设计模式有哪些大类，及熟悉其中哪些设计模式")]),v._v(" "),_("p",[v._v("京东一面：遇到过哪些设计模式")]),v._v(" "),_("p",[v._v("看以下代码回答问题（二）")]),v._v(" "),_("p",[v._v("京东一面：项目及主要负责的模块")]),v._v(" "),_("p",[v._v("京东二面：图的深度遍历和广度遍历")]),v._v(" "),_("p",[v._v("京东一面：Maven中Package和Install的区别")]),v._v(" "),_("p",[v._v("ES写入数据与查询数据的原理")]),v._v(" "),_("p",[v._v("京东一面：说说你常用的Linux基本操作命令")]),v._v(" "),_("p",[v._v("京东二面：画出项目架构图，介绍自己所处的模块")]),v._v(" "),_("p",[v._v("京东二面：快排算法")]),v._v(" "),_("p",[v._v("ES部署时如何优化")]),v._v(" "),_("p",[v._v("ES了解多少")]),v._v(" "),_("p",[v._v("阿里二面：聊聊你最有成就感的项目")]),v._v(" "),_("p",[v._v("阿里二面：自己最有挑战的项目、难点")])])}),[],!1,null,null,null);_.default=l.exports}}]);